{"version":3,"file":"colorconvertor.js","names":["_inputParser","require","_conversions","_utilities","_namedColors","_interopRequireDefault","obj","__esModule","ColorConvertor","colorInput","_colorInput","_colorObj","inputParser","_rgbObj","toRgbBase","prototype","getInput","isValid","value","undefined","toRgb","toRgbString","_this$_rgbObj","format","_this$_rgbObj$value","r","g","b","a","concat","toHsv","rgbToHsv","toHsvString","_rgbToHsv","h","s","v","toHsl","rgbToHsl","toHslString","_rgbToHsl","l","toHex","rgbToHex","toHexString","toHexA","_this$_rgbObj$value2","getAlpha","rgbaToHexA","toHexAString","getBrightness","calculateBrightness","getLuminance","calculateLuminance","isDark","isLight","getFormat","setAlpha","newAlpha","Error","_this$_rgbObj$value3","toNormalizedRgb","_this$_rgbObj$value4","toNormalizedRgba","_this$_rgbObj$value5","toName","hex","truncateHex","color","namedColors","toPercentageRgb","_this$_rgbObj$value6","toPercentageRgbString","_this$toPercentageRgb","_default","exports"],"sources":["../../src/colorconvertor.ts"],"sourcesContent":["/*\n    Color Convertor\n    Owen Rees, MIT License, 2024\n\n    based on https://github.com/bgrins/TinyColor\n*/\n\nimport { type ColorConvertorInstance, type RgbObject } from './types'\nimport { inputParser } from './utils/inputParser'\nimport { rgbaToHexA, rgbToHex, rgbToHsl, rgbToHsv, toRgbBase } from './utils/conversions'\nimport { calculateBrightness, calculateLuminance, truncateHex } from './utils/utilities'\nimport namedColors from './utils/namedColors'\n\nfunction ColorConvertor (this: ColorConvertorInstance, colorInput: string): void {\n  this._colorInput = colorInput // string input of any color format\n  this._colorObj = inputParser(this._colorInput) // Color info object. E.g. { format: 'hex', value: '#ffffff' }\n  this._rgbObj = toRgbBase(this._colorObj) // RGB color info object. E.g. { format: 'rgb', value: { r: 255, g: 255, b: 255 }\n}\n\nColorConvertor.prototype = {\n  getInput () {\n    return this._colorObj\n  },\n  isValid () {\n    return this._colorObj.value !== undefined\n  },\n  toRgb (this: ColorConvertorInstance) {\n    return toRgbBase(this.getInput())\n  },\n  toRgbString () {\n    const { format, value: { r, g, b, a } } = this._rgbObj\n    return `${format}(${r}, ${g}, ${b}${a !== undefined ? `, ${a}` : ''})`\n  },\n  toHsv () {\n    return rgbToHsv(this._rgbObj.value as RgbObject)\n  },\n  toHsvString () {\n    const { h, s, v } = rgbToHsv(this._rgbObj.value as RgbObject)\n    return `hsv(${h}, ${s}%, ${v}%)`\n  },\n  toHsl () {\n    return rgbToHsl(this._rgbObj.value as RgbObject)\n  },\n  toHslString () {\n    const { h, s, l } = rgbToHsl(this._rgbObj.value as RgbObject)\n    return `hsl(${h}, ${s}%, ${l}%)`\n  },\n  toHex () {\n    return rgbToHex(this._rgbObj.value as RgbObject)\n  },\n  toHexString () {\n    return `#${this.toHex()}`\n  },\n  toHexA () {\n    const { r, g, b } = this._rgbObj.value\n    const a = this.getAlpha()\n    return rgbaToHexA({ r, g, b, a })\n  },\n  toHexAString () {\n    return `#${this.toHexA()}`\n  },\n  getBrightness () {\n    return calculateBrightness(this._rgbObj.value as RgbObject)\n  },\n  getLuminance () {\n    return calculateLuminance(this._rgbObj.value as RgbObject)\n  },\n  isDark () {\n    return this.getBrightness() < 128\n  },\n  isLight () {\n    return this.getBrightness() >= 128\n  },\n  getFormat () {\n    return this._rgbObj.format\n  },\n  getAlpha () {\n    let { a } = this._rgbObj.value\n    a = a === undefined ? 1 : a // 100% alpha if working with rgb values\n    return a\n  },\n  setAlpha (newAlpha: number) {\n    if (newAlpha < 0 || newAlpha > 1) {\n      throw new Error('Alpha value must be between 0 and 1')\n    }\n    const { r, g, b } = this._rgbObj.value\n    const a = newAlpha\n    this._rgbObj.value = { r, g, b, a }\n    return this._rgbObj\n  },\n  toNormalizedRgb () {\n    const { r, g, b } = this._rgbObj.value\n    return { r: r / 255, g: g / 255, b: b / 255 }\n  },\n  toNormalizedRgba () {\n    const { r, g, b } = this._rgbObj.value\n    const a = this.getAlpha()\n    return { r: r / 255, g: g / 255, b: b / 255, a }\n  },\n  toName (this: ColorConvertorInstance) {\n    const hex = truncateHex(this.toHex())\n    for (const color in namedColors) {\n      if (namedColors[color] === hex) {\n        return color\n      }\n    }\n    return undefined\n  },\n  // toNearestNamedColor () {\n  //   return 'not implemented'\n  // },\n  // toNearestWebSafeColor () {\n  //   return 'not implemented'\n  // },\n  toPercentageRgb () {\n    const { r, g, b } = this._rgbObj.value\n    return { r: r / 255 * 100, g: g / 255 * 100, b: b / 255 * 100 }\n  },\n  toPercentageRgbString () {\n    const { r, g, b } = this.toPercentageRgb()\n    return `rgb(${r}%, ${g}%, ${b}%)`\n  }\n}\n\nexport default ColorConvertor\n"],"mappings":"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"}