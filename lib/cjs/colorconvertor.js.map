{"version":3,"file":"colorconvertor.js","names":["_inputParser","require","_conversions","_utilities","_namedColors","_interopRequireWildcard","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","o","Symbol","iterator","constructor","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","enumerable","configurable","writable","_toPropertyKey","key","_createClass","protoProps","staticProps","_defineProperty","obj","value","_toPrimitive","String","toPrimitive","Number","ColorConvertor","colorInput","_colorInput","undefined","_colorObj","inputParser","_rgbObj","toRgbBase","getInput","_this$_colorInput","getColorObj","getRgbObj","isValid","setColor","color","toRgb","toRgbString","_this$getRgbObj","g","b","concat","toHsv","rgbToHsv","toHsvString","_rgbToHsv","h","s","v","toHsl","rgbToHsl","toHslString","_rgbToHsl","l","toHex","rgbToHex","toHexString","toHex8","_this$getRgbObj2","getAlpha","rgbaToHex8","toHex8String","toCmy","rgbToCmy","toCmyk","cmyToCmyk","toXyz","rgbToXyz","toNormalizedRgb","toXyzString","_this$toXyz","x","y","z","toLab","xyzToLab","toLabString","_this$toLab","toLch","labToLch","toLchString","_this$toLch","c","getBrightness","calculateBrightness","getLuminance","calculateLuminance","isDark","isLight","getFormat","format","_a","_this$getRgbObj3","setAlpha","newAlpha","Error","_this$getRgbObj4","_this$getRgbObj5","toNormalizedRgba","_this$getRgbObj6","toName","hex","truncateHex","namedColors","toNearestNamedColor","rgb","findClosestColor","namedColorsRgb","toPercentageRgb","_this$getRgbObj7","toPercentageRgbString","_this$toPercentageRgb","equals","color2","_this$getRgbObj8","color2RgbObj","random","Math","floor","clone","readability","l1","l2","max","min","_default","exports"],"sources":["../../src/colorconvertor.ts"],"sourcesContent":["/*\n    Color Convertor\n    Owen Rees, MIT License, 2024\n\n    based on https://github.com/bgrins/TinyColor\n*/\n\nimport {\n  type CmykObject,\n  type ColorObjType,\n  type HslObject,\n  type HsvObject, type LabObject, type LchObject,\n  type RgbObject, type XyzObject\n} from './types'\nimport { inputParser } from './utils/inputParser'\nimport {\n  cmyToCmyk,\n  labToLch,\n  rgbaToHex8,\n  rgbToCmy,\n  rgbToHex,\n  rgbToHsl,\n  rgbToHsv,\n  rgbToXyz,\n  toRgbBase,\n  xyzToLab\n} from './utils/conversions'\nimport { calculateBrightness, calculateLuminance, findClosestColor, truncateHex } from './utils/utilities'\nimport namedColors, { namedColorsRgb } from './utils/namedColors'\n\nclass ColorConvertor {\n  private _colorInput: string | undefined\n  private _colorObj: ColorObjType\n  private _rgbObj: RgbObject\n\n  constructor (colorInput?: string) {\n    this._colorInput = colorInput ?? undefined // string input of any color format\n    this._colorObj = inputParser(this._colorInput) // Color info object. E.g. { format: 'hex', value: '#ffffff' }\n    this._rgbObj = toRgbBase(this._colorObj).value as RgbObject // RGB values object. E.g. { r: 255, g: 255, b: 255 }\n  }\n\n  /*\n    General Methods\n  */\n  getInput (): string {\n    return this._colorInput ?? ''\n  }\n\n  getColorObj (): ColorObjType {\n    return this._colorObj\n  }\n\n  getRgbObj (): RgbObject {\n    return this._rgbObj\n  }\n\n  isValid (): boolean {\n    return this.getColorObj().value !== undefined\n  }\n\n  setColor (color: string): void {\n    this._colorInput = color\n    this._colorObj = inputParser(this.getInput())\n    this._rgbObj = toRgbBase(this.getColorObj()).value as RgbObject\n  }\n\n  // fromRatio () {\n  //   return 'not implemented'\n  // },\n\n  toRgb (): ColorObjType {\n    return toRgbBase(this.getColorObj())\n  }\n\n  toRgbString (): string {\n    const { r, g, b, a } = this.getRgbObj()\n    return `${a !== undefined ? 'rgba' : 'rgb'}(${r}, ${g}, ${b}${a !== undefined ? `, ${a}` : ''})`\n  }\n\n  toHsv (): HsvObject {\n    return rgbToHsv(this.getRgbObj())\n  }\n\n  toHsvString (): string {\n    const { h, s, v } = rgbToHsv(this.getRgbObj())\n    return `hsv(${h}, ${s}%, ${v}%)`\n  }\n\n  toHsl (): HslObject {\n    return rgbToHsl(this.getRgbObj())\n  }\n\n  toHslString (): string {\n    const { h, s, l } = rgbToHsl(this.getRgbObj())\n    return `hsl(${h}, ${s}%, ${l}%)`\n  }\n\n  toHex (): string {\n    return rgbToHex(this.getRgbObj())\n  }\n\n  toHexString (): string {\n    return `#${this.toHex()}`\n  }\n\n  toHex8 (): string {\n    const { r, g, b } = this.getRgbObj()\n    const a = this.getAlpha()\n    return rgbaToHex8({ r, g, b, a })\n  }\n\n  toHex8String (): string {\n    return `#${this.toHex8()}`\n  }\n\n  toCmy (): CmykObject {\n    return rgbToCmy(this.getRgbObj())\n  }\n\n  toCmyk (): CmykObject {\n    return cmyToCmyk(this.toCmy())\n  }\n\n  /*\n    XYZ, CIE-L*ab, CIE-L*Ch(ab)\n    formulae from https://www.easyrgb.com/en/math.php\n  */\n\n  // X, Y and Z output refers to a D65/2Â° standard illuminant.\n  toXyz (): XyzObject {\n    return rgbToXyz(this.toNormalizedRgb())\n  }\n\n  toXyzString (): string {\n    const { x, y, z } = this.toXyz()\n    return `xyz(${x}, ${y}, ${z})`\n  }\n\n  // CIE-L*ab\n  toLab (): LabObject {\n    return xyzToLab(this.toXyz())\n  }\n\n  toLabString (): string {\n    const { l, a, b } = this.toLab()\n    return `lab(${l}, ${a}, ${b})`\n  }\n\n  toLch (): LchObject {\n    return labToLch(this.toLab())\n  }\n\n  toLchString (): string {\n    const { l, c, h } = this.toLch()\n    return `lch(${l}, ${c}, ${h})`\n  }\n\n  getBrightness (): number {\n    return calculateBrightness(this.getRgbObj())\n  }\n\n  getLuminance (): number {\n    return calculateLuminance(this.getRgbObj())\n  }\n\n  isDark (): boolean {\n    return this.getBrightness() < 128\n  }\n\n  isLight (): boolean {\n    return this.getBrightness() >= 128\n  }\n\n  getFormat (): string | undefined {\n    return this.getColorObj().format\n  }\n\n  getAlpha (): number | undefined {\n    let { a } = this.getRgbObj()\n    a = a ?? 1 // 100% alpha if working with rgb values\n    return a\n  }\n\n  setAlpha (newAlpha: number): void {\n    if (newAlpha < 0 || newAlpha > 1) {\n      throw new Error('Alpha value must be between 0 and 1')\n    }\n    const { r, g, b } = this.getRgbObj()\n    const a = newAlpha\n    this._rgbObj = { r, g, b, a }\n  }\n\n  toNormalizedRgb (): RgbObject {\n    const { r, g, b } = this.getRgbObj()\n    return { r: r / 255, g: g / 255, b: b / 255 }\n  }\n\n  toNormalizedRgba (): RgbObject {\n    const { r, g, b } = this.getRgbObj()\n    const a = this.getAlpha()\n    return { r: r / 255, g: g / 255, b: b / 255, a }\n  }\n\n  toName (): string | undefined {\n    const hex = truncateHex(this.toHex())\n    for (const color in namedColors) {\n      if (namedColors[color] === hex) {\n        return color\n      }\n    }\n    return undefined\n  }\n\n  toNearestNamedColor (): string {\n    const rgb = this.getRgbObj()\n    return findClosestColor(rgb, namedColorsRgb)\n  }\n\n  toPercentageRgb (): RgbObject {\n    const { r, g, b } = this.getRgbObj()\n    return { r: r / 255 * 100, g: g / 255 * 100, b: b / 255 * 100 }\n  }\n\n  toPercentageRgbString (): string {\n    const { r, g, b } = this.toPercentageRgb()\n    return `rgb(${r}%, ${g}%, ${b}%)`\n  }\n\n  equals (color2: string): boolean {\n    const { r, g, b } = this.getRgbObj()\n    const color2RgbObj = toRgbBase(inputParser(color2)).value as RgbObject\n    return color2RgbObj.r === r && color2RgbObj.g === g && color2RgbObj.b === b\n  }\n\n  random (): void {\n    this._colorObj = {\n      format: 'rgb',\n      value: {\n        r: Math.floor(Math.random() * 256),\n        g: Math.floor(Math.random() * 256),\n        b: Math.floor(Math.random() * 256)\n      }\n    }\n    this._rgbObj = toRgbBase(this.getColorObj()).value as RgbObject\n  }\n\n  clone (): ColorConvertor {\n    return new ColorConvertor(this.getInput())\n  }\n\n  /*\n    Readability Methods\n      <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n  */\n\n  // Analyze the 2 colors and returns the color contrast defined by WCAG Version 2\n  readability (color2: string): number {\n    const l1: number = this.getLuminance()\n    const l2: number = new ColorConvertor(color2).getLuminance()\n    return (Math.max(l1, l2) + 0.05) / (Math.min(l1, l2) + 0.05)\n  }\n\n  // isReadable (color2: string) {\n  //   const readability = this.readability(color2)\n  //   console.log(readability)\n  // }\n\n  // Combination Methods\n\n  // Utility Methods\n}\n\nexport default ColorConvertor\n"],"mappings":"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"}