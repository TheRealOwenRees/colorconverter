{"version":3,"file":"colorconvertor.js","names":["_inputParser","require","_conversions","_utilities","_namedColors","_interopRequireWildcard","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","o","Symbol","iterator","constructor","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","enumerable","configurable","writable","_toPropertyKey","key","_createClass","protoProps","staticProps","_defineProperty","obj","value","_toPrimitive","String","toPrimitive","Number","ColorConvertor","colorInput","_colorInput","undefined","_colorObj","inputParser","_rgbObj","toRgbBase","getInput","_this$_colorInput","getColorObj","getRgbObj","setInput","setColorObj","colorObj","setRbgObj","rgbObj","toRgb","rgbNormalizedToRgb","toRgbString","_this$toRgb","g","b","concat","isValid","setColor","color","fromRatio","fromPercentageRgb","toHsv","rgbNormalizedToHsv","toHsvString","_this$toHsv","h","s","v","toHsl","rgbNormalizedToHsl","toHslString","_rgbNormalizedToHsl","l","toHex","_rgbToHex","rgbToHex","toHexString","toHex8","_rgbNormalizedToRgb","getAlpha","rgbaToHex8","toHex8String","toCmy","rgbNormalizedToCmy","toCmyk","cmyToCmyk","toXyz","rgbToXyz","toXyzString","_this$toXyz","x","y","z","toLab","xyzToLab","toLabString","_this$toLab","toLch","labToLch","toLchString","_this$toLch","c","getBrightness","calculateBrightness","getLuminance","calculateLuminance","isDark","isLight","getFormat","format","_a","_this$getRgbObj","setAlpha","newAlpha","Error","_this$getRgbObj2","toName","hex","truncateHex","namedColors","toNearestNamedColor","rgb","findClosestColor","namedColorsRgb","toPercentageRgb","_this$getRgbObj3","toPercentageRgbString","_this$toPercentageRgb","equals","color2","random","Math","floor","clone","readability","l1","l2","max","min","_default","exports"],"sources":["../../src/colorconvertor.ts"],"sourcesContent":["/*\n    Color Convertor\n    Owen Rees, MIT License, 2024\n\n    based on https://github.com/bgrins/TinyColor\n*/\n\nimport {\n  type CmykObject,\n  type ColorObjType,\n  type HslObject, type HsvObject, type LabObject, type LchObject,\n  type RgbObject, type XyzObject\n} from './types'\nimport { inputParser } from './utils/inputParser'\nimport {\n  rgbNormalizedToRgb,\n  rgbNormalizedToHsl,\n  toRgbBase,\n  rgbNormalizedToCmy,\n  cmyToCmyk,\n  rgbNormalizedToHsv,\n  rgbToXyz,\n  xyzToLab,\n  labToLch,\n  rgbToHex,\n  rgbaToHex8\n} from './utils/conversions'\nimport { calculateBrightness, calculateLuminance, findClosestColor, truncateHex } from './utils/utilities'\nimport namedColors, { namedColorsRgb } from './utils/namedColors'\n\nclass ColorConvertor {\n  private _colorInput: string | undefined\n  private _colorObj: ColorObjType\n  private _rgbObj: RgbObject\n\n  constructor (colorInput?: string) {\n    this._colorInput = colorInput ?? undefined // string input of any color format\n    this._colorObj = inputParser(this._colorInput) // Color info object created from _colorInput. E.g. { format: 'hex', value: '#ffffff' }\n    this._rgbObj = toRgbBase(this._colorObj) // RGB normalised values object - 0-1. E.g. { r: 1, g: 0.5, b: 0.8 }\n  }\n\n  getInput (): string {\n    return this._colorInput ?? ''\n  }\n\n  getColorObj (): ColorObjType {\n    return this._colorObj\n  }\n\n  getRgbObj (): RgbObject {\n    return this._rgbObj\n  }\n\n  setInput (colorInput: string): void {\n    this._colorInput = colorInput\n  }\n\n  setColorObj (colorObj: ColorObjType): void {\n    this._colorObj = colorObj\n  }\n\n  setRbgObj (rgbObj: RgbObject): void {\n    this._rgbObj = rgbObj\n  }\n\n  /**\n   * Returns the RGB values in the range 0-255\n   * @returns {RgbObject} - RGB values in the range 0-255\n   * @memberof ColorConvertor\n   */\n  toRgb (): RgbObject {\n    return rgbNormalizedToRgb(this.getRgbObj())\n  }\n\n  /**\n   * @returns {string} - RGB values in the range 0-255 as a string\n   * @memberof ColorConvertor\n   * @remarks \"rgb(255, 255, 255)\"\n   */\n  toRgbString (): string {\n    const { r, g, b, a } = this.toRgb()\n    return `${a !== undefined ? 'rgba' : 'rgb'}(${r}, ${g}, ${b}${a !== undefined ? `, ${a}` : ''})`\n  }\n\n  /**\n   * Checks if the parsed color is valid\n   * @returns {boolean} - true if the parsed color is valid\n   * @memberof ColorConvertor\n   */\n  isValid (): boolean {\n    return this.getColorObj().value !== undefined\n  }\n\n  setColor (color: string): void {\n    this.setInput(color)\n    this.setColorObj(inputParser(this.getInput()))\n    this.setRbgObj(toRgbBase(this.getColorObj()))\n  }\n\n  // TODO implement\n  fromRatio (): string {\n    return 'not implemented'\n  }\n\n  // TODO implement\n  fromPercentageRgb (): string {\n    return 'not implemented'\n  }\n\n  toHsv (): HsvObject {\n    return rgbNormalizedToHsv(this.getRgbObj())\n  }\n\n  toHsvString (): string {\n    const { h, s, v } = this.toHsv()\n    return `hsv(${h}, ${s}%, ${v}%)`\n  }\n\n  toHsl (): HslObject {\n    return rgbNormalizedToHsl(this.getRgbObj())\n  }\n\n  toHslString (): string {\n    const { h, s, l } = rgbNormalizedToHsl(this.getRgbObj())\n    return `hsl(${h}, ${s}%, ${l}%)`\n  }\n\n  toHex (): string {\n    return rgbToHex(rgbNormalizedToRgb(this.getRgbObj())) ?? ''\n  }\n\n  toHexString (): string {\n    return `#${this.toHex()}`\n  }\n\n  toHex8 (): string {\n    const { r, g, b } = rgbNormalizedToRgb(this.getRgbObj())\n    const a = this.getAlpha()\n    return rgbaToHex8({ r, g, b, a })\n  }\n\n  toHex8String (): string {\n    return `#${this.toHex8()}`\n  }\n\n  toCmy (): CmykObject {\n    return rgbNormalizedToCmy(this.getRgbObj())\n  }\n\n  toCmyk (): CmykObject {\n    return cmyToCmyk(this.toCmy())\n  }\n\n  /*\n    XYZ, CIE-L*ab, CIE-L*Ch(ab)\n    formulae from https://www.easyrgb.com/en/math.php\n\n    X, Y and Z output refers to a D65/2Â° standard illuminant.\n    */\n\n  toXyz (): XyzObject {\n    return rgbToXyz(this.getRgbObj())\n  }\n\n  toXyzString (): string {\n    const { x, y, z } = this.toXyz()\n    return `xyz(${x}, ${y}, ${z})`\n  }\n\n  // CIE-L*ab\n  toLab (): LabObject {\n    return xyzToLab(this.toXyz())\n  }\n\n  toLabString (): string {\n    const { l, a, b } = this.toLab()\n    return `lab(${l}, ${a}, ${b})`\n  }\n\n  toLch (): LchObject {\n    return labToLch(this.toLab())\n  }\n\n  toLchString (): string {\n    const { l, c, h } = this.toLch()\n    return `lch(${l}, ${c}, ${h})`\n  }\n\n  getBrightness (): number {\n    return calculateBrightness(rgbNormalizedToRgb(this.getRgbObj()))\n  }\n\n  getLuminance (): number {\n    return calculateLuminance(this.getRgbObj())\n  }\n\n  isDark (): boolean {\n    return this.getBrightness() < 128\n  }\n\n  isLight (): boolean {\n    return this.getBrightness() >= 128\n  }\n\n  getFormat (): string | undefined {\n    return this.getColorObj().format\n  }\n\n  getAlpha (): number | undefined {\n    let { a } = this.getRgbObj()\n    a = a ?? 1 // 100% alpha if working with rgb values\n    return a\n  }\n\n  setAlpha (newAlpha: number): void {\n    if (newAlpha < 0 || newAlpha > 1) {\n      throw new Error('Alpha value must be between 0 and 1')\n    }\n    const { r, g, b } = this.getRgbObj()\n    const a = newAlpha\n    this.setRbgObj({ r, g, b, a })\n  }\n\n  toName (): string | undefined {\n    const hex = truncateHex(this.toHex())\n    for (const color in namedColors) {\n      if (namedColors[color] === hex) {\n        return color\n      }\n    }\n    return undefined\n  }\n\n  toNearestNamedColor (): string {\n    const rgb = rgbNormalizedToRgb(this.getRgbObj())\n    return findClosestColor(rgb, namedColorsRgb)\n  }\n\n  toPercentageRgb (): RgbObject {\n    const { r, g, b } = this.getRgbObj()\n    return {\n      r: r !== undefined ? r * 100 : undefined,\n      g: g !== undefined ? g * 100 : undefined,\n      b: b !== undefined ? b * 100 : undefined\n    }\n  }\n\n  toPercentageRgbString (): string {\n    const { r, g, b } = this.toPercentageRgb()\n    return `rgb(${r}%, ${g}%, ${b}%)`\n  }\n\n  equals (color2: string): boolean {\n    return this.toRgbString() === new ColorConvertor(color2).toRgbString()\n  }\n\n  /**\n     * Returns a random color in sRGB color space\n     * @returns {void}\n     * @memberof ColorConvertor\n     * @remarks Will overwrite the current color\n     */\n  random (): void {\n    this.setColorObj({\n      format: 'rgb',\n      value: {\n        r: Math.floor(Math.random() * 256),\n        g: Math.floor(Math.random() * 256),\n        b: Math.floor(Math.random() * 256)\n      }\n    })\n    this.setRbgObj(toRgbBase(this.getColorObj()))\n  }\n\n  clone (): ColorConvertor {\n    return new ColorConvertor(this.getInput())\n  }\n\n  /**\n   * Returns the contrast ratio between the current color and the color passed as an argument\n   * @param color2 - The color to compare the current color to\n   * @returns {number} - The contrast ratio between the current color and the color passed as an argument\n   * @memberof ColorConvertor\n   * @link http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n   */\n  readability (color2: string): number {\n    const l1: number = this.getLuminance()\n    const l2: number = new ColorConvertor(color2).getLuminance()\n    return (Math.max(l1, l2) + 0.05) / (Math.min(l1, l2) + 0.05)\n  }\n}\n\nexport default ColorConvertor\n"],"mappings":"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"}