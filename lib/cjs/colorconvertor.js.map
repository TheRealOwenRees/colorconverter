{"version":3,"file":"colorconvertor.js","names":["_inputParser","require","_conversions","_utilities","_namedColors","_interopRequireDefault","obj","__esModule","ColorConvertor","colorInput","_colorInput","_colorObj","inputParser","_rgbObj","toRgbBase","prototype","getInput","getColorObj","getRgbObj","isValid","value","undefined","setColor","color","toRgb","toRgbString","_this$getRgbObj","format","_this$getRgbObj$value","r","g","b","a","concat","toHsv","rgbToHsv","toHsvString","_rgbToHsv","h","s","v","toHsl","rgbToHsl","toHslString","_rgbToHsl","l","toHex","rgbToHex","toHexString","toHex8","_this$getRgbObj$value2","getAlpha","rgbaToHex8","toHex8String","toXyz","rgbToXyz","toNormalizedRgb","toXyzString","_this$toXyz","x","y","z","toLab","xyzToLab","toLabString","_this$toLab","toLch","labToLch","toLchString","_this$toLch","c","getBrightness","calculateBrightness","getLuminance","calculateLuminance","isDark","isLight","getFormat","setAlpha","newAlpha","Error","_this$getRgbObj$value3","_this$getRgbObj$value4","toNormalizedRgba","_this$getRgbObj$value5","toName","hex","truncateHex","namedColors","toPercentageRgb","_this$getRgbObj$value6","toPercentageRgbString","_this$toPercentageRgb","equals","color2","_ref","random","Math","floor","clone","readability","l1","l2","max","min","_default","exports"],"sources":["../../src/colorconvertor.ts"],"sourcesContent":["/*\n    Color Convertor\n    Owen Rees, MIT License, 2024\n\n    based on https://github.com/bgrins/TinyColor\n*/\n\nimport { type ColorConvertorInstance, type RgbObject, type XyzObject } from './types'\nimport { inputParser } from './utils/inputParser'\nimport { labToLch, rgbaToHex8, rgbToHex, rgbToHsl, rgbToHsv, rgbToXyz, toRgbBase, xyzToLab } from './utils/conversions'\nimport { calculateBrightness, calculateLuminance, truncateHex } from './utils/utilities'\nimport namedColors from './utils/namedColors'\n\nfunction ColorConvertor (this: ColorConvertorInstance, colorInput: string): void {\n  this._colorInput = colorInput // string input of any color format\n  this._colorObj = inputParser(this._colorInput) // Color info object. E.g. { format: 'hex', value: '#ffffff' }\n  this._rgbObj = toRgbBase(this._colorObj) // RGB color info object. E.g. { format: 'rgb', value: { r: 255, g: 255, b: 255 }\n}\n\nColorConvertor.prototype = {\n  /*\n    General Methods\n  */\n  getInput () {\n    return this._colorInput\n  },\n  getColorObj () {\n    return this._colorObj\n  },\n  getRgbObj () {\n    return this._rgbObj\n  },\n  isValid () {\n    return this.getColorObj().value !== undefined\n  },\n  setColor (this: ColorConvertorInstance, color: string) {\n    this._colorInput = color\n    this._colorObj = inputParser(this.getInput())\n    this._rgbObj = toRgbBase(this.getColorObj())\n  },\n  // fromRatio () {\n  //   return 'not implemented'\n  // },\n  toRgb (this: ColorConvertorInstance) {\n    return toRgbBase(this.getColorObj())\n  },\n  toRgbString () {\n    const { format, value: { r, g, b, a } } = this.getRgbObj()\n    return `${format}(${r}, ${g}, ${b}${a !== undefined ? `, ${a}` : ''})`\n  },\n  toHsv () {\n    return rgbToHsv(this.getRgbObj().value as RgbObject)\n  },\n  toHsvString () {\n    const { h, s, v } = rgbToHsv(this.getRgbObj().value as RgbObject)\n    return `hsv(${h}, ${s}%, ${v}%)`\n  },\n  toHsl () {\n    return rgbToHsl(this.getRgbObj().value as RgbObject)\n  },\n  toHslString () {\n    const { h, s, l } = rgbToHsl(this.getRgbObj().value as RgbObject)\n    return `hsl(${h}, ${s}%, ${l}%)`\n  },\n  toHex () {\n    return rgbToHex(this.getRgbObj().value as RgbObject)\n  },\n  toHexString () {\n    return `#${this.toHex()}`\n  },\n  toHex8 () {\n    const { r, g, b } = this.getRgbObj().value\n    const a = this.getAlpha()\n    return rgbaToHex8({ r, g, b, a })\n  },\n  toHex8String () {\n    return `#${this.toHex8()}`\n  },\n  // XYZ, CIE-L*ab, CIE-L*Ch(ab) from https://www.easyrgb.com/en/math.php\n  // X, Y and Z output refer to a D65/2Â° standard illuminant.\n  toXyz (this: ColorConvertorInstance) {\n    return rgbToXyz(this.toNormalizedRgb())\n  },\n  toXyzString () {\n    const { x, y, z } = this.toXyz()\n    return `xyz(${x}, ${y}, ${z})`\n  },\n  // CIE-L*ab\n  toLab (this: ColorConvertorInstance) {\n    return xyzToLab(this.toXyz())\n  },\n  toLabString () {\n    const { l, a, b } = this.toLab()\n    return `lab(${l}, ${a}, ${b})`\n  },\n  toLch (this: ColorConvertorInstance) {\n    return labToLch(this.toLab())\n  },\n  toLchString () {\n    const { l, c, h } = this.toLch()\n    return `lch(${l}, ${c}, ${h})`\n  },\n  getBrightness () {\n    return calculateBrightness(this.getRgbObj().value as RgbObject)\n  },\n  getLuminance () {\n    return calculateLuminance(this.getRgbObj().value as RgbObject)\n  },\n  isDark () {\n    return this.getBrightness() < 128\n  },\n  isLight () {\n    return this.getBrightness() >= 128\n  },\n  getFormat () {\n    return this.getColorObj().format\n  },\n  getAlpha () {\n    let { a } = this.getRgbObj().value\n    a = a === undefined ? 1 : a // 100% alpha if working with rgb values\n    return a\n  },\n  setAlpha (newAlpha: number) {\n    if (newAlpha < 0 || newAlpha > 1) {\n      throw new Error('Alpha value must be between 0 and 1')\n    }\n    const { r, g, b } = this.getRgbObj().value\n    const a = newAlpha\n    this.getRgbObj().value = { r, g, b, a }\n    return this.getRgbObj()\n  },\n  toNormalizedRgb () {\n    const { r, g, b } = this.getRgbObj().value\n    return { r: r / 255, g: g / 255, b: b / 255 }\n  },\n  toNormalizedRgba () {\n    const { r, g, b } = this.getRgbObj().value\n    const a = this.getAlpha()\n    return { r: r / 255, g: g / 255, b: b / 255, a }\n  },\n  toName (this: ColorConvertorInstance) {\n    const hex = truncateHex(this.toHex())\n    for (const color in namedColors) {\n      if (namedColors[color] === hex) {\n        return color\n      }\n    }\n    return undefined\n  },\n  // toNearestNamedColor (this: ColorConvertorInstance) { // TODO needs to use LAB\n  //   const rgb1 = this.getRgbObj().value as RgbObject\n  //   console.log(findClosestColor(rgb1, namedColorsRgb))\n  // },\n  // toNearestWebSafeColor () {\n  //   return 'not implemented'\n  // },\n  toPercentageRgb () {\n    const { r, g, b } = this.getRgbObj().value\n    return { r: r / 255 * 100, g: g / 255 * 100, b: b / 255 * 100 }\n  },\n  toPercentageRgbString () {\n    const { r, g, b } = this.toPercentageRgb()\n    return `rgb(${r}%, ${g}%, ${b}%)`\n  },\n  equals (color2: string) {\n    const { r, g, b } = toRgbBase(inputParser(color2)).value as RgbObject\n    return this.getColorObj().value.r === r &&\n       this.getColorObj().value.g === g &&\n       this.getColorObj().value.b === b\n  },\n  random () {\n    this._rgbObj = {\n      format: 'rgb',\n      value: {\n        r: Math.floor(Math.random() * 256),\n        g: Math.floor(Math.random() * 256),\n        b: Math.floor(Math.random() * 256)\n      }\n    }\n    return this._rgbObj\n  },\n  clone (this: ColorConvertorInstance) {\n    // @ts-expect-error\n    return new ColorConvertor(this.getInput())\n  },\n  /*\n    Readability Methods\n    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n   */\n\n  // Analyze the 2 colors and returns the color contrast defined by WCAG Version 2\n  readability (color2: string) {\n    const l1: number = this.getLuminance()\n    // @ts-expect-error\n    const l2: number = new ColorConvertor(color2).getLuminance()\n    return (Math.max(l1, l2) + 0.05) / (Math.min(l1, l2) + 0.05)\n  }\n  // isReadable (color2: string) {\n  //   const readability = this.readability(color2)\n  //   console.log(readability)\n  // }\n}\n\n// Combination Methods\n\n// Utility Methods\n\nexport default ColorConvertor\n"],"mappings":";;;;;;AAQA,IAAAA,YAAA,GAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,UAAA,GAAAF,OAAA;AACA,IAAAG,YAAA,GAAAC,sBAAA,CAAAJ,OAAA;AAA6C,SAAAI,uBAAAC,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,gBAAAA,GAAA;AAX7C;AACA;AACA;AACA;AACA;AACA;;AAQA,SAASE,cAAcA,CAAgCC,UAAkB,EAAQ;EAC/E,IAAI,CAACC,WAAW,GAAGD,UAAU,EAAC;EAC9B,IAAI,CAACE,SAAS,GAAG,IAAAC,wBAAW,EAAC,IAAI,CAACF,WAAW,CAAC,EAAC;EAC/C,IAAI,CAACG,OAAO,GAAG,IAAAC,sBAAS,EAAC,IAAI,CAACH,SAAS,CAAC,EAAC;AAC3C;AAEAH,cAAc,CAACO,SAAS,GAAG;EACzB;AACF;AACA;EACEC,QAAQ,WAAAA,SAAA,EAAI;IACV,OAAO,IAAI,CAACN,WAAW;EACzB,CAAC;EACDO,WAAW,WAAAA,YAAA,EAAI;IACb,OAAO,IAAI,CAACN,SAAS;EACvB,CAAC;EACDO,SAAS,WAAAA,UAAA,EAAI;IACX,OAAO,IAAI,CAACL,OAAO;EACrB,CAAC;EACDM,OAAO,WAAAA,QAAA,EAAI;IACT,OAAO,IAAI,CAACF,WAAW,CAAC,CAAC,CAACG,KAAK,KAAKC,SAAS;EAC/C,CAAC;EACDC,QAAQ,WAAAA,SAAgCC,KAAa,EAAE;IACrD,IAAI,CAACb,WAAW,GAAGa,KAAK;IACxB,IAAI,CAACZ,SAAS,GAAG,IAAAC,wBAAW,EAAC,IAAI,CAACI,QAAQ,CAAC,CAAC,CAAC;IAC7C,IAAI,CAACH,OAAO,GAAG,IAAAC,sBAAS,EAAC,IAAI,CAACG,WAAW,CAAC,CAAC,CAAC;EAC9C,CAAC;EACD;EACA;EACA;EACAO,KAAK,WAAAA,MAAA,EAAgC;IACnC,OAAO,IAAAV,sBAAS,EAAC,IAAI,CAACG,WAAW,CAAC,CAAC,CAAC;EACtC,CAAC;EACDQ,WAAW,WAAAA,YAAA,EAAI;IACb,IAAAC,eAAA,GAA0C,IAAI,CAACR,SAAS,CAAC,CAAC;MAAlDS,MAAM,GAAAD,eAAA,CAANC,MAAM;MAAAC,qBAAA,GAAAF,eAAA,CAAEN,KAAK;MAAIS,CAAC,GAAAD,qBAAA,CAADC,CAAC;MAAEC,CAAC,GAAAF,qBAAA,CAADE,CAAC;MAAEC,CAAC,GAAAH,qBAAA,CAADG,CAAC;MAAEC,CAAC,GAAAJ,qBAAA,CAADI,CAAC;IACnC,UAAAC,MAAA,CAAUN,MAAM,OAAAM,MAAA,CAAIJ,CAAC,QAAAI,MAAA,CAAKH,CAAC,QAAAG,MAAA,CAAKF,CAAC,EAAAE,MAAA,CAAGD,CAAC,KAAKX,SAAS,QAAAY,MAAA,CAAQD,CAAC,IAAK,EAAE;EACrE,CAAC;EACDE,KAAK,WAAAA,MAAA,EAAI;IACP,OAAO,IAAAC,qBAAQ,EAAC,IAAI,CAACjB,SAAS,CAAC,CAAC,CAACE,KAAkB,CAAC;EACtD,CAAC;EACDgB,WAAW,WAAAA,YAAA,EAAI;IACb,IAAAC,SAAA,GAAoB,IAAAF,qBAAQ,EAAC,IAAI,CAACjB,SAAS,CAAC,CAAC,CAACE,KAAkB,CAAC;MAAzDkB,CAAC,GAAAD,SAAA,CAADC,CAAC;MAAEC,CAAC,GAAAF,SAAA,CAADE,CAAC;MAAEC,CAAC,GAAAH,SAAA,CAADG,CAAC;IACf,cAAAP,MAAA,CAAcK,CAAC,QAAAL,MAAA,CAAKM,CAAC,SAAAN,MAAA,CAAMO,CAAC;EAC9B,CAAC;EACDC,KAAK,WAAAA,MAAA,EAAI;IACP,OAAO,IAAAC,qBAAQ,EAAC,IAAI,CAACxB,SAAS,CAAC,CAAC,CAACE,KAAkB,CAAC;EACtD,CAAC;EACDuB,WAAW,WAAAA,YAAA,EAAI;IACb,IAAAC,SAAA,GAAoB,IAAAF,qBAAQ,EAAC,IAAI,CAACxB,SAAS,CAAC,CAAC,CAACE,KAAkB,CAAC;MAAzDkB,CAAC,GAAAM,SAAA,CAADN,CAAC;MAAEC,CAAC,GAAAK,SAAA,CAADL,CAAC;MAAEM,CAAC,GAAAD,SAAA,CAADC,CAAC;IACf,cAAAZ,MAAA,CAAcK,CAAC,QAAAL,MAAA,CAAKM,CAAC,SAAAN,MAAA,CAAMY,CAAC;EAC9B,CAAC;EACDC,KAAK,WAAAA,MAAA,EAAI;IACP,OAAO,IAAAC,qBAAQ,EAAC,IAAI,CAAC7B,SAAS,CAAC,CAAC,CAACE,KAAkB,CAAC;EACtD,CAAC;EACD4B,WAAW,WAAAA,YAAA,EAAI;IACb,WAAAf,MAAA,CAAW,IAAI,CAACa,KAAK,CAAC,CAAC;EACzB,CAAC;EACDG,MAAM,WAAAA,OAAA,EAAI;IACR,IAAAC,sBAAA,GAAoB,IAAI,CAAChC,SAAS,CAAC,CAAC,CAACE,KAAK;MAAlCS,CAAC,GAAAqB,sBAAA,CAADrB,CAAC;MAAEC,CAAC,GAAAoB,sBAAA,CAADpB,CAAC;MAAEC,CAAC,GAAAmB,sBAAA,CAADnB,CAAC;IACf,IAAMC,CAAC,GAAG,IAAI,CAACmB,QAAQ,CAAC,CAAC;IACzB,OAAO,IAAAC,uBAAU,EAAC;MAAEvB,CAAC,EAADA,CAAC;MAAEC,CAAC,EAADA,CAAC;MAAEC,CAAC,EAADA,CAAC;MAAEC,CAAC,EAADA;IAAE,CAAC,CAAC;EACnC,CAAC;EACDqB,YAAY,WAAAA,aAAA,EAAI;IACd,WAAApB,MAAA,CAAW,IAAI,CAACgB,MAAM,CAAC,CAAC;EAC1B,CAAC;EACD;EACA;EACAK,KAAK,WAAAA,MAAA,EAAgC;IACnC,OAAO,IAAAC,qBAAQ,EAAC,IAAI,CAACC,eAAe,CAAC,CAAC,CAAC;EACzC,CAAC;EACDC,WAAW,WAAAA,YAAA,EAAI;IACb,IAAAC,WAAA,GAAoB,IAAI,CAACJ,KAAK,CAAC,CAAC;MAAxBK,CAAC,GAAAD,WAAA,CAADC,CAAC;MAAEC,CAAC,GAAAF,WAAA,CAADE,CAAC;MAAEC,CAAC,GAAAH,WAAA,CAADG,CAAC;IACf,cAAA5B,MAAA,CAAc0B,CAAC,QAAA1B,MAAA,CAAK2B,CAAC,QAAA3B,MAAA,CAAK4B,CAAC;EAC7B,CAAC;EACD;EACAC,KAAK,WAAAA,MAAA,EAAgC;IACnC,OAAO,IAAAC,qBAAQ,EAAC,IAAI,CAACT,KAAK,CAAC,CAAC,CAAC;EAC/B,CAAC;EACDU,WAAW,WAAAA,YAAA,EAAI;IACb,IAAAC,WAAA,GAAoB,IAAI,CAACH,KAAK,CAAC,CAAC;MAAxBjB,CAAC,GAAAoB,WAAA,CAADpB,CAAC;MAAEb,CAAC,GAAAiC,WAAA,CAADjC,CAAC;MAAED,CAAC,GAAAkC,WAAA,CAADlC,CAAC;IACf,cAAAE,MAAA,CAAcY,CAAC,QAAAZ,MAAA,CAAKD,CAAC,QAAAC,MAAA,CAAKF,CAAC;EAC7B,CAAC;EACDmC,KAAK,WAAAA,MAAA,EAAgC;IACnC,OAAO,IAAAC,qBAAQ,EAAC,IAAI,CAACL,KAAK,CAAC,CAAC,CAAC;EAC/B,CAAC;EACDM,WAAW,WAAAA,YAAA,EAAI;IACb,IAAAC,WAAA,GAAoB,IAAI,CAACH,KAAK,CAAC,CAAC;MAAxBrB,CAAC,GAAAwB,WAAA,CAADxB,CAAC;MAAEyB,CAAC,GAAAD,WAAA,CAADC,CAAC;MAAEhC,CAAC,GAAA+B,WAAA,CAAD/B,CAAC;IACf,cAAAL,MAAA,CAAcY,CAAC,QAAAZ,MAAA,CAAKqC,CAAC,QAAArC,MAAA,CAAKK,CAAC;EAC7B,CAAC;EACDiC,aAAa,WAAAA,cAAA,EAAI;IACf,OAAO,IAAAC,8BAAmB,EAAC,IAAI,CAACtD,SAAS,CAAC,CAAC,CAACE,KAAkB,CAAC;EACjE,CAAC;EACDqD,YAAY,WAAAA,aAAA,EAAI;IACd,OAAO,IAAAC,6BAAkB,EAAC,IAAI,CAACxD,SAAS,CAAC,CAAC,CAACE,KAAkB,CAAC;EAChE,CAAC;EACDuD,MAAM,WAAAA,OAAA,EAAI;IACR,OAAO,IAAI,CAACJ,aAAa,CAAC,CAAC,GAAG,GAAG;EACnC,CAAC;EACDK,OAAO,WAAAA,QAAA,EAAI;IACT,OAAO,IAAI,CAACL,aAAa,CAAC,CAAC,IAAI,GAAG;EACpC,CAAC;EACDM,SAAS,WAAAA,UAAA,EAAI;IACX,OAAO,IAAI,CAAC5D,WAAW,CAAC,CAAC,CAACU,MAAM;EAClC,CAAC;EACDwB,QAAQ,WAAAA,SAAA,EAAI;IACV,IAAMnB,CAAC,GAAK,IAAI,CAACd,SAAS,CAAC,CAAC,CAACE,KAAK,CAA5BY,CAAC;IACPA,CAAC,GAAGA,CAAC,KAAKX,SAAS,GAAG,CAAC,GAAGW,CAAC,EAAC;IAC5B,OAAOA,CAAC;EACV,CAAC;EACD8C,QAAQ,WAAAA,SAAEC,QAAgB,EAAE;IAC1B,IAAIA,QAAQ,GAAG,CAAC,IAAIA,QAAQ,GAAG,CAAC,EAAE;MAChC,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;IACxD;IACA,IAAAC,sBAAA,GAAoB,IAAI,CAAC/D,SAAS,CAAC,CAAC,CAACE,KAAK;MAAlCS,CAAC,GAAAoD,sBAAA,CAADpD,CAAC;MAAEC,CAAC,GAAAmD,sBAAA,CAADnD,CAAC;MAAEC,CAAC,GAAAkD,sBAAA,CAADlD,CAAC;IACf,IAAMC,CAAC,GAAG+C,QAAQ;IAClB,IAAI,CAAC7D,SAAS,CAAC,CAAC,CAACE,KAAK,GAAG;MAAES,CAAC,EAADA,CAAC;MAAEC,CAAC,EAADA,CAAC;MAAEC,CAAC,EAADA,CAAC;MAAEC,CAAC,EAADA;IAAE,CAAC;IACvC,OAAO,IAAI,CAACd,SAAS,CAAC,CAAC;EACzB,CAAC;EACDsC,eAAe,WAAAA,gBAAA,EAAI;IACjB,IAAA0B,sBAAA,GAAoB,IAAI,CAAChE,SAAS,CAAC,CAAC,CAACE,KAAK;MAAlCS,CAAC,GAAAqD,sBAAA,CAADrD,CAAC;MAAEC,CAAC,GAAAoD,sBAAA,CAADpD,CAAC;MAAEC,CAAC,GAAAmD,sBAAA,CAADnD,CAAC;IACf,OAAO;MAAEF,CAAC,EAAEA,CAAC,GAAG,GAAG;MAAEC,CAAC,EAAEA,CAAC,GAAG,GAAG;MAAEC,CAAC,EAAEA,CAAC,GAAG;IAAI,CAAC;EAC/C,CAAC;EACDoD,gBAAgB,WAAAA,iBAAA,EAAI;IAClB,IAAAC,sBAAA,GAAoB,IAAI,CAAClE,SAAS,CAAC,CAAC,CAACE,KAAK;MAAlCS,CAAC,GAAAuD,sBAAA,CAADvD,CAAC;MAAEC,CAAC,GAAAsD,sBAAA,CAADtD,CAAC;MAAEC,CAAC,GAAAqD,sBAAA,CAADrD,CAAC;IACf,IAAMC,CAAC,GAAG,IAAI,CAACmB,QAAQ,CAAC,CAAC;IACzB,OAAO;MAAEtB,CAAC,EAAEA,CAAC,GAAG,GAAG;MAAEC,CAAC,EAAEA,CAAC,GAAG,GAAG;MAAEC,CAAC,EAAEA,CAAC,GAAG,GAAG;MAAEC,CAAC,EAADA;IAAE,CAAC;EAClD,CAAC;EACDqD,MAAM,WAAAA,OAAA,EAAgC;IACpC,IAAMC,GAAG,GAAG,IAAAC,sBAAW,EAAC,IAAI,CAACzC,KAAK,CAAC,CAAC,CAAC;IACrC,KAAK,IAAMvB,KAAK,IAAIiE,uBAAW,EAAE;MAC/B,IAAIA,uBAAW,CAACjE,KAAK,CAAC,KAAK+D,GAAG,EAAE;QAC9B,OAAO/D,KAAK;MACd;IACF;IACA,OAAOF,SAAS;EAClB,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACAoE,eAAe,WAAAA,gBAAA,EAAI;IACjB,IAAAC,sBAAA,GAAoB,IAAI,CAACxE,SAAS,CAAC,CAAC,CAACE,KAAK;MAAlCS,CAAC,GAAA6D,sBAAA,CAAD7D,CAAC;MAAEC,CAAC,GAAA4D,sBAAA,CAAD5D,CAAC;MAAEC,CAAC,GAAA2D,sBAAA,CAAD3D,CAAC;IACf,OAAO;MAAEF,CAAC,EAAEA,CAAC,GAAG,GAAG,GAAG,GAAG;MAAEC,CAAC,EAAEA,CAAC,GAAG,GAAG,GAAG,GAAG;MAAEC,CAAC,EAAEA,CAAC,GAAG,GAAG,GAAG;IAAI,CAAC;EACjE,CAAC;EACD4D,qBAAqB,WAAAA,sBAAA,EAAI;IACvB,IAAAC,qBAAA,GAAoB,IAAI,CAACH,eAAe,CAAC,CAAC;MAAlC5D,CAAC,GAAA+D,qBAAA,CAAD/D,CAAC;MAAEC,CAAC,GAAA8D,qBAAA,CAAD9D,CAAC;MAAEC,CAAC,GAAA6D,qBAAA,CAAD7D,CAAC;IACf,cAAAE,MAAA,CAAcJ,CAAC,SAAAI,MAAA,CAAMH,CAAC,SAAAG,MAAA,CAAMF,CAAC;EAC/B,CAAC;EACD8D,MAAM,WAAAA,OAAEC,MAAc,EAAE;IACtB,IAAAC,IAAA,GAAoB,IAAAjF,sBAAS,EAAC,IAAAF,wBAAW,EAACkF,MAAM,CAAC,CAAC,CAAC1E,KAAK;MAAhDS,CAAC,GAAAkE,IAAA,CAADlE,CAAC;MAAEC,CAAC,GAAAiE,IAAA,CAADjE,CAAC;MAAEC,CAAC,GAAAgE,IAAA,CAADhE,CAAC;IACf,OAAO,IAAI,CAACd,WAAW,CAAC,CAAC,CAACG,KAAK,CAACS,CAAC,KAAKA,CAAC,IACpC,IAAI,CAACZ,WAAW,CAAC,CAAC,CAACG,KAAK,CAACU,CAAC,KAAKA,CAAC,IAChC,IAAI,CAACb,WAAW,CAAC,CAAC,CAACG,KAAK,CAACW,CAAC,KAAKA,CAAC;EACrC,CAAC;EACDiE,MAAM,WAAAA,OAAA,EAAI;IACR,IAAI,CAACnF,OAAO,GAAG;MACbc,MAAM,EAAE,KAAK;MACbP,KAAK,EAAE;QACLS,CAAC,EAAEoE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACD,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;QAClClE,CAAC,EAAEmE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACD,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;QAClCjE,CAAC,EAAEkE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACD,MAAM,CAAC,CAAC,GAAG,GAAG;MACnC;IACF,CAAC;IACD,OAAO,IAAI,CAACnF,OAAO;EACrB,CAAC;EACDsF,KAAK,WAAAA,MAAA,EAAgC;IACnC;IACA,OAAO,IAAI3F,cAAc,CAAC,IAAI,CAACQ,QAAQ,CAAC,CAAC,CAAC;EAC5C,CAAC;EACD;AACF;AACA;AACA;EAEE;EACAoF,WAAW,WAAAA,YAAEN,MAAc,EAAE;IAC3B,IAAMO,EAAU,GAAG,IAAI,CAAC5B,YAAY,CAAC,CAAC;IACtC;IACA,IAAM6B,EAAU,GAAG,IAAI9F,cAAc,CAACsF,MAAM,CAAC,CAACrB,YAAY,CAAC,CAAC;IAC5D,OAAO,CAACwB,IAAI,CAACM,GAAG,CAACF,EAAE,EAAEC,EAAE,CAAC,GAAG,IAAI,KAAKL,IAAI,CAACO,GAAG,CAACH,EAAE,EAAEC,EAAE,CAAC,GAAG,IAAI,CAAC;EAC9D,CAAC,CACD;EACA;EACA;EACA;AACF,CAAC;;AAED;;AAEA;AAAA,IAAAG,QAAA,GAAAC,OAAA,cAEelG,cAAc"}