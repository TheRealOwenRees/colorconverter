{"version":3,"file":"colorconvertor.js","names":["_conversions","require","_inputParser","_utilities","_namedColors","_interopRequireWildcard","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","o","Symbol","iterator","constructor","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","enumerable","configurable","writable","_toPropertyKey","key","_createClass","protoProps","staticProps","_defineProperty","obj","value","_toPrimitive","String","toPrimitive","Number","ColorConvertor","colorInput","_colorInput","undefined","_colorObj","inputParser","_rgbObj","toRgbBase","getInput","_this$_colorInput","getColorObj","getRgbObj","setInput","setColorObj","colorObj","setRbgObj","rgbObj","setColor","color","toRgb","rgbNormalizedToRgb","toRgbString","_this$toRgb","g","b","concat","isValid","fromRatio","fromPercentageRgb","toHsv","rgbNormalizedToHsv","toHsvString","_this$toHsv","h","s","v","toHsl","rgbNormalizedToHsl","toHslString","_rgbNormalizedToHsl","l","toHex","_rgbToHex","rgbToHex","toHexString","toHex8","_rgbNormalizedToRgb","getAlpha","rgbaToHex8","toHex8String","toCmy","rgbNormalizedToCmy","toCmyk","cmyToCmyk","toXyz","rgbToXyz","toXyzString","_this$toXyz","x","y","z","toLab","xyzToLab","toLabString","_this$toLab","toLch","labToLch","toLchString","_this$toLch","c","getBrightness","calculateBrightness","getLuminance","calculateLuminance","isDark","isLight","getFormat","format","_a","_this$getRgbObj","setAlpha","newAlpha","Error","_this$getRgbObj2","toName","hex","truncateHex","namedColors","toNearestNamedColor","rgb","findClosestColor","namedColorsRgb","toPercentageRgb","_this$getRgbObj3","toPercentageRgbString","_this$toPercentageRgb","equals","color2","random","Math","floor","clone","readability","l1","l2","max","min","isReadable","AA","large","normal","small","AAA","_default","exports"],"sources":["../../src/colorconvertor.ts"],"sourcesContent":["/*\n    Color Convertor\n    Owen Rees, MIT License, 2024\n\n    based on https://github.com/bgrins/TinyColor\n*/\n\nimport {\n  type CmykObject,\n  type ColorObjType,\n  type HslObject,\n  type HsvObject,\n  type LabObject,\n  type LchObject,\n  type RgbObject,\n  type XyzObject,\n} from \"./types\";\nimport {\n  rgbNormalizedToRgb,\n  rgbNormalizedToHsl,\n  toRgbBase,\n  rgbNormalizedToCmy,\n  cmyToCmyk,\n  rgbNormalizedToHsv,\n  rgbToXyz,\n  xyzToLab,\n  labToLch,\n  rgbToHex,\n  rgbaToHex8,\n} from \"./utils/conversions\";\nimport { inputParser } from \"./utils/inputParser\";\nimport {\n  calculateBrightness,\n  calculateLuminance,\n  findClosestColor,\n  truncateHex,\n} from \"./utils/utilities\";\nimport namedColors, { namedColorsRgb } from \"./utils/namedColors\";\n\nclass ColorConvertor {\n  private _colorInput: string | undefined;\n  private _colorObj: ColorObjType;\n  private _rgbObj: RgbObject;\n\n  constructor(colorInput?: string) {\n    this._colorInput = colorInput ?? undefined; // string input of any color format\n    this._colorObj = inputParser(this._colorInput); // Color info object created from _colorInput. E.g. { format: 'hex', value: '#ffffff' }\n    this._rgbObj = toRgbBase(this._colorObj); // RGB normalised values object - 0-1. E.g. { r: 1, g: 0.5, b: 0.8 }\n  }\n\n  getInput(): string {\n    return this._colorInput ?? \"\";\n  }\n\n  getColorObj(): ColorObjType {\n    return this._colorObj;\n  }\n\n  getRgbObj(): RgbObject {\n    return this._rgbObj;\n  }\n\n  setInput(colorInput: string): void {\n    this._colorInput = colorInput;\n  }\n\n  setColorObj(colorObj: ColorObjType): void {\n    this._colorObj = colorObj;\n  }\n\n  setRbgObj(rgbObj: RgbObject): void {\n    this._rgbObj = rgbObj;\n  }\n\n  setColor(color: string): void {\n    this.setInput(color);\n    this.setColorObj(inputParser(this.getInput()));\n    this.setRbgObj(toRgbBase(this.getColorObj()));\n  }\n\n  /**\n   * Returns the RGB values in the range 0-255\n   * @returns {RgbObject} - RGB values object\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toRgb() // { r: 255, g: 0, b: 0 }\n   */\n  toRgb(): RgbObject {\n    return rgbNormalizedToRgb(this.getRgbObj());\n  }\n\n  /**\n   * Returns the RGB values in the range 0-255 as a string\n   * @returns {string} - RGB values string\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toRgbString() // \"rgb(255, 0, 0)\"\n   */\n  toRgbString(): string {\n    const { r, g, b, a } = this.toRgb();\n    return `${a !== undefined ? \"rgba\" : \"rgb\"}(${r}, ${g}, ${b}${a !== undefined ? `, ${a}` : \"\"})`;\n  }\n\n  /**\n   * Checks if the parsed color is valid\n   * @returns {boolean} - true if the parsed color is valid\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.isValid() // true\n   */\n  isValid(): boolean {\n    return this.getColorObj().value !== undefined;\n  }\n\n  // TODO implement\n  fromRatio(): string {\n    return \"not implemented\";\n  }\n\n  // TODO implement\n  fromPercentageRgb(): string {\n    return \"not implemented\";\n  }\n\n  /**\n   * Converts the current color to  HSV\n   * @returns {HsvObject} - HSV values object\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHsv() // { h: 0, s: 100, v: 100 }\n   */\n  toHsv(): HsvObject {\n    return rgbNormalizedToHsv(this.getRgbObj());\n  }\n\n  /**\n   * Converts the current color to HSV as a string\n   * @returns {string} - HSV values as a string\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHsvString() // \"hsv(0, 100%, 100%)\"\n   */\n  toHsvString(): string {\n    const { h, s, v } = this.toHsv();\n    return `hsv(${h}, ${s}%, ${v}%)`;\n  }\n\n  /**\n   * Converts the current color to HSL\n   * @returns {HslObject} - HSL values object\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHsl() // { h: 0, s: 100, l: 50 }\n   */\n  toHsl(): HslObject {\n    return rgbNormalizedToHsl(this.getRgbObj());\n  }\n\n  /**\n   * Converts the current color to HSL as a string\n   * @returns {string} - HSL values as a string\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHslString() // \"hsl(0, 100%, 50%)\"\n   */\n  toHslString(): string {\n    const { h, s, l } = rgbNormalizedToHsl(this.getRgbObj());\n    return `hsl(${h}, ${s}%, ${l}%)`;\n  }\n\n  /**\n   * Converts the current color to Hex\n   * @returns {string} - Hex value\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHex() // \"ff0000\"\n   */\n  toHex(): string {\n    return rgbToHex(rgbNormalizedToRgb(this.getRgbObj())) ?? \"\";\n  }\n\n  /**\n   * Converts the current color to Hex as a string\n   * @returns {string} - Hex value as a string\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHex() // \"#ff0000\"\n   */\n  toHexString(): string {\n    return `#${this.toHex()}`;\n  }\n\n  /**\n   * Converts the current color to Hex8\n   * @returns {string} - Hex8 value\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHex8() // \"ff0000ff\"\n   */\n  toHex8(): string {\n    const { r, g, b } = rgbNormalizedToRgb(this.getRgbObj());\n    const a = this.getAlpha();\n    return rgbaToHex8({ r, g, b, a });\n  }\n\n  /**\n   * Converts the current color to Hex8 as a string\n   * @returns {string} - Hex8 value as a string\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHex8String() // \"#ff0000ff\"\n   */\n  toHex8String(): string {\n    return `#${this.toHex8()}`;\n  }\n\n  /**\n   * Converts the current color to CMY\n   * @returns {CmykObject} - CMYK values object\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toCmy() // { c: 0, m: 100, y: 100 }\n   */\n  toCmy(): CmykObject {\n    return rgbNormalizedToCmy(this.getRgbObj());\n  }\n\n  /** Converts the current color to CMYK\n   * @returns {CmykObject} - CMYK values object\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toCmyk() // { c: 0, m: 100, y: 100, k: 0 }\n   */\n  toCmyk(): CmykObject {\n    return cmyToCmyk(this.toCmy());\n  }\n\n  /*\n    XYZ, CIE-L*ab, CIE-L*Ch(ab)\n    formulae from https://www.easyrgb.com/en/math.php\n\n    X, Y and Z output refers to a D65/2Â° standard illuminant.\n    */\n\n  /**\n   * Converts the current color to XYZ\n   * @returns {XyzObject} - XYZ values object\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toXyz() // { x: 41.24, y: 21.26, z: 1.93 }\n   */\n  toXyz(): XyzObject {\n    return rgbToXyz(this.getRgbObj());\n  }\n\n  /**\n   * Converts the current color to XYZ as a string\n   * @returns {string} - XYZ values as a string\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toXyzString() // \"xyz(41.24, 21.26, 1.93)\"\n   */\n  toXyzString(): string {\n    const { x, y, z } = this.toXyz();\n    return `xyz(${x}, ${y}, ${z})`;\n  }\n\n  /**\n   * Converts the current color to LAB\n   * @returns {LabObject} - LAB values object\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toLab() // { l: 53.24, a: 80.09, b: 67.20 }\n   */\n  toLab(): LabObject {\n    return xyzToLab(this.toXyz());\n  }\n\n  /**\n   * Converts the current color to LAB as a string\n   * @returns {string} - LAB values as a string\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toLabString() // \"lab(53.24, 80.09, 67.20)\"\n   */\n  toLabString(): string {\n    const { l, a, b } = this.toLab();\n    return `lab(${l}, ${a}, ${b})`;\n  }\n\n  /**\n   * Converts the current color to LCH\n   * @returns {LchObject} - LCH values object\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toLch() // { l: 53.24, c: 104.55, h: 40.85 }\n   */\n  toLch(): LchObject {\n    return labToLch(this.toLab());\n  }\n\n  /**\n   * Converts the current color to LCH as a string\n   * @returns {string} - LCH values as a string\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toLchString() // \"lch(53.24, 104.55, 40.85)\"\n   */\n  toLchString(): string {\n    const { l, c, h } = this.toLch();\n    return `lch(${l}, ${c}, ${h})`;\n  }\n\n  /**\n   * Returns the brightness of the current color\n   * @returns {number} - Brightness value\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.getBrightness() // 76.245\n   */\n  getBrightness(): number {\n    return calculateBrightness(rgbNormalizedToRgb(this.getRgbObj()));\n  }\n\n  /**\n   * Returns the luminance of the current color\n   * @returns {number} - Luminance value\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.getLuminance() // 0.2126\n   */\n  getLuminance(): number {\n    return calculateLuminance(this.getRgbObj());\n  }\n\n  /**\n   * Returns true if the current color is dark\n   * @returns {boolean} - true if the current color is dark\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.isDark() // true\n   */\n  isDark(): boolean {\n    return this.getBrightness() < 128;\n  }\n\n  /**\n   * Returns true if the current color is light\n   * @returns {boolean} - true if the current color is light\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.isLight() // false\n   */\n  isLight(): boolean {\n    return this.getBrightness() >= 128;\n  }\n\n  /**\n   * Returns the format of the current color\n   * @returns {string} - Color format\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('#ff0000')\n   * color.getFormat() // \"hex\"\n   */\n  getFormat(): string | undefined {\n    return this.getColorObj().format;\n  }\n\n  /**\n   * Returns the alpha value of the current color\n   * @returns {number} - Alpha value\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.getAlpha() // 1\n   */\n  getAlpha(): number | undefined {\n    let { a } = this.getRgbObj();\n    a = a ?? 1; // 100% alpha if working with rgb values\n    return a;\n  }\n\n  /**\n   * Sets the alpha value of the current color\n   * @param {number} newAlpha - Alpha value\n   * @returns {void}\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.setAlpha(0.5)\n   * color.getAlpha() // 0.5\n   */\n  setAlpha(newAlpha: number): void {\n    if (newAlpha < 0 || newAlpha > 1) {\n      throw new Error(\"Alpha value must be between 0 and 1\");\n    }\n    const { r, g, b } = this.getRgbObj();\n    const a = newAlpha;\n    this.setRbgObj({ r, g, b, a });\n  }\n\n  /**\n   * Returns a matching named CSS color if one exists\n   * @returns {string} - color name\n   * @memberof ColorConvertor\n   * @link https://www.w3.org/TR/css-color-4/#named-colors\n   * @example\n   * const color = new ColorConvertor(\"hsl(0, 100%, 50%)\")\n   * color.toName() // \"red\"\n   */\n  toName(): string | undefined {\n    const hex = truncateHex(this.toHex());\n    for (const color in namedColors) {\n      if (namedColors[color] === hex) {\n        return color;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the closest named CSS color\n   * @returns {string} - color name\n   * @memberof ColorConvertor\n   * @link https://www.w3.org/TR/css-color-4/#named-colors\n   * @example\n   * const color = new ColorConvertor(\"hsl(0, 92%, 48%)\")\n   * color.toNearestNamedColor() // \"red\"\n   */\n  toNearestNamedColor(): string {\n    const rgb = rgbNormalizedToRgb(this.getRgbObj());\n    return findClosestColor(rgb, namedColorsRgb);\n  }\n\n  /**\n   * Returns the RGB values in the range 0-100\n   * @returns {RgbObject} - RGB values object\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toPercentageRgb() // { r: 100, g: 0, b: 0 }\n   */\n  toPercentageRgb(): RgbObject {\n    const { r, g, b } = this.getRgbObj();\n    return {\n      r: r !== undefined ? r * 100 : undefined,\n      g: g !== undefined ? g * 100 : undefined,\n      b: b !== undefined ? b * 100 : undefined,\n    };\n  }\n\n  /**\n   * Returns the RGB values in the range 0-100% as a string\n   * @returns {string} - RGB values string\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toPercentageRgbString() // \"rgb(100%, 0%, 0%)\"\n   */\n  toPercentageRgbString(): string {\n    const { r, g, b } = this.toPercentageRgb();\n    return `rgb(${r}%, ${g}%, ${b}%)`;\n  }\n\n  /**\n   * Checks if the current color is equal to the color passed as an argument\n   * @param color2\n   * @returns {boolean} - true if the current color is equal to the color passed as an argument\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor(\"red\")\n   * color.equals(\"#ff0000\") // true\n   * color.equals(\"hsl(0, 100%, 50%)\") // true\n   */\n  equals(color2: string): boolean {\n    return this.toRgbString() === new ColorConvertor(color2).toRgbString();\n  }\n\n  /**\n   * Returns a random color in sRGB color space\n   * @returns {void}\n   * @memberof ColorConvertor\n   * @remarks Will overwrite the current color\n   */\n  random(): void {\n    this.setColorObj({\n      format: \"rgb\",\n      value: {\n        r: Math.floor(Math.random() * 256),\n        g: Math.floor(Math.random() * 256),\n        b: Math.floor(Math.random() * 256),\n      },\n    });\n    this.setRbgObj(toRgbBase(this.getColorObj()));\n  }\n\n  /**\n   * Returns a clone of the current color instance\n   * @returns {ColorConvertor} - ColorConvertor instance\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor(\"red\")\n   * const color2 = color.clone()\n   * color2.toRgbString() // \"rgb(255, 0, 0)\"\n   */\n  clone(): ColorConvertor {\n    return new ColorConvertor(this.getInput());\n  }\n\n  /**\n   * Returns the contrast ratio between the current color and the color passed as an argument\n   * @param color2 - The color to compare the current color to\n   * @returns {number} - The contrast ratio between the current color and the color passed as an argument\n   * @memberof ColorConvertor\n   * @link http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n   */\n  readability(color2: string): number {\n    const l1: number = this.getLuminance();\n    const l2: number = new ColorConvertor(color2).getLuminance();\n    return (Math.max(l1, l2) + 0.05) / (Math.min(l1, l2) + 0.05);\n  }\n\n  /**\n   * Returns whether WCAG2 guidelines say that the current color is readable on the color passed as an argument\n   * @param color2 - The color to compare the current color to\n   * @returns {Record<string, Record<string, boolean>>} - Object containing the results of the readability tests\n   * @memberof ColorConvertor\n   * @link http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n   * @example\n   * const color = new ColorConvertor(\"red\")\n   * color.isReadable(\"#ffffff\")\n   * // { AA: { large: true, normal: true, small: true }, AAA: { large: true, normal: true, small: true } }\n   */\n  isReadable(color2: string): Record<string, Record<string, boolean>> {\n    const readability = this.readability(color2);\n    return {\n      AA: {\n        large: readability >= 3,\n        normal: readability >= 4.5,\n        small: readability >= 7,\n      },\n      AAA: {\n        large: readability >= 4.5,\n        normal: readability >= 7,\n        small: readability >= 7,\n      },\n    };\n  }\n}\n\nexport default ColorConvertor;\n"],"mappings":"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"}