{"version":3,"file":"colorconvertor.esm.min.js","sources":["../../src/utils/utilities.ts","../../src/utils/conversions.ts","../../src/utils/namedColors.ts","../../src/utils/inputParser.ts","../../src/colorconvertor.ts"],"sourcesContent":["import { type LabObject, type RgbObject } from \"../types\";\n\nexport function convertDecimalToHex(d: number): string {\n  return Math.round(d * 255).toString(16);\n}\n\nexport function calculateBrightness(rgb: RgbObject): number {\n  const { r, g, b } = rgb;\n  if (r === undefined || g === undefined || b === undefined) {\n    throw new Error(\"RGB values must be defined\");\n  }\n  return (r * 299 + g * 587 + b * 114) / 1000;\n}\n\n// http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\nexport function calculateLuminance(rgb: RgbObject): number {\n  if (rgb.r === undefined || rgb.g === undefined || rgb.b === undefined) {\n    throw new Error(\"RGB values must be defined\");\n  }\n\n  let R, G, B;\n  if (rgb.r <= 0.03928) R = rgb.r / 12.92;\n  else R = Math.pow((rgb.r + 0.055) / 1.055, 2.4);\n  if (rgb.g <= 0.03928) G = rgb.g / 12.92;\n  else G = Math.pow((rgb.g + 0.055) / 1.055, 2.4);\n  if (rgb.b <= 0.03928) B = rgb.b / 12.92;\n  else B = Math.pow((rgb.b + 0.055) / 1.055, 2.4);\n  return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n}\n\nexport function truncateHex(hex: string): string {\n  if (hex.length === 6) {\n    if (hex[2] === hex[3] && hex[4] === hex[5]) {\n      return hex[0] + hex[1] + hex[2];\n    }\n  }\n  return hex;\n}\n\nexport function expandHex(hex: string): string {\n  if (hex.length === 3) {\n    return hex[0] + hex[1] + hex[2] + hex[2] + hex[2] + hex[2];\n  }\n  return hex;\n}\n\n// √((L₀-L₁)²+(a₀-a₁)²+(b₀-b₁)²\nexport function labDeltaE(lab1: LabObject, lab2: LabObject): number {\n  if (\n    lab1.l === undefined ||\n    lab1.a === undefined ||\n    lab1.b === undefined ||\n    lab2.l === undefined ||\n    lab2.a === undefined ||\n    lab2.b === undefined\n  ) {\n    throw new Error(\"Lab values must be defined\");\n  }\n  return Math.sqrt(\n    Math.pow(lab1.l - lab2.l, 2) +\n      Math.pow(lab1.a - lab2.a, 2) +\n      Math.pow(lab1.b - lab1.b, 2),\n  );\n}\n","/*\n  Color conversion functions. 'Normalized' means 0-1 range.\n  Formulae from https://www.easyrgb.com/en/math.php\n*/\n\nimport {\n  type CmykObject,\n  type ColorObjType,\n  type HslObject,\n  type HsvObject,\n  type LabObject,\n  type LchObject,\n  type RgbObject,\n  type XyzObject,\n} from \"../types\";\nimport { convertDecimalToHex, expandHex, labDeltaE } from \"./utilities\";\n\nconst referenceWhiteConstants = {\n  x: 95.047,\n  y: 100,\n  z: 108.883,\n};\n\n/*\n   RGB / RGBA conversions\n*/\n\nexport function toRgbBase(colorObj: ColorObjType): RgbObject {\n  if (colorObj.format === \"rgb\" || colorObj.format === \"rgba\") {\n    return rgbToNormalizedRgb(colorObj.value as RgbObject);\n  }\n  if (colorObj.format === \"hex\" && typeof colorObj.value === \"string\") {\n    return rgbToNormalizedRgb(hexToRgb(colorObj.value));\n  }\n  if (colorObj.format === \"hsl\") {\n    return hslToRgbNormalized(colorObj.value as HslObject);\n  }\n  if (colorObj.format === \"hsv\") {\n    return hsvToRgbNormalized(colorObj.value as HsvObject);\n  }\n  if (colorObj.format === \"lch\") {\n    const lab = lchToLab(colorObj.value as LchObject);\n    const xyz = labToXyz(lab);\n    return xyzToRgbNormalized(xyz);\n  }\n  if (colorObj.format === \"oklch\") {\n    const oklab = lchToLab(colorObj.value as LchObject);\n    const lRGB = okLabToLinearRbg(oklab);\n    return lRgbToNormalizedRgb(lRGB);\n  }\n\n  return {\n    r: undefined,\n    g: undefined,\n    b: undefined,\n    a: undefined,\n  };\n}\n\nexport function rgbNormalizedToRgb(rgb: RgbObject): RgbObject {\n  return {\n    r: rgb.r !== undefined ? Math.round(rgb.r * 255) : undefined,\n    g: rgb.g !== undefined ? Math.round(rgb.g * 255) : undefined,\n    b: rgb.b !== undefined ? Math.round(rgb.b * 255) : undefined,\n    a: rgb.a ?? undefined,\n  };\n}\n\nexport function rgbNormalizedToRgbPercent(rgb: RgbObject): RgbObject {\n  return {\n    r: rgb.r !== undefined ? Math.round(rgb.r * 100) : undefined,\n    g: rgb.g !== undefined ? Math.round(rgb.g * 100) : undefined,\n    b: rgb.b !== undefined ? Math.round(rgb.b * 100) : undefined,\n    a: rgb.a ?? undefined,\n  };\n}\n\nexport function rgbToNormalizedRgb(rgb: RgbObject): RgbObject {\n  const { r, g, b, a } = rgb;\n  return {\n    r: r !== undefined ? r / 255 : undefined,\n    g: g !== undefined ? g / 255 : undefined,\n    b: b !== undefined ? b / 255 : undefined,\n    a: a ?? undefined,\n  };\n}\n\nexport function lrgbToRgb(lrgb: RgbObject): RgbObject {\n  if (lrgb.r === undefined || lrgb.g === undefined || lrgb.b === undefined) {\n    throw new Error(\"RGB values must be defined\");\n  }\n\n  const fn = (c = 0): number => {\n    const abs = Math.abs(c);\n    return abs > 0.0031308\n      ? 1.055 * Math.pow(abs, 1 / 2.4) - 0.055\n      : 12.92 * abs;\n  };\n\n  return {\n    r: fn(lrgb.r),\n    g: fn(lrgb.g),\n    b: fn(lrgb.b),\n    a: lrgb.a ?? undefined,\n  };\n}\n\n/*\n  Hex / Hex8 conversions\n*/\n\nexport function rgbToHex(rgb: RgbObject): string | undefined {\n  if (rgb.r === undefined || rgb.g === undefined || rgb.b === undefined) {\n    return undefined;\n  }\n  const binaryRgb = (rgb.r << 16) | (rgb.g << 8) | rgb.b;\n  return binaryRgb.toString(16).padStart(6, \"0\");\n}\n\nexport function rgbaToHex8(rgba: RgbObject): string {\n  const binaryRgb = rgbToHex(rgba);\n  if (binaryRgb === undefined) {\n    return \"\";\n  }\n  const aHex = convertDecimalToHex(rgba.a ?? 1);\n  return `${binaryRgb.padStart(6, \"0\")}${aHex === \"0\" ? \"00\" : aHex}`;\n}\n\n/*\n    HSL / HSV conversions\n*/\n\nexport function rgbNormalizedToHsl(rgb: RgbObject): HslObject {\n  if (rgb.r === undefined || rgb.g === undefined || rgb.b === undefined) {\n    throw new Error(\"RGB values must be defined\");\n  }\n\n  const max = Math.max(rgb.r, rgb.g, rgb.b);\n  const min = Math.min(rgb.r, rgb.g, rgb.b);\n\n  let h = (max + min) / 2;\n  let s;\n  const l = (max + min) / 2;\n\n  if (max === min) {\n    h = 0;\n    s = 0; // Achromatic\n  } else {\n    const diff = max - min;\n    s = l > 0.5 ? diff / (2 - max - min) : diff / (max + min);\n\n    switch (max) {\n      case rgb.r:\n        h = (rgb.g - rgb.b) / diff + (rgb.g < rgb.b ? 6 : 0);\n        break;\n      case rgb.g:\n        h = (rgb.b - rgb.r) / diff + 2;\n        break;\n      case rgb.b:\n        h = (rgb.r - rgb.g) / diff + 4;\n        break;\n      default:\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return {\n    h: Math.round(h * 360),\n    s: Math.round(s * 100),\n    l: Math.round(l * 100),\n  };\n}\n\nexport function rgbNormalizedToHsv(rgb: RgbObject): HsvObject {\n  if (rgb.r === undefined || rgb.g === undefined || rgb.b === undefined) {\n    throw new Error(\"RGB values must be defined\");\n  }\n\n  const max = Math.max(rgb.r, rgb.g, rgb.b);\n  const min = Math.min(rgb.r, rgb.g, rgb.b);\n\n  let h = max;\n  let s = max;\n  const v = max;\n\n  const diff = max - min;\n  const diffc = (c: number): number => (max - c) / 6 / diff + 1 / 2;\n\n  if (diff === 0) {\n    h = 0;\n    s = 0;\n  } else {\n    s = diff / max;\n    const rr = diffc(rgb.r);\n    const gg = diffc(rgb.g);\n    const bb = diffc(rgb.b);\n\n    if (rgb.r === max) {\n      h = rgb.b - rgb.g;\n    } else if (rgb.g === max) {\n      h = 1 / 3 + rr - bb;\n    } else if (rgb.b === max) {\n      h = 2 / 3 + gg - rr;\n    }\n\n    if (h < 0) {\n      h += 1;\n    } else if (h > 1) {\n      h -= 1;\n    }\n  }\n\n  return {\n    h: Math.round(h * 360),\n    s: Math.round(s * 100),\n    v: Math.round(v * 100),\n  };\n}\n\nexport function hslToRgbNormalized(hsl: HslObject): RgbObject {\n  function hue2rgb(p: number, q: number, t: number): number {\n    if (t < 0) {\n      t += 1;\n    }\n\n    if (t > 1) {\n      t -= 1;\n    }\n\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n\n    if (t < 1 / 2) {\n      return q;\n    }\n\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n\n    return p;\n  }\n\n  const h = (hsl.h ?? 0) / 360;\n  const s = (hsl.s ?? 0) / 100;\n  const l = (hsl.l ?? 0) / 100;\n\n  let r;\n  let g;\n  let b;\n\n  if (s === 0) {\n    r = g = b = l; // Achromatic\n  } else {\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n\n  return { r, g, b };\n}\n\nexport function hsvToRgbNormalized(hsv: HsvObject): RgbObject {\n  const h = ((hsv.h ?? 0) / 360) * 6;\n  const s = (hsv.s ?? 0) / 100;\n  const v = (hsv.v ?? 0) / 100;\n\n  const i = Math.floor(h);\n  const f = h - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n\n  const mod = i % 6;\n\n  const r = [v, q, p, p, t, v][mod];\n  const g = [t, v, v, q, p, p][mod];\n  const b = [p, p, t, v, v, q][mod];\n  return { r, g, b };\n}\n\nexport function hexToRgb(hexColor: string): RgbObject {\n  const hex = expandHex(hexColor);\n  const rgb = parseInt(hex.replace(\"#\", \"\"), 16);\n  return {\n    r: (rgb >> 16) & 0xff,\n    g: (rgb >> 8) & 0xff,\n    b: rgb & 0xff,\n  };\n}\n\n/*\n  CMY / CMYK conversions\n*/\n\nexport function rgbNormalizedToCmy(rgb: RgbObject): CmykObject {\n  if (rgb.r === undefined || rgb.g === undefined || rgb.b === undefined) {\n    throw new Error(\"RGB values must be defined\");\n  }\n\n  return {\n    c: 1 - rgb.r,\n    m: 1 - rgb.g,\n    y: 1 - rgb.b,\n  };\n}\n\nexport function cmyToCmyk(cmy: CmykObject): CmykObject {\n  if (cmy.c === undefined || cmy.m === undefined || cmy.y === undefined) {\n    throw new Error(\"CMY values must be defined\");\n  }\n\n  let k: number = 1;\n  if (cmy.c < k) k = cmy.c;\n  if (cmy.m < k) k = cmy.m;\n  if (cmy.y < k) k = cmy.y;\n  if (k === 1) return { c: 0, m: 0, y: 0, k: 1 };\n  return {\n    c: (cmy.c - k) / (1 - k),\n    m: (cmy.m - k) / (1 - k),\n    y: (cmy.y - k) / (1 - k),\n    k,\n  };\n}\n\n/*\n  XYZ, CIE-L*ab, CIE-L*Ch(ab) conversions\n\n  X, Y and Z output refers to a D65/2° standard illuminant.\n\n  Reference white constants are based on the standard illuminant D65:\n  https://en.wikipedia.org/wiki/Illuminant_D65\n\n  The following is a list of reference white points for various standard illuminants:\n  https://en.wikipedia.org/wiki/Standard_illuminant#White_points_of_standard_illuminants\n\n  Pass in a custom reference white point if you want to use a different one, e.g.:\n  { x: 95.047, y: 100, z: 108.883 } for D65\n  { x: 96.422, y: 100, z: 82.521 } for D50\n  { x: 100, y: 100, z: 100 } for E\n*/\n\n// TODO deprecate XYZ, use modern conversions of lRGB instead\n\nexport function xyzToLab(xyz: XyzObject): LabObject {\n  let { x, y, z } = xyz;\n\n  if (x === undefined || y === undefined || z === undefined) {\n    throw new Error(\"XYZ values must be defined\");\n  }\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n\n  return {\n    l: 116 * y - 16,\n    a: 500 * (x - y),\n    b: 200 * (y - z),\n  };\n}\n\nexport function labToLch(lab: LabObject): LchObject {\n  if (lab.l === undefined || lab.a === undefined || lab.b === undefined) {\n    throw new Error(\"LAB values must be defined\");\n  }\n\n  let h = Math.atan2(lab.b, lab.a);\n  h > 0 ? (h = (h / Math.PI) * 180) : (h = 360 - (Math.abs(h) / Math.PI) * 180);\n\n  return {\n    l: lab.l,\n    c: Math.sqrt(lab.a * lab.a + lab.b * lab.b),\n    h,\n  };\n}\n\nexport function lchToLab(lch: LchObject): LabObject {\n  if (lch.l === undefined || lch.c === undefined || lch.h === undefined) {\n    throw new Error(\"LCH values must be defined\");\n  }\n\n  const hr = (lch.h * Math.PI) / 180;\n\n  return {\n    l: lch.l,\n    a: Math.cos(hr) * lch.c,\n    b: Math.sin(hr) * lch.c,\n  };\n}\n\nexport function labToXyz(\n  lab: LabObject,\n  referenceWhite: Record<string, number> = referenceWhiteConstants,\n): XyzObject {\n  if (lab.l === undefined || lab.a === undefined || lab.b === undefined) {\n    throw new Error(\"LAB values must be defined\");\n  }\n\n  let y = (lab.l + 16) / 116;\n  let x = lab.a / 500 + y;\n  let z = y - lab.b / 200;\n\n  const y2 = Math.pow(y, 3);\n  const x2 = Math.pow(x, 3);\n  const z2 = Math.pow(z, 3);\n\n  y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n  x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n  z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n  return {\n    x: x * referenceWhite.x,\n    y: y * referenceWhite.y,\n    z: z * referenceWhite.z,\n  };\n}\n\nexport function xyzToRgbNormalized(xyz: XyzObject): RgbObject {\n  if (xyz.x === undefined || xyz.y === undefined || xyz.z === undefined) {\n    return {\n      r: undefined,\n      g: undefined,\n      b: undefined,\n    };\n  }\n  let { x, y, z } = xyz;\n  x /= 100;\n  y /= 100;\n  z /= 100;\n\n  const r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  const g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  const b = x * 0.0557 + y * -0.204 + z * 1.057;\n\n  return {\n    r: r > 0.0031308 ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055 : r * 12.92,\n    g: g > 0.0031308 ? 1.055 * Math.pow(g, 1 / 2.4) - 0.055 : g * 12.92,\n    b: b > 0.0031308 ? 1.055 * Math.pow(b, 1 / 2.4) - 0.055 : b * 12.92,\n  };\n}\n\nexport function rgbToXyz(rgb: RgbObject): XyzObject {\n  let { r, g, b } = rgb;\n\n  if (r === undefined || g === undefined || b === undefined) {\n    throw new Error(\"RGB values must be defined\");\n  }\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n\n  r *= 100;\n  g *= 100;\n  b *= 100;\n\n  return {\n    x: r * 0.4124 + g * 0.3576 + b * 0.1805,\n    y: r * 0.2126 + g * 0.7152 + b * 0.0722,\n    z: r * 0.0193 + g * 0.1192 + b * 0.9505,\n  };\n}\n\n/*\n  OKLAB <- -> XYZ conversions\n  Formula from https://bottosson.github.io/posts/oklab/\n\n  OKLAB uses a D65/10° standard illuminant.\n\n  OKLCH uses the same conversion as LCH, but with the OKLAB color space.\n*/\n\nconst M1 = [\n  [0.8189330101, 0.3618667424, -0.1288597137],\n  [0.0329845436, 0.9293118715, 0.0361456387],\n  [0.0482003018, 0.2643662691, 0.633851707],\n];\n\nconst M2 = [\n  [0.2104542553, 0.793617785, -0.0040720468],\n  [1.9779984951, -2.428592205, 0.4505937099],\n  [0.0259040371, 0.7827717662, -0.808675766],\n];\n\nconst invM1 = [\n  [1.2270138511035211, -0.5577999806518222, 0.28125614896646783],\n  [-0.04058017842328059, 1.1122568696168302, -0.07167667866560119],\n  [-0.0763812845057069, -0.4214819784180127, 1.586163220440795],\n];\n\nconst invM2 = [\n  [0.9999999984505199, 0.3963377921737679, 0.21580375806075883],\n  [1.0000000088817609, -0.10556134232365635, -0.0638541747717059],\n  [1.000000054672411, -0.08948418209496577, -1.291485537864092],\n];\n\nexport function xyzToOklab(xyz: XyzObject): LabObject {\n  if (xyz.x === undefined || xyz.y === undefined || xyz.z === undefined) {\n    throw new Error(\"XYZ values must be defined\");\n  }\n\n  const L = Math.cbrt(xyz.x * M1[0][0] + xyz.y * M1[0][1] + xyz.z * M1[0][2]);\n  const M = Math.cbrt(xyz.x * M1[1][0] + xyz.y * M1[1][1] + xyz.z * M1[1][2]);\n  const S = Math.cbrt(xyz.x * M1[2][0] + xyz.y * M1[2][1] + xyz.z * M1[2][2]);\n\n  return {\n    l: M2[0][0] * L + M2[0][1] * M + M2[0][2] * S,\n    a: M2[1][0] * L + M2[1][1] * M + M2[1][2] * S,\n    b: M2[2][0] * L + M2[2][1] * M + M2[2][2] * S,\n  };\n}\n\n// TODO giving largely inflated numbers\nexport function okLabToXyz(oklab: LabObject): XyzObject {\n  if (oklab.l === undefined || oklab.a === undefined || oklab.b === undefined) {\n    throw new Error(\"OKLAB values must be defined\");\n  }\n\n  const L = Math.pow(\n    oklab.l * invM2[0][0] + oklab.a * invM2[0][1] + oklab.b * invM2[0][2],\n    3,\n  );\n  const M = Math.pow(\n    oklab.l * invM2[1][0] + oklab.a * invM2[1][1] + oklab.b * invM2[1][2],\n    3,\n  );\n  const S = Math.pow(\n    oklab.l * invM2[2][0] + oklab.a * invM2[2][1] + oklab.b * invM2[2][2],\n    3,\n  );\n\n  return {\n    x: L * invM1[0][0] + M * invM1[0][1] + S * invM1[0][2],\n    y: L * invM1[1][0] + M * invM1[1][1] + S * invM1[1][2],\n    z: L * invM1[2][0] + M * invM1[2][1] + S * invM1[2][2],\n  };\n}\n\nexport function okLabToLinearRbg(oklab: LabObject): RgbObject {\n  let L = oklab.l / 100 + 0.3963377774 * oklab.a + 0.2158037573 * oklab.b;\n  let M = oklab.l / 100 - 0.1055613458 * oklab.a - 0.0638541728 * oklab.b;\n  let S = oklab.l / 100 - 0.0894841775 * oklab.a - 1.291485548 * oklab.b;\n\n  L = L * L * L;\n  M = M * M * M;\n  S = S * S * S;\n\n  return {\n    r: 4.0767416621 * L - 3.3077115913 * M + 0.2309699292 * S,\n    g: -1.2684380046 * L + 2.6097574011 * M - 0.3413193965 * S,\n    b: -0.0041960863 * L - 0.7034186147 * M + 1.707614701 * S,\n  };\n}\n\nexport function lRgbToNormalizedRgb(lRgb: RgbObject): RgbObject {\n  const fn = (c = 0): number => {\n    const abs = Math.abs(c);\n    return abs > 0.0031308\n      ? 1.055 * Math.pow(abs, 1 / 2.4) - 0.055\n      : 12.92 * abs;\n  };\n\n  return {\n    r: fn(lRgb.r),\n    g: fn(lRgb.g),\n    b: fn(lRgb.b),\n  };\n}\n\n/*\n  Other conversions\n*/\nexport function findClosestColor(\n  rgb: RgbObject,\n  namedColorsRgb: Record<string, RgbObject>,\n): string {\n  let minDistance = Infinity;\n  let closestColor = \"\";\n  const lab1 = xyzToLab(rgbToXyz(rgb));\n  for (const color in namedColorsRgb) {\n    const lab2 = xyzToLab(rgbToXyz(namedColorsRgb[color]));\n    const distance = labDeltaE(lab1, lab2);\n    if (distance < minDistance) {\n      closestColor = color;\n      minDistance = distance;\n    }\n  }\n  return closestColor;\n}\n","/*\n    Big List of Colors\n    ------------------\n    https://www.w3.org/TR/css-color-4/#named-colors\n*/\n\nimport { type RgbObject } from '../types'\n\nconst namedColors: Record<string, string> = {\n  aliceblue: 'f0f8ff',\n  antiquewhite: 'faebd7',\n  aqua: '0ff',\n  aquamarine: '7fffd4',\n  azure: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '000',\n  blanchedalmond: 'ffebcd',\n  blue: '00f',\n  blueviolet: '8a2be2',\n  brown: 'a52a2a',\n  burlywood: 'deb887',\n  burntsienna: 'ea7e5d',\n  cadetblue: '5f9ea0',\n  chartreuse: '7fff00',\n  chocolate: 'd2691e',\n  coral: 'ff7f50',\n  cornflowerblue: '6495ed',\n  cornsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: '0ff',\n  darkblue: '00008b',\n  darkcyan: '008b8b',\n  darkgoldenrod: 'b8860b',\n  darkgray: 'a9a9a9',\n  darkgreen: '006400',\n  darkgrey: 'a9a9a9',\n  darkkhaki: 'bdb76b',\n  darkmagenta: '8b008b',\n  darkolivegreen: '556b2f',\n  darkorange: 'ff8c00',\n  darkorchid: '9932cc',\n  darkred: '8b0000',\n  darksalmon: 'e9967a',\n  darkseagreen: '8fbc8f',\n  darkslateblue: '483d8b',\n  darkslategray: '2f4f4f',\n  darkslategrey: '2f4f4f',\n  darkturquoise: '00ced1',\n  darkviolet: '9400d3',\n  deeppink: 'ff1493',\n  deepskyblue: '00bfff',\n  dimgray: '696969',\n  dimgrey: '696969',\n  dodgerblue: '1e90ff',\n  firebrick: 'b22222',\n  floralwhite: 'fffaf0',\n  forestgreen: '228b22',\n  fuchsia: 'f0f',\n  gainsboro: 'dcdcdc',\n  ghostwhite: 'f8f8ff',\n  gold: 'ffd700',\n  goldenrod: 'daa520',\n  gray: '808080',\n  green: '008000',\n  greenyellow: 'adff2f',\n  grey: '808080',\n  honeydew: 'f0fff0',\n  hotpink: 'ff69b4',\n  indianred: 'cd5c5c',\n  indigo: '4b0082',\n  ivory: 'fffff0',\n  khaki: 'f0e68c',\n  lavender: 'e6e6fa',\n  lavenderblush: 'fff0f5',\n  lawngreen: '7cfc00',\n  lemonchiffon: 'fffacd',\n  lightblue: 'add8e6',\n  lightcoral: 'f08080',\n  lightcyan: 'e0ffff',\n  lightgoldenrodyellow: 'fafad2',\n  lightgray: 'd3d3d3',\n  lightgreen: '90ee90',\n  lightgrey: 'd3d3d3',\n  lightpink: 'ffb6c1',\n  lightsalmon: 'ffa07a',\n  lightseagreen: '20b2aa',\n  lightskyblue: '87cefa',\n  lightslategray: '789',\n  lightslategrey: '789',\n  lightsteelblue: 'b0c4de',\n  lightyellow: 'ffffe0',\n  lime: '0f0',\n  limegreen: '32cd32',\n  linen: 'faf0e6',\n  magenta: 'f0f',\n  maroon: '800000',\n  mediumaquamarine: '66cdaa',\n  mediumblue: '0000cd',\n  mediumorchid: 'ba55d3',\n  mediumpurple: '9370db',\n  mediumseagreen: '3cb371',\n  mediumslateblue: '7b68ee',\n  mediumspringgreen: '00fa9a',\n  mediumturquoise: '48d1cc',\n  mediumvioletred: 'c71585',\n  midnightblue: '191970',\n  mintcream: 'f5fffa',\n  mistyrose: 'ffe4e1',\n  moccasin: 'ffe4b5',\n  navajowhite: 'ffdead',\n  navy: '000080',\n  oldlace: 'fdf5e6',\n  olive: '808000',\n  olivedrab: '6b8e23',\n  orange: 'ffa500',\n  orangered: 'ff4500',\n  orchid: 'da70d6',\n  palegoldenrod: 'eee8aa',\n  palegreen: '98fb98',\n  paleturquoise: 'afeeee',\n  palevioletred: 'db7093',\n  papayawhip: 'ffefd5',\n  peachpuff: 'ffdab9',\n  peru: 'cd853f',\n  pink: 'ffc0cb',\n  plum: 'dda0dd',\n  powderblue: 'b0e0e6',\n  purple: '800080',\n  rebeccapurple: '663399',\n  red: 'f00',\n  rosybrown: 'bc8f8f',\n  royalblue: '4169e1',\n  saddlebrown: '8b4513',\n  salmon: 'fa8072',\n  sandybrown: 'f4a460',\n  seagreen: '2e8b57',\n  seashell: 'fff5ee',\n  sienna: 'a0522d',\n  silver: 'c0c0c0',\n  skyblue: '87ceeb',\n  slateblue: '6a5acd',\n  slategray: '708090',\n  slategrey: '708090',\n  snow: 'fffafa',\n  springgreen: '00ff7f',\n  steelblue: '4682b4',\n  tan: 'd2b48c',\n  teal: '008080',\n  thistle: 'd8bfd8',\n  tomato: 'ff6347',\n  turquoise: '40e0d0',\n  violet: 'ee82ee',\n  wheat: 'f5deb3',\n  white: 'fff',\n  whitesmoke: 'f5f5f5',\n  yellow: 'ff0',\n  yellowgreen: '9acd32'\n}\n\nexport const namedColorsRgb: Record<string, RgbObject> = {\n  aliceblue: { r: 240, g: 248, b: 255 },\n  antiquewhite: { r: 250, g: 235, b: 215 },\n  aqua: { r: 0, g: 255, b: 255 },\n  aquamarine: { r: 127, g: 255, b: 212 },\n  azure: { r: 240, g: 255, b: 255 },\n  beige: { r: 245, g: 245, b: 220 },\n  bisque: { r: 255, g: 228, b: 196 },\n  black: { r: 0, g: 0, b: 0 },\n  blanchedalmond: { r: 255, g: 235, b: 205 },\n  blue: { r: 0, g: 0, b: 255 },\n  blueviolet: { r: 138, g: 43, b: 226 },\n  brown: { r: 165, g: 42, b: 42 },\n  burlywood: { r: 222, g: 184, b: 135 },\n  burntsienna: { r: 234, g: 126, b: 93 },\n  cadetblue: { r: 95, g: 158, b: 160 },\n  chartreuse: { r: 127, g: 255, b: 0 },\n  chocolate: { r: 210, g: 105, b: 30 },\n  coral: { r: 255, g: 127, b: 80 },\n  cornflowerblue: { r: 100, g: 149, b: 237 },\n  cornsilk: { r: 255, g: 248, b: 220 },\n  crimson: { r: 220, g: 20, b: 60 },\n  cyan: { r: 0, g: 255, b: 255 },\n  darkblue: { r: 0, g: 0, b: 139 },\n  darkcyan: { r: 0, g: 139, b: 139 },\n  darkgoldenrod: { r: 184, g: 134, b: 11 },\n  darkgray: { r: 169, g: 169, b: 169 },\n  darkgreen: { r: 0, g: 100, b: 0 },\n  darkgrey: { r: 169, g: 169, b: 169 },\n  darkkhaki: { r: 189, g: 183, b: 107 },\n  darkmagenta: { r: 139, g: 0, b: 139 },\n  darkolivegreen: { r: 85, g: 107, b: 47 },\n  darkorange: { r: 255, g: 140, b: 0 },\n  darkorchid: { r: 153, g: 50, b: 204 },\n  darkred: { r: 139, g: 0, b: 0 },\n  darksalmon: { r: 233, g: 150, b: 122 },\n  darkseagreen: { r: 143, g: 188, b: 143 },\n  darkslateblue: { r: 72, g: 61, b: 139 },\n  darkslategray: { r: 47, g: 79, b: 79 },\n  darkslategrey: { r: 47, g: 79, b: 79 },\n  darkturquoise: { r: 0, g: 206, b: 209 },\n  darkviolet: { r: 148, g: 0, b: 211 },\n  deeppink: { r: 255, g: 20, b: 147 },\n  deepskyblue: { r: 0, g: 191, b: 255 },\n  dimgray: { r: 105, g: 105, b: 105 },\n  dimgrey: { r: 105, g: 105, b: 105 },\n  dodgerblue: { r: 30, g: 144, b: 255 },\n  firebrick: { r: 178, g: 34, b: 34 },\n  floralwhite: { r: 255, g: 250, b: 240 },\n  forestgreen: { r: 34, g: 139, b: 34 },\n  fuchsia: { r: 255, g: 0, b: 255 },\n  gainsboro: { r: 220, g: 220, b: 220 },\n  ghostwhite: { r: 248, g: 248, b: 255 },\n  gold: { r: 255, g: 215, b: 0 },\n  goldenrod: { r: 218, g: 165, b: 32 },\n  gray: { r: 128, g: 128, b: 128 },\n  green: { r: 0, g: 128, b: 0 },\n  greenyellow: { r: 173, g: 255, b: 47 },\n  grey: { r: 128, g: 128, b: 128 },\n  honeydew: { r: 240, g: 255, b: 240 },\n  hotpink: { r: 255, g: 105, b: 180 },\n  indianred: { r: 205, g: 92, b: 92 },\n  indigo: { r: 75, g: 0, b: 130 },\n  ivory: { r: 255, g: 255, b: 240 },\n  khaki: { r: 240, g: 230, b: 140 },\n  lavender: { r: 230, g: 230, b: 250 },\n  lavenderblush: { r: 255, g: 240, b: 245 },\n  lawngreen: { r: 124, g: 252, b: 0 },\n  lemonchiffon: { r: 255, g: 250, b: 205 },\n  lightblue: { r: 173, g: 216, b: 230 },\n  lightcoral: { r: 240, g: 128, b: 128 },\n  lightcyan: { r: 224, g: 255, b: 255 },\n  lightgoldenrodyellow: { r: 250, g: 250, b: 210 },\n  lightgray: { r: 211, g: 211, b: 211 },\n  lightgreen: { r: 144, g: 238, b: 144 },\n  lightgrey: { r: 211, g: 211, b: 211 },\n  lightpink: { r: 255, g: 182, b: 193 },\n  lightsalmon: { r: 255, g: 160, b: 122 },\n  lightseagreen: { r: 32, g: 178, b: 170 },\n  lightskyblue: { r: 135, g: 206, b: 250 },\n  lightslategray: { r: 120, g: 128, b: 128 },\n  lightslategrey: { r: 120, g: 128, b: 128 },\n  lightsteelblue: { r: 176, g: 196, b: 222 },\n  lightyellow: { r: 255, g: 255, b: 224 },\n  lime: { r: 0, g: 255, b: 0 },\n  limegreen: { r: 50, g: 205, b: 50 },\n  linen: { r: 250, g: 240, b: 230 },\n  magenta: { r: 255, g: 0, b: 255 },\n  maroon: { r: 128, g: 0, b: 0 },\n  mediumaquamarine: { r: 102, g: 205, b: 170 },\n  mediumblue: { r: 0, g: 0, b: 205 },\n  mediumorchid: { r: 186, g: 85, b: 211 },\n  mediumpurple: { r: 147, g: 112, b: 219 },\n  mediumseagreen: { r: 60, g: 179, b: 113 },\n  mediumslateblue: { r: 123, g: 104, b: 238 },\n  mediumspringgreen: { r: 0, g: 250, b: 154 },\n  mediumturquoise: { r: 72, g: 209, b: 204 },\n  mediumvioletred: { r: 199, g: 21, b: 133 },\n  midnightblue: { r: 25, g: 25, b: 112 },\n  mintcream: { r: 245, g: 255, b: 250 },\n  mistyrose: { r: 255, g: 228, b: 225 },\n  moccasin: { r: 255, g: 228, b: 181 },\n  navajowhite: { r: 255, g: 222, b: 173 },\n  navy: { r: 0, g: 0, b: 128 },\n  oldlace: { r: 253, g: 245, b: 230 },\n  olive: { r: 128, g: 128, b: 0 },\n  olivedrab: { r: 107, g: 142, b: 35 },\n  orange: { r: 255, g: 165, b: 0 },\n  orangered: { r: 255, g: 69, b: 0 },\n  orchid: { r: 218, g: 112, b: 214 },\n  palegoldenrod: { r: 238, g: 232, b: 170 },\n  palegreen: { r: 152, g: 251, b: 152 },\n  paleturquoise: { r: 175, g: 238, b: 238 },\n  palevioletred: { r: 219, g: 112, b: 147 },\n  papayawhip: { r: 255, g: 239, b: 213 },\n  peachpuff: { r: 255, g: 218, b: 185 },\n  peru: { r: 205, g: 133, b: 63 },\n  pink: { r: 255, g: 192, b: 203 },\n  plum: { r: 221, g: 160, b: 221 },\n  powderblue: { r: 176, g: 224, b: 230 },\n  purple: { r: 128, g: 0, b: 128 },\n  rebeccapurple: { r: 102, g: 51, b: 153 },\n  red: { r: 255, g: 0, b: 0 },\n  rosybrown: { r: 188, g: 143, b: 143 },\n  royalblue: { r: 65, g: 105, b: 225 },\n  saddlebrown: { r: 139, g: 69, b: 19 },\n  salmon: { r: 250, g: 128, b: 114 },\n  sandybrown: { r: 244, g: 164, b: 96 },\n  seagreen: { r: 46, g: 139, b: 87 },\n  seashell: { r: 255, g: 245, b: 238 },\n  sienna: { r: 160, g: 82, b: 45 },\n  silver: { r: 192, g: 192, b: 192 },\n  skyblue: { r: 135, g: 206, b: 235 },\n  slateblue: { r: 106, g: 90, b: 205 },\n  slategray: { r: 112, g: 128, b: 144 },\n  slategrey: { r: 112, g: 128, b: 144 },\n  snow: { r: 255, g: 250, b: 250 },\n  springgreen: { r: 0, g: 255, b: 127 },\n  steelblue: { r: 70, g: 130, b: 180 },\n  tan: { r: 210, g: 180, b: 140 },\n  teal: { r: 0, g: 128, b: 128 },\n  thistle: { r: 216, g: 191, b: 216 },\n  tomato: { r: 255, g: 99, b: 71 },\n  turquoise: { r: 64, g: 224, b: 208 },\n  violet: { r: 238, g: 130, b: 238 },\n  wheat: { r: 245, g: 222, b: 179 },\n  white: { r: 255, g: 255, b: 255 },\n  whitesmoke: { r: 245, g: 245, b: 245 },\n  yellow: { r: 255, g: 255, b: 0 },\n  yellowgreen: { r: 154, g: 205, b: 50 }\n}\n\nexport default namedColors\n","import { type ColorObjType } from '../types'\nimport namedColors from './namedColors'\n\n/*\n Given a string or object, convert that input to a ColorObjType\n\n Example input:\n \"red\"\n \"#f00\" or \"f00\"\n \"#ff0000\" or \"ff0000\"\n \"#ff000000\" or \"ff000000\"\n \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n TODO - OKLCH / OKLAB etc.\n*/\nexport function inputParser (color: string | undefined): ColorObjType {\n  if (color !== undefined) {\n    // RGB\n    if (/^rgb/.test(color)) {\n      const rgbArray = color.match(/\\d+/g)\n      if ((rgbArray != null) && rgbArray.length === 3) {\n        return {\n          format: 'rgb',\n          value: {\n            r: Number(rgbArray[0]),\n            g: Number(rgbArray[1]),\n            b: Number(rgbArray[2])\n          }\n        }\n      }\n    }\n\n    // RGBA\n    if (/^rgba/.test(color)) {\n      const rgbaArray = color.match(/\\d+(\\.\\d+)?/g)\n      if ((rgbaArray != null) && rgbaArray.length === 4) {\n        return {\n          format: 'rgba',\n          value: {\n            r: Number(rgbaArray[0]),\n            g: Number(rgbaArray[1]),\n            b: Number(rgbaArray[2]),\n            a: Number(rgbaArray[3])\n          }\n        }\n      }\n    }\n\n    if (/^[a-z]+$/.test(color) && namedColors[color] !== undefined) {\n      return {\n        format: 'name',\n        value: namedColors[color]\n      }\n    }\n\n    //   // Hex - 3 or 6 digits\n    if (\n      color.replace('#', '').length === 6 ||\n        color.replace('#', '').length === 3\n    ) {\n      return {\n        format: 'hex',\n        value: color.replace('#', '')\n      }\n    }\n\n    // HexA\n    if (color.replace('#', '').length === 8) {\n      return {\n        format: 'hexa',\n        value: color.replace('#', '')\n      }\n    }\n\n    // HSL\n    if (/^hsl/.test(color)) {\n      const hslArray = color.match(/\\d+(\\.\\d+)?%?/g)\n      if ((hslArray != null) && hslArray.length === 3) {\n        return {\n          format: 'hsl',\n          value: {\n            h: Number(hslArray[0]),\n            s: Number(hslArray[1].replace('%', '')),\n            l: Number(hslArray[2].replace('%', ''))\n          }\n        }\n      }\n    }\n\n    // HSLA\n    if (/^hsla/.test(color)) {\n      const hslaArray = color.match(/\\d+(\\.\\d+)?%?/g)\n      if ((hslaArray != null) && hslaArray.length === 4) {\n        return {\n          format: 'hsla',\n          value: {\n            h: Number(hslaArray[0]),\n            s: Number(hslaArray[1].replace('%', '')),\n            l: Number(hslaArray[2].replace('%', '')),\n            a: Number(hslaArray[3])\n          }\n        }\n      }\n    }\n\n    // HSV\n    if (/^hsv/.test(color)) {\n      const hsvArray = color.match(/\\d+(\\.\\d+)?%?/g)\n      if ((hsvArray != null) && hsvArray.length === 3) {\n        return {\n          format: 'hsv',\n          value: {\n            h: Number(hsvArray[0]),\n            s: Number(hsvArray[1].replace('%', '')),\n            v: Number(hsvArray[2].replace('%', ''))\n          }\n        }\n      }\n    }\n\n    // LCH\n    if (/^lch/.test(color)) {\n      const lchArray = color.match(/\\d+(\\.\\d+)?%?/g)\n      if ((lchArray != null) && lchArray.length === 3) {\n        return {\n          format: 'lch',\n          value: {\n            l: Number(lchArray[0].replace('%', '')),\n            c: Number(lchArray[1]),\n            h: Number(lchArray[2])\n          }\n        }\n      }\n    }\n\n    // OKLCH\n    if (/^oklch/.test(color)) {\n      const oklchArray = color.match(/\\d+(\\.\\d+)?%?/g)\n      if ((oklchArray != null) && oklchArray.length === 3) {\n        return {\n          format: 'oklch',\n          value: {\n            l: Number(oklchArray[0].replace('%', '')),\n            c: Number(oklchArray[1]),\n            h: Number(oklchArray[2])\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    format: undefined,\n    value: undefined\n  }\n}\n","/*\n    Color Convertor\n    Owen Rees, MIT License, 2024\n\n    based on https://github.com/bgrins/TinyColor\n*/\n\nimport {\n  type CmykObject,\n  type ColorObjType,\n  type HslObject,\n  type HsvObject,\n  type LabObject,\n  type LchObject,\n  type RgbObject,\n  type XyzObject,\n} from \"./types\";\nimport {\n  rgbNormalizedToRgb,\n  rgbNormalizedToHsl,\n  toRgbBase,\n  rgbNormalizedToCmy,\n  cmyToCmyk,\n  rgbNormalizedToHsv,\n  rgbToXyz,\n  xyzToLab,\n  labToLch,\n  rgbToHex,\n  rgbaToHex8,\n  findClosestColor,\n} from \"./utils/conversions\";\nimport { inputParser } from \"./utils/inputParser\";\nimport {\n  calculateBrightness,\n  calculateLuminance,\n  truncateHex,\n} from \"./utils/utilities\";\nimport namedColors, { namedColorsRgb } from \"./utils/namedColors\";\n\nclass ColorConvertor {\n  private _colorInput: string | undefined;\n  private _colorObj: ColorObjType;\n  private _rgbObj: RgbObject;\n\n  constructor(colorInput?: string) {\n    this._colorInput = colorInput ?? undefined; // string input of any color format\n    this._colorObj = inputParser(this._colorInput); // Color info object created from _colorInput. E.g. { format: 'hex', value: '#ffffff' }\n    this._rgbObj = toRgbBase(this._colorObj); // RGB normalised values object - 0-1. E.g. { r: 1, g: 0.5, b: 0.8 }\n  }\n\n  getInput(): string {\n    return this._colorInput ?? \"\";\n  }\n\n  getColorObj(): ColorObjType {\n    return this._colorObj;\n  }\n\n  getRgbObj(): RgbObject {\n    return this._rgbObj;\n  }\n\n  setInput(colorInput: string): void {\n    this._colorInput = colorInput;\n  }\n\n  setColorObj(colorObj: ColorObjType): void {\n    this._colorObj = colorObj;\n  }\n\n  setRbgObj(rgbObj: RgbObject): void {\n    this._rgbObj = rgbObj;\n  }\n\n  setColor(color: string): void {\n    this.setInput(color);\n    this.setColorObj(inputParser(this.getInput()));\n    this.setRbgObj(toRgbBase(this.getColorObj()));\n  }\n\n  /**\n   * Checks if the parsed color is valid\n   * @returns {boolean} - true if the parsed color is valid\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.isValid() // true\n   */\n  isValid(): boolean {\n    return this.getColorObj().value !== undefined;\n  }\n\n  /**\n   * Returns the RGB values in the range 0-255\n   * @returns {RgbObject} - RGB values object\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toRgb() // { r: 255, g: 0, b: 0 }\n   */\n  toRgb(): RgbObject {\n    return rgbNormalizedToRgb(this.getRgbObj());\n  }\n\n  /**\n   * Returns the RGB values in the range 0-255 as a string\n   * @returns {string} - RGB values string\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toRgbString() // \"rgb(255, 0, 0)\"\n   */\n  toRgbString(): string {\n    const { r, g, b, a } = this.toRgb();\n    return `${a !== undefined ? \"rgba\" : \"rgb\"}(${r}, ${g}, ${b}${a !== undefined ? `, ${a}` : \"\"})`;\n  }\n\n  toNormalizedRgb(): RgbObject {\n    return this.getRgbObj();\n  }\n\n  toNormalizedRgbString(): string {\n    const { r, g, b, a } = this.getRgbObj();\n    return `${a !== undefined ? \"rgba\" : \"rgb\"}(${r}, ${g}, ${b}${a !== undefined ? `, ${a}` : \"\"})`;\n  }\n\n  // TODO implement\n  fromRatio(): string {\n    return \"not implemented\";\n  }\n\n  // TODO implement\n  fromPercentageRgb(): string {\n    return \"not implemented\";\n  }\n\n  /**\n   * Converts the current color to  HSV\n   * @returns {HsvObject} - HSV values object\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHsv() // { h: 0, s: 100, v: 100 }\n   */\n  toHsv(): HsvObject {\n    return rgbNormalizedToHsv(this.getRgbObj());\n  }\n\n  /**\n   * Converts the current color to HSV as a string\n   * @returns {string} - HSV values as a string\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHsvString() // \"hsv(0, 100%, 100%)\"\n   */\n  toHsvString(): string {\n    const { h, s, v } = this.toHsv();\n    return `hsv(${h}, ${s}%, ${v}%)`;\n  }\n\n  /**\n   * Converts the current color to HSL\n   * @returns {HslObject} - HSL values object\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHsl() // { h: 0, s: 100, l: 50 }\n   */\n  toHsl(): HslObject {\n    return rgbNormalizedToHsl(this.getRgbObj());\n  }\n\n  /**\n   * Converts the current color to HSL as a string\n   * @returns {string} - HSL values as a string\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHslString() // \"hsl(0, 100%, 50%)\"\n   */\n  toHslString(): string {\n    const { h, s, l } = rgbNormalizedToHsl(this.getRgbObj());\n    return `hsl(${h}, ${s}%, ${l}%)`;\n  }\n\n  /**\n   * Converts the current color to Hex\n   * @returns {string} - Hex value\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHex() // \"ff0000\"\n   */\n  toHex(): string {\n    return rgbToHex(rgbNormalizedToRgb(this.getRgbObj())) ?? \"\";\n  }\n\n  /**\n   * Converts the current color to Hex as a string\n   * @returns {string} - Hex value as a string\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHex() // \"#ff0000\"\n   */\n  toHexString(): string {\n    return `#${this.toHex()}`;\n  }\n\n  /**\n   * Converts the current color to Hex8\n   * @returns {string} - Hex8 value\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHex8() // \"ff0000ff\"\n   */\n  toHex8(): string {\n    const { r, g, b } = rgbNormalizedToRgb(this.getRgbObj());\n    const a = this.getAlpha();\n    return rgbaToHex8({ r, g, b, a });\n  }\n\n  /**\n   * Converts the current color to Hex8 as a string\n   * @returns {string} - Hex8 value as a string\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHex8String() // \"#ff0000ff\"\n   */\n  toHex8String(): string {\n    return `#${this.toHex8()}`;\n  }\n\n  /**\n   * Converts the current color to CMY\n   * @returns {CmykObject} - CMYK values object\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toCmy() // { c: 0, m: 100, y: 100 }\n   */\n  toCmy(): CmykObject {\n    return rgbNormalizedToCmy(this.getRgbObj());\n  }\n\n  /** Converts the current color to CMYK\n   * @returns {CmykObject} - CMYK values object\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toCmyk() // { c: 0, m: 100, y: 100, k: 0 }\n   */\n  toCmyk(): CmykObject {\n    return cmyToCmyk(this.toCmy());\n  }\n\n  /*\n    XYZ, CIE-L*ab, CIE-L*Ch(ab)\n    formulae from https://www.easyrgb.com/en/math.php\n\n    X, Y and Z output refers to a D65/2° standard illuminant.\n    */\n\n  /**\n   * Converts the current color to XYZ\n   * @returns {XyzObject} - XYZ values object\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toXyz() // { x: 41.24, y: 21.26, z: 1.93 }\n   */\n  toXyz(): XyzObject {\n    return rgbToXyz(this.getRgbObj());\n  }\n\n  /**\n   * Converts the current color to XYZ as a string\n   * @returns {string} - XYZ values as a string\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toXyzString() // \"xyz(41.24, 21.26, 1.93)\"\n   */\n  toXyzString(): string {\n    const { x, y, z } = this.toXyz();\n    return `xyz(${x}, ${y}, ${z})`;\n  }\n\n  /**\n   * Converts the current color to LAB\n   * @returns {LabObject} - LAB values object\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toLab() // { l: 53.24, a: 80.09, b: 67.20 }\n   */\n  toLab(): LabObject {\n    return xyzToLab(this.toXyz());\n  }\n\n  /**\n   * Converts the current color to LAB as a string\n   * @returns {string} - LAB values as a string\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toLabString() // \"lab(53.24, 80.09, 67.20)\"\n   */\n  toLabString(): string {\n    const { l, a, b } = this.toLab();\n    return `lab(${l}, ${a}, ${b})`;\n  }\n\n  /**\n   * Converts the current color to LCH\n   * @returns {LchObject} - LCH values object\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toLch() // { l: 53.24, c: 104.55, h: 40.85 }\n   */\n  toLch(): LchObject {\n    return labToLch(this.toLab());\n  }\n\n  /**\n   * Converts the current color to LCH as a string\n   * @returns {string} - LCH values as a string\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toLchString() // \"lch(53.24, 104.55, 40.85)\"\n   */\n  toLchString(): string {\n    const { l, c, h } = this.toLch();\n    return `lch(${l}, ${c}, ${h})`;\n  }\n\n  /**\n   * Returns the brightness of the current color\n   * @returns {number} - Brightness value\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.getBrightness() // 76.245\n   */\n  getBrightness(): number {\n    return calculateBrightness(rgbNormalizedToRgb(this.getRgbObj()));\n  }\n\n  /**\n   * Returns the luminance of the current color\n   * @returns {number} - Luminance value\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.getLuminance() // 0.2126\n   */\n  getLuminance(): number {\n    return calculateLuminance(this.getRgbObj());\n  }\n\n  /**\n   * Returns true if the current color is dark\n   * @returns {boolean} - true if the current color is dark\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.isDark() // true\n   */\n  isDark(): boolean {\n    return this.getBrightness() < 128;\n  }\n\n  /**\n   * Returns true if the current color is light\n   * @returns {boolean} - true if the current color is light\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.isLight() // false\n   */\n  isLight(): boolean {\n    return this.getBrightness() >= 128;\n  }\n\n  /**\n   * Returns the format of the current color\n   * @returns {string} - Color format\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('#ff0000')\n   * color.getFormat() // \"hex\"\n   */\n  getFormat(): string | undefined {\n    return this.getColorObj().format;\n  }\n\n  /**\n   * Returns the alpha value of the current color\n   * @returns {number} - Alpha value\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.getAlpha() // 1\n   */\n  getAlpha(): number | undefined {\n    let { a } = this.getRgbObj();\n    a = a ?? 1; // 100% alpha if working with rgb values\n    return a;\n  }\n\n  /**\n   * Sets the alpha value of the current color\n   * @param {number} newAlpha - Alpha value\n   * @returns {void}\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.setAlpha(0.5)\n   * color.getAlpha() // 0.5\n   */\n  setAlpha(newAlpha: number): void {\n    if (newAlpha < 0 || newAlpha > 1) {\n      throw new Error(\"Alpha value must be between 0 and 1\");\n    }\n    const { r, g, b } = this.getRgbObj();\n    const a = newAlpha;\n    this.setRbgObj({ r, g, b, a });\n  }\n\n  /**\n   * Returns a matching named CSS color if one exists\n   * @returns {string} - color name\n   * @memberof ColorConvertor\n   * @link https://www.w3.org/TR/css-color-4/#named-colors\n   * @example\n   * const color = new ColorConvertor(\"hsl(0, 100%, 50%)\")\n   * color.toName() // \"red\"\n   */\n  toName(): string | undefined {\n    const hex = truncateHex(this.toHex());\n    for (const color in namedColors) {\n      if (namedColors[color] === hex) {\n        return color;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the closest named CSS color\n   * @returns {string} - color name\n   * @memberof ColorConvertor\n   * @link https://www.w3.org/TR/css-color-4/#named-colors\n   * @example\n   * const color = new ColorConvertor(\"hsl(0, 92%, 48%)\")\n   * color.toNearestNamedColor() // \"red\"\n   */\n  toNearestNamedColor(): string {\n    const rgb = rgbNormalizedToRgb(this.getRgbObj());\n    return findClosestColor(rgb, namedColorsRgb);\n  }\n\n  /**\n   * Returns the RGB values in the range 0-100\n   * @returns {RgbObject} - RGB values object\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toPercentageRgb() // { r: 100, g: 0, b: 0 }\n   */\n  toPercentageRgb(): RgbObject {\n    const { r, g, b, a } = this.getRgbObj();\n    return {\n      r: r !== undefined ? r * 100 : undefined,\n      g: g !== undefined ? g * 100 : undefined,\n      b: b !== undefined ? b * 100 : undefined,\n      a: a !== undefined ? this.getAlpha() : undefined,\n    };\n  }\n\n  /**\n   * Returns the RGB values in the range 0-100% as a string\n   * @returns {string} - RGB values string\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toPercentageRgbString() // \"rgb(100%, 0%, 0%)\"\n   */\n  toPercentageRgbString(): string {\n    const { r, g, b, a } = this.toPercentageRgb();\n    return `${a !== undefined ? \"rgba\" : \"rgb\"}(${r}%, ${g}%, ${b}%${a !== undefined ? `, ${a}` : \"\"})`;\n  }\n\n  /**\n   * Checks if the current color is equal to the color passed as an argument\n   * @param color2\n   * @returns {boolean} - true if the current color is equal to the color passed as an argument\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor(\"red\")\n   * color.equals(\"#ff0000\") // true\n   * color.equals(\"hsl(0, 100%, 50%)\") // true\n   */\n  equals(color2: string): boolean {\n    return this.toRgbString() === new ColorConvertor(color2).toRgbString();\n  }\n\n  /**\n   * Returns a random color in sRGB color space\n   * @returns {void}\n   * @memberof ColorConvertor\n   * @remarks Will overwrite the current color\n   */\n  random(): void {\n    this.setColorObj({\n      format: \"rgb\",\n      value: {\n        r: Math.floor(Math.random() * 256),\n        g: Math.floor(Math.random() * 256),\n        b: Math.floor(Math.random() * 256),\n      },\n    });\n    this.setRbgObj(toRgbBase(this.getColorObj()));\n  }\n\n  /**\n   * Returns a clone of the current color instance\n   * @returns {ColorConvertor} - ColorConvertor instance\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor(\"red\")\n   * const color2 = color.clone()\n   * color2.toRgbString() // \"rgb(255, 0, 0)\"\n   */\n  clone(): ColorConvertor {\n    return new ColorConvertor(this.getInput());\n  }\n\n  /**\n   * Returns the contrast ratio between the current color and the color passed as an argument\n   * @param color2 - The color to compare the current color to\n   * @returns {number} - The contrast ratio between the current color and the color passed as an argument\n   * @memberof ColorConvertor\n   * @link http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n   */\n  readability(color2: string): number {\n    const l1: number = this.getLuminance();\n    const l2: number = new ColorConvertor(color2).getLuminance();\n    return (Math.max(l1, l2) + 0.05) / (Math.min(l1, l2) + 0.05);\n  }\n\n  /**\n   * Returns whether WCAG2 guidelines say that the current color is readable on the color passed as an argument\n   * @param color2 - The color to compare the current color to\n   * @returns {Record<string, Record<string, boolean>>} - Object containing the results of the readability tests\n   * @memberof ColorConvertor\n   * @link http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n   * @example\n   * const color = new ColorConvertor(\"red\")\n   * color.isReadable(\"#ffffff\")\n   * // { AA: { large: true, normal: true, small: true }, AAA: { large: true, normal: true, small: true } }\n   */\n  isReadable(color2: string): Record<string, Record<string, boolean>> {\n    const readability = this.readability(color2);\n    return {\n      AA: {\n        large: readability >= 3,\n        normal: readability >= 4.5,\n        small: readability >= 7,\n      },\n      AAA: {\n        large: readability >= 4.5,\n        normal: readability >= 7,\n        small: readability >= 7,\n      },\n    };\n  }\n}\n\nexport default ColorConvertor;\n"],"names":["labDeltaE","lab1","lab2","undefined","l","a","b","Error","Math","sqrt","pow","referenceWhiteConstants","x","y","z","toRgbBase","colorObj","format","rgbToNormalizedRgb","value","hexColor","hex","length","expandHex","rgb","parseInt","replace","r","g","hexToRgb","hsl","hue2rgb","p","q","t","h","_a","s","_b","_c","hslToRgbNormalized","hsv","v","i","floor","f","mod","hsvToRgbNormalized","xyz","lab","referenceWhite","y2","x2","z2","labToXyz","lchToLab","xyzToRgbNormalized","lRGB","oklab","L","M","S","okLabToLinearRbg","lRgb","fn","c","abs","lRgbToNormalizedRgb","rgbNormalizedToRgb","round","rgbToHex","toString","padStart","rgbaToHex8","rgba","binaryRgb","aHex","d","rgbNormalizedToHsl","max","min","diff","xyzToLab","lch","hr","PI","cos","sin","rgbToXyz","namedColors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","namedColorsRgb","inputParser","color","test","rgbArray","match","Number","rgbaArray","hslArray","hslaArray","hsvArray","lchArray","oklchArray","ColorConvertor","constructor","colorInput","this","_colorInput","_colorObj","_rgbObj","getInput","getColorObj","getRgbObj","setInput","setColorObj","setRbgObj","rgbObj","setColor","isValid","toRgb","toRgbString","toNormalizedRgb","toNormalizedRgbString","fromRatio","fromPercentageRgb","toHsv","diffc","rr","gg","bb","rgbNormalizedToHsv","toHsvString","toHsl","toHslString","toHex","toHexString","toHex8","getAlpha","toHex8String","toCmy","m","rgbNormalizedToCmy","toCmyk","cmy","k","cmyToCmyk","toXyz","toXyzString","toLab","toLabString","toLch","atan2","labToLch","toLchString","getBrightness","calculateBrightness","getLuminance","R","G","B","calculateLuminance","isDark","isLight","getFormat","setAlpha","newAlpha","toName","truncateHex","toNearestNamedColor","minDistance","Infinity","closestColor","distance","findClosestColor","toPercentageRgb","toPercentageRgbString","equals","color2","random","clone","readability","l1","l2","isReadable","AA","large","normal","small","AAA"],"mappings":"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"}