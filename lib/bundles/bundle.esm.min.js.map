{"version":3,"file":"bundle.esm.min.js","sources":["../esm/utils/namedColors.js","../esm/utils/inputParser.js","../esm/utils/utilities.js","../esm/utils/conversions.js","../esm/colorconvertor.js"],"sourcesContent":["/*\n    Big List of Colors\n    ------------------\n    <https://www.w3.org/TR/css-color-4/#named-colors>\n*/\n\nconst namedColors = {\n  aliceblue: 'f0f8ff',\n  antiquewhite: 'faebd7',\n  aqua: '0ff',\n  aquamarine: '7fffd4',\n  azure: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '000',\n  blanchedalmond: 'ffebcd',\n  blue: '00f',\n  blueviolet: '8a2be2',\n  brown: 'a52a2a',\n  burlywood: 'deb887',\n  burntsienna: 'ea7e5d',\n  cadetblue: '5f9ea0',\n  chartreuse: '7fff00',\n  chocolate: 'd2691e',\n  coral: 'ff7f50',\n  cornflowerblue: '6495ed',\n  cornsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: '0ff',\n  darkblue: '00008b',\n  darkcyan: '008b8b',\n  darkgoldenrod: 'b8860b',\n  darkgray: 'a9a9a9',\n  darkgreen: '006400',\n  darkgrey: 'a9a9a9',\n  darkkhaki: 'bdb76b',\n  darkmagenta: '8b008b',\n  darkolivegreen: '556b2f',\n  darkorange: 'ff8c00',\n  darkorchid: '9932cc',\n  darkred: '8b0000',\n  darksalmon: 'e9967a',\n  darkseagreen: '8fbc8f',\n  darkslateblue: '483d8b',\n  darkslategray: '2f4f4f',\n  darkslategrey: '2f4f4f',\n  darkturquoise: '00ced1',\n  darkviolet: '9400d3',\n  deeppink: 'ff1493',\n  deepskyblue: '00bfff',\n  dimgray: '696969',\n  dimgrey: '696969',\n  dodgerblue: '1e90ff',\n  firebrick: 'b22222',\n  floralwhite: 'fffaf0',\n  forestgreen: '228b22',\n  fuchsia: 'f0f',\n  gainsboro: 'dcdcdc',\n  ghostwhite: 'f8f8ff',\n  gold: 'ffd700',\n  goldenrod: 'daa520',\n  gray: '808080',\n  green: '008000',\n  greenyellow: 'adff2f',\n  grey: '808080',\n  honeydew: 'f0fff0',\n  hotpink: 'ff69b4',\n  indianred: 'cd5c5c',\n  indigo: '4b0082',\n  ivory: 'fffff0',\n  khaki: 'f0e68c',\n  lavender: 'e6e6fa',\n  lavenderblush: 'fff0f5',\n  lawngreen: '7cfc00',\n  lemonchiffon: 'fffacd',\n  lightblue: 'add8e6',\n  lightcoral: 'f08080',\n  lightcyan: 'e0ffff',\n  lightgoldenrodyellow: 'fafad2',\n  lightgray: 'd3d3d3',\n  lightgreen: '90ee90',\n  lightgrey: 'd3d3d3',\n  lightpink: 'ffb6c1',\n  lightsalmon: 'ffa07a',\n  lightseagreen: '20b2aa',\n  lightskyblue: '87cefa',\n  lightslategray: '789',\n  lightslategrey: '789',\n  lightsteelblue: 'b0c4de',\n  lightyellow: 'ffffe0',\n  lime: '0f0',\n  limegreen: '32cd32',\n  linen: 'faf0e6',\n  magenta: 'f0f',\n  maroon: '800000',\n  mediumaquamarine: '66cdaa',\n  mediumblue: '0000cd',\n  mediumorchid: 'ba55d3',\n  mediumpurple: '9370db',\n  mediumseagreen: '3cb371',\n  mediumslateblue: '7b68ee',\n  mediumspringgreen: '00fa9a',\n  mediumturquoise: '48d1cc',\n  mediumvioletred: 'c71585',\n  midnightblue: '191970',\n  mintcream: 'f5fffa',\n  mistyrose: 'ffe4e1',\n  moccasin: 'ffe4b5',\n  navajowhite: 'ffdead',\n  navy: '000080',\n  oldlace: 'fdf5e6',\n  olive: '808000',\n  olivedrab: '6b8e23',\n  orange: 'ffa500',\n  orangered: 'ff4500',\n  orchid: 'da70d6',\n  palegoldenrod: 'eee8aa',\n  palegreen: '98fb98',\n  paleturquoise: 'afeeee',\n  palevioletred: 'db7093',\n  papayawhip: 'ffefd5',\n  peachpuff: 'ffdab9',\n  peru: 'cd853f',\n  pink: 'ffc0cb',\n  plum: 'dda0dd',\n  powderblue: 'b0e0e6',\n  purple: '800080',\n  rebeccapurple: '663399',\n  red: 'f00',\n  rosybrown: 'bc8f8f',\n  royalblue: '4169e1',\n  saddlebrown: '8b4513',\n  salmon: 'fa8072',\n  sandybrown: 'f4a460',\n  seagreen: '2e8b57',\n  seashell: 'fff5ee',\n  sienna: 'a0522d',\n  silver: 'c0c0c0',\n  skyblue: '87ceeb',\n  slateblue: '6a5acd',\n  slategray: '708090',\n  slategrey: '708090',\n  snow: 'fffafa',\n  springgreen: '00ff7f',\n  steelblue: '4682b4',\n  tan: 'd2b48c',\n  teal: '008080',\n  thistle: 'd8bfd8',\n  tomato: 'ff6347',\n  turquoise: '40e0d0',\n  violet: 'ee82ee',\n  wheat: 'f5deb3',\n  white: 'fff',\n  whitesmoke: 'f5f5f5',\n  yellow: 'ff0',\n  yellowgreen: '9acd32'\n};\nexport const namedColorsRgb = {\n  aliceblue: {\n    r: 240,\n    g: 248,\n    b: 255\n  },\n  antiquewhite: {\n    r: 250,\n    g: 235,\n    b: 215\n  },\n  aqua: {\n    r: 0,\n    g: 255,\n    b: 255\n  },\n  aquamarine: {\n    r: 127,\n    g: 255,\n    b: 212\n  },\n  azure: {\n    r: 240,\n    g: 255,\n    b: 255\n  },\n  beige: {\n    r: 245,\n    g: 245,\n    b: 220\n  },\n  bisque: {\n    r: 255,\n    g: 228,\n    b: 196\n  },\n  black: {\n    r: 0,\n    g: 0,\n    b: 0\n  },\n  blanchedalmond: {\n    r: 255,\n    g: 235,\n    b: 205\n  },\n  blue: {\n    r: 0,\n    g: 0,\n    b: 255\n  },\n  blueviolet: {\n    r: 138,\n    g: 43,\n    b: 226\n  },\n  brown: {\n    r: 165,\n    g: 42,\n    b: 42\n  },\n  burlywood: {\n    r: 222,\n    g: 184,\n    b: 135\n  },\n  burntsienna: {\n    r: 234,\n    g: 126,\n    b: 93\n  },\n  cadetblue: {\n    r: 95,\n    g: 158,\n    b: 160\n  },\n  chartreuse: {\n    r: 127,\n    g: 255,\n    b: 0\n  },\n  chocolate: {\n    r: 210,\n    g: 105,\n    b: 30\n  },\n  coral: {\n    r: 255,\n    g: 127,\n    b: 80\n  },\n  cornflowerblue: {\n    r: 100,\n    g: 149,\n    b: 237\n  },\n  cornsilk: {\n    r: 255,\n    g: 248,\n    b: 220\n  },\n  crimson: {\n    r: 220,\n    g: 20,\n    b: 60\n  },\n  cyan: {\n    r: 0,\n    g: 255,\n    b: 255\n  },\n  darkblue: {\n    r: 0,\n    g: 0,\n    b: 139\n  },\n  darkcyan: {\n    r: 0,\n    g: 139,\n    b: 139\n  },\n  darkgoldenrod: {\n    r: 184,\n    g: 134,\n    b: 11\n  },\n  darkgray: {\n    r: 169,\n    g: 169,\n    b: 169\n  },\n  darkgreen: {\n    r: 0,\n    g: 100,\n    b: 0\n  },\n  darkgrey: {\n    r: 169,\n    g: 169,\n    b: 169\n  },\n  darkkhaki: {\n    r: 189,\n    g: 183,\n    b: 107\n  },\n  darkmagenta: {\n    r: 139,\n    g: 0,\n    b: 139\n  },\n  darkolivegreen: {\n    r: 85,\n    g: 107,\n    b: 47\n  },\n  darkorange: {\n    r: 255,\n    g: 140,\n    b: 0\n  },\n  darkorchid: {\n    r: 153,\n    g: 50,\n    b: 204\n  },\n  darkred: {\n    r: 139,\n    g: 0,\n    b: 0\n  },\n  darksalmon: {\n    r: 233,\n    g: 150,\n    b: 122\n  },\n  darkseagreen: {\n    r: 143,\n    g: 188,\n    b: 143\n  },\n  darkslateblue: {\n    r: 72,\n    g: 61,\n    b: 139\n  },\n  darkslategray: {\n    r: 47,\n    g: 79,\n    b: 79\n  },\n  darkslategrey: {\n    r: 47,\n    g: 79,\n    b: 79\n  },\n  darkturquoise: {\n    r: 0,\n    g: 206,\n    b: 209\n  },\n  darkviolet: {\n    r: 148,\n    g: 0,\n    b: 211\n  },\n  deeppink: {\n    r: 255,\n    g: 20,\n    b: 147\n  },\n  deepskyblue: {\n    r: 0,\n    g: 191,\n    b: 255\n  },\n  dimgray: {\n    r: 105,\n    g: 105,\n    b: 105\n  },\n  dimgrey: {\n    r: 105,\n    g: 105,\n    b: 105\n  },\n  dodgerblue: {\n    r: 30,\n    g: 144,\n    b: 255\n  },\n  firebrick: {\n    r: 178,\n    g: 34,\n    b: 34\n  },\n  floralwhite: {\n    r: 255,\n    g: 250,\n    b: 240\n  },\n  forestgreen: {\n    r: 34,\n    g: 139,\n    b: 34\n  },\n  fuchsia: {\n    r: 255,\n    g: 0,\n    b: 255\n  },\n  gainsboro: {\n    r: 220,\n    g: 220,\n    b: 220\n  },\n  ghostwhite: {\n    r: 248,\n    g: 248,\n    b: 255\n  },\n  gold: {\n    r: 255,\n    g: 215,\n    b: 0\n  },\n  goldenrod: {\n    r: 218,\n    g: 165,\n    b: 32\n  },\n  gray: {\n    r: 128,\n    g: 128,\n    b: 128\n  },\n  green: {\n    r: 0,\n    g: 128,\n    b: 0\n  },\n  greenyellow: {\n    r: 173,\n    g: 255,\n    b: 47\n  },\n  grey: {\n    r: 128,\n    g: 128,\n    b: 128\n  },\n  honeydew: {\n    r: 240,\n    g: 255,\n    b: 240\n  },\n  hotpink: {\n    r: 255,\n    g: 105,\n    b: 180\n  },\n  indianred: {\n    r: 205,\n    g: 92,\n    b: 92\n  },\n  indigo: {\n    r: 75,\n    g: 0,\n    b: 130\n  },\n  ivory: {\n    r: 255,\n    g: 255,\n    b: 240\n  },\n  khaki: {\n    r: 240,\n    g: 230,\n    b: 140\n  },\n  lavender: {\n    r: 230,\n    g: 230,\n    b: 250\n  },\n  lavenderblush: {\n    r: 255,\n    g: 240,\n    b: 245\n  },\n  lawngreen: {\n    r: 124,\n    g: 252,\n    b: 0\n  },\n  lemonchiffon: {\n    r: 255,\n    g: 250,\n    b: 205\n  },\n  lightblue: {\n    r: 173,\n    g: 216,\n    b: 230\n  },\n  lightcoral: {\n    r: 240,\n    g: 128,\n    b: 128\n  },\n  lightcyan: {\n    r: 224,\n    g: 255,\n    b: 255\n  },\n  lightgoldenrodyellow: {\n    r: 250,\n    g: 250,\n    b: 210\n  },\n  lightgray: {\n    r: 211,\n    g: 211,\n    b: 211\n  },\n  lightgreen: {\n    r: 144,\n    g: 238,\n    b: 144\n  },\n  lightgrey: {\n    r: 211,\n    g: 211,\n    b: 211\n  },\n  lightpink: {\n    r: 255,\n    g: 182,\n    b: 193\n  },\n  lightsalmon: {\n    r: 255,\n    g: 160,\n    b: 122\n  },\n  lightseagreen: {\n    r: 32,\n    g: 178,\n    b: 170\n  },\n  lightskyblue: {\n    r: 135,\n    g: 206,\n    b: 250\n  },\n  lightslategray: {\n    r: 120,\n    g: 128,\n    b: 128\n  },\n  lightslategrey: {\n    r: 120,\n    g: 128,\n    b: 128\n  },\n  lightsteelblue: {\n    r: 176,\n    g: 196,\n    b: 222\n  },\n  lightyellow: {\n    r: 255,\n    g: 255,\n    b: 224\n  },\n  lime: {\n    r: 0,\n    g: 255,\n    b: 0\n  },\n  limegreen: {\n    r: 50,\n    g: 205,\n    b: 50\n  },\n  linen: {\n    r: 250,\n    g: 240,\n    b: 230\n  },\n  magenta: {\n    r: 255,\n    g: 0,\n    b: 255\n  },\n  maroon: {\n    r: 128,\n    g: 0,\n    b: 0\n  },\n  mediumaquamarine: {\n    r: 102,\n    g: 205,\n    b: 170\n  },\n  mediumblue: {\n    r: 0,\n    g: 0,\n    b: 205\n  },\n  mediumorchid: {\n    r: 186,\n    g: 85,\n    b: 211\n  },\n  mediumpurple: {\n    r: 147,\n    g: 112,\n    b: 219\n  },\n  mediumseagreen: {\n    r: 60,\n    g: 179,\n    b: 113\n  },\n  mediumslateblue: {\n    r: 123,\n    g: 104,\n    b: 238\n  },\n  mediumspringgreen: {\n    r: 0,\n    g: 250,\n    b: 154\n  },\n  mediumturquoise: {\n    r: 72,\n    g: 209,\n    b: 204\n  },\n  mediumvioletred: {\n    r: 199,\n    g: 21,\n    b: 133\n  },\n  midnightblue: {\n    r: 25,\n    g: 25,\n    b: 112\n  },\n  mintcream: {\n    r: 245,\n    g: 255,\n    b: 250\n  },\n  mistyrose: {\n    r: 255,\n    g: 228,\n    b: 225\n  },\n  moccasin: {\n    r: 255,\n    g: 228,\n    b: 181\n  },\n  navajowhite: {\n    r: 255,\n    g: 222,\n    b: 173\n  },\n  navy: {\n    r: 0,\n    g: 0,\n    b: 128\n  },\n  oldlace: {\n    r: 253,\n    g: 245,\n    b: 230\n  },\n  olive: {\n    r: 128,\n    g: 128,\n    b: 0\n  },\n  olivedrab: {\n    r: 107,\n    g: 142,\n    b: 35\n  },\n  orange: {\n    r: 255,\n    g: 165,\n    b: 0\n  },\n  orangered: {\n    r: 255,\n    g: 69,\n    b: 0\n  },\n  orchid: {\n    r: 218,\n    g: 112,\n    b: 214\n  },\n  palegoldenrod: {\n    r: 238,\n    g: 232,\n    b: 170\n  },\n  palegreen: {\n    r: 152,\n    g: 251,\n    b: 152\n  },\n  paleturquoise: {\n    r: 175,\n    g: 238,\n    b: 238\n  },\n  palevioletred: {\n    r: 219,\n    g: 112,\n    b: 147\n  },\n  papayawhip: {\n    r: 255,\n    g: 239,\n    b: 213\n  },\n  peachpuff: {\n    r: 255,\n    g: 218,\n    b: 185\n  },\n  peru: {\n    r: 205,\n    g: 133,\n    b: 63\n  },\n  pink: {\n    r: 255,\n    g: 192,\n    b: 203\n  },\n  plum: {\n    r: 221,\n    g: 160,\n    b: 221\n  },\n  powderblue: {\n    r: 176,\n    g: 224,\n    b: 230\n  },\n  purple: {\n    r: 128,\n    g: 0,\n    b: 128\n  },\n  rebeccapurple: {\n    r: 102,\n    g: 51,\n    b: 153\n  },\n  red: {\n    r: 255,\n    g: 0,\n    b: 0\n  },\n  rosybrown: {\n    r: 188,\n    g: 143,\n    b: 143\n  },\n  royalblue: {\n    r: 65,\n    g: 105,\n    b: 225\n  },\n  saddlebrown: {\n    r: 139,\n    g: 69,\n    b: 19\n  },\n  salmon: {\n    r: 250,\n    g: 128,\n    b: 114\n  },\n  sandybrown: {\n    r: 244,\n    g: 164,\n    b: 96\n  },\n  seagreen: {\n    r: 46,\n    g: 139,\n    b: 87\n  },\n  seashell: {\n    r: 255,\n    g: 245,\n    b: 238\n  },\n  sienna: {\n    r: 160,\n    g: 82,\n    b: 45\n  },\n  silver: {\n    r: 192,\n    g: 192,\n    b: 192\n  },\n  skyblue: {\n    r: 135,\n    g: 206,\n    b: 235\n  },\n  slateblue: {\n    r: 106,\n    g: 90,\n    b: 205\n  },\n  slategray: {\n    r: 112,\n    g: 128,\n    b: 144\n  },\n  slategrey: {\n    r: 112,\n    g: 128,\n    b: 144\n  },\n  snow: {\n    r: 255,\n    g: 250,\n    b: 250\n  },\n  springgreen: {\n    r: 0,\n    g: 255,\n    b: 127\n  },\n  steelblue: {\n    r: 70,\n    g: 130,\n    b: 180\n  },\n  tan: {\n    r: 210,\n    g: 180,\n    b: 140\n  },\n  teal: {\n    r: 0,\n    g: 128,\n    b: 128\n  },\n  thistle: {\n    r: 216,\n    g: 191,\n    b: 216\n  },\n  tomato: {\n    r: 255,\n    g: 99,\n    b: 71\n  },\n  turquoise: {\n    r: 64,\n    g: 224,\n    b: 208\n  },\n  violet: {\n    r: 238,\n    g: 130,\n    b: 238\n  },\n  wheat: {\n    r: 245,\n    g: 222,\n    b: 179\n  },\n  white: {\n    r: 255,\n    g: 255,\n    b: 255\n  },\n  whitesmoke: {\n    r: 245,\n    g: 245,\n    b: 245\n  },\n  yellow: {\n    r: 255,\n    g: 255,\n    b: 0\n  },\n  yellowgreen: {\n    r: 154,\n    g: 205,\n    b: 50\n  }\n};\nexport default namedColors;\n//# sourceMappingURL=namedColors.js.map","/*\n  Given a string or object, convert that input to an object with the following properties:\n    format: string\n    value: string\n\n  Possible string inputs:\n      \"red\"\n      \"#f00\" or \"f00\"\n      \"#ff0000\" or \"ff0000\"\n      \"#ff000000\" or \"ff000000\"\n      \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n      \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n      \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n      \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n      \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n      \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n      \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n      TODO - OKLCH / OKLAB etc.\n*/\n\nimport namedColors from './namedColors';\nexport function inputParser(color) {\n  if (color === undefined) {\n    return {\n      format: undefined,\n      value: undefined\n    };\n  }\n  if (/^[a-z]+$/.test(color) && namedColors[color] !== undefined) {\n    return {\n      format: 'name',\n      value: namedColors[color]\n    };\n  }\n\n  // Hex - 3 or 6 digits\n  if (color.replace('#', '').length === 6 || color.replace('#', '').length === 3) {\n    return {\n      format: 'hex',\n      value: color.replace('#', '')\n    };\n  }\n\n  // HexA\n  if (color.replace('#', '').length === 8) {\n    return {\n      format: 'hexa',\n      value: color.replace('#', '')\n    };\n  }\n\n  // RGB\n  if (/^rgb/.test(color)) {\n    const rgbArray = color.match(/\\d+/g);\n    if (rgbArray != null && rgbArray.length === 3) {\n      return {\n        format: 'rgb',\n        value: {\n          r: Number(rgbArray[0]),\n          g: Number(rgbArray[1]),\n          b: Number(rgbArray[2])\n        }\n      };\n    }\n  }\n\n  // RGBA\n  if (/^rgba/.test(color)) {\n    const rgbaArray = color.match(/\\d+(\\.\\d+)?/g);\n    if (rgbaArray != null && rgbaArray.length === 4) {\n      return {\n        format: 'rgba',\n        value: {\n          r: Number(rgbaArray[0]),\n          g: Number(rgbaArray[1]),\n          b: Number(rgbaArray[2]),\n          a: Number(rgbaArray[3])\n        }\n      };\n    }\n  }\n\n  // HSL\n  if (/^hsl/.test(color)) {\n    const hslArray = color.match(/\\d+(\\.\\d+)?%?/g);\n    if (hslArray != null && hslArray.length === 3) {\n      return {\n        format: 'hsl',\n        value: {\n          h: Number(hslArray[0]),\n          s: Number(hslArray[1].replace('%', '')),\n          l: Number(hslArray[2].replace('%', ''))\n        }\n      };\n    }\n  }\n\n  // HSLA\n  if (/^hsla/.test(color)) {\n    const hslaArray = color.match(/\\d+(\\.\\d+)?%?/g);\n    if (hslaArray != null && hslaArray.length === 4) {\n      return {\n        format: 'hsla',\n        value: {\n          h: Number(hslaArray[0]),\n          s: Number(hslaArray[1].replace('%', '')),\n          l: Number(hslaArray[2].replace('%', '')),\n          a: Number(hslaArray[3])\n        }\n      };\n    }\n  }\n\n  // HSV\n  if (/^hsv/.test(color)) {\n    const hsvArray = color.match(/\\d+(\\.\\d+)?%?/g);\n    if (hsvArray != null && hsvArray.length === 3) {\n      return {\n        format: 'hsv',\n        value: {\n          h: Number(hsvArray[0]),\n          s: Number(hsvArray[1].replace('%', '')),\n          v: Number(hsvArray[2].replace('%', ''))\n        }\n      };\n    }\n  }\n\n  // default return\n  return {\n    format: undefined,\n    value: undefined\n  };\n}\n//# sourceMappingURL=inputParser.js.map","import { rgbToXyz, xyzToLab } from './conversions';\nexport function convertDecimalToHex(d) {\n  return Math.round(d * 255).toString(16);\n}\nexport function calculateBrightness(rgb) {\n  const {\n    r,\n    g,\n    b\n  } = rgb;\n  return (r * 299 + g * 587 + b * 114) / 1000;\n}\nexport function calculateLuminance(rgb) {\n  // http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n  const {\n    r,\n    g,\n    b\n  } = rgb;\n  let R, G, B;\n  const RsRGB = r / 255;\n  const GsRGB = g / 255;\n  const BsRGB = b / 255;\n  if (RsRGB <= 0.03928) R = RsRGB / 12.92;else R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n  if (GsRGB <= 0.03928) G = GsRGB / 12.92;else G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n  if (BsRGB <= 0.03928) B = BsRGB / 12.92;else B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n  return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n}\n\n// e.g. turn #ffffff into #fff\nexport function truncateHex(hex) {\n  if (hex.length === 6) {\n    if (hex[2] === hex[3] && hex[4] === hex[5]) {\n      return hex[0] + hex[1] + hex[2];\n    }\n  }\n  return hex;\n}\n\n// e.g. turn #fff into #ffffff\nexport function expandHex(hex) {\n  if (hex.length === 3) {\n    return hex[0] + hex[1] + hex[2] + hex[2] + hex[2] + hex[2];\n  }\n  return hex;\n}\nexport function labEuclideanDistance(lab1, lab2) {\n  return Math.sqrt(Math.pow(lab1.l - lab2.l, 2) + Math.pow(lab1.a - lab2.a, 2) + Math.pow(lab1.b - lab1.b, 2));\n}\nexport function findClosestColor(rgb, namedColorsRgb) {\n  let minDistance = Infinity;\n  let closestColor = '';\n  const lab1 = xyzToLab(rgbToXyz(rgb));\n  for (const color in namedColorsRgb) {\n    const lab2 = xyzToLab(rgbToXyz(namedColorsRgb[color]));\n    const distance = labEuclideanDistance(lab1, lab2);\n    if (distance < minDistance) {\n      closestColor = color;\n      minDistance = distance;\n    }\n  }\n  return closestColor;\n}\n//# sourceMappingURL=utilities.js.map","/*\n    Based on the following gist:\n    https://gist.github.com/avisek/eadfbe7a7a169b1001a2d3affc21052e\n*/\n\nimport { convertDecimalToHex, expandHex } from './utilities';\n\n// any color type to rgb\nexport function toRgbBase(colorObj) {\n  if (colorObj.format === 'rgb' || colorObj.format === 'rgba') {\n    return colorObj;\n  }\n  if (colorObj.format === 'hex' && typeof colorObj.value === 'string') {\n    return {\n      format: 'rgb',\n      value: hexToRgb(colorObj.value)\n    };\n  }\n  if (colorObj.format === 'hsl') {\n    return {\n      format: 'rgb',\n      value: hslToRgb(colorObj.value)\n    };\n  }\n  if (colorObj.format === 'hsv') {\n    return {\n      format: 'rgb',\n      value: hsvToRgb(colorObj.value)\n    };\n  }\n  return {\n    format: undefined,\n    value: undefined\n  };\n}\n\n// TODO HSLA to RGBA and add to toRgbBase as well, returning RGBA\n\nexport function rgbToHsl(rgb) {\n  const r = rgb.r / 255;\n  const g = rgb.g / 255;\n  const b = rgb.b / 255;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  let h = (max + min) / 2;\n  let s;\n  const l = (max + min) / 2;\n  if (max === min) {\n    h = 0;\n    s = 0; // Achromatic\n  } else {\n    const diff = max - min;\n    s = l > 0.5 ? diff / (2 - max - min) : diff / (max + min);\n    switch (max) {\n      case r:\n        h = (g - b) / diff + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / diff + 2;\n        break;\n      case b:\n        h = (r - g) / diff + 4;\n        break;\n      default:\n        break;\n    }\n    h /= 6;\n  }\n  return {\n    h: Math.round(h * 360),\n    s: s * 100,\n    l: l * 100\n  };\n}\nexport function hslToRgb(hsl) {\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n      return q;\n    }\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n  }\n  const h = (hsl.h ?? 0) / 360;\n  const s = (hsl.s ?? 0) / 100;\n  const l = (hsl.l ?? 0) / 100;\n  let r;\n  let g;\n  let b;\n  if (s === 0) {\n    r = g = b = l; // Achromatic\n  } else {\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n  return {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255)\n  };\n}\nexport function rgbToHsv(rgb) {\n  if (rgb === undefined) {\n    return {\n      h: undefined,\n      s: undefined,\n      v: undefined\n    };\n  }\n  const r = rgb.r / 255;\n  const g = rgb.g / 255;\n  const b = rgb.b / 255;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  let h = max;\n  let s = max;\n  const v = max;\n  const diff = max - min;\n  const diffc = c => (max - c) / 6 / diff + 1 / 2;\n  if (diff === 0) {\n    h = 0;\n    s = 0;\n  } else {\n    s = diff / max;\n    const rr = diffc(r);\n    const gg = diffc(g);\n    const bb = diffc(b);\n    if (r === max) {\n      h = b - g;\n    } else if (g === max) {\n      h = 1 / 3 + rr - bb;\n    } else if (b === max) {\n      h = 2 / 3 + gg - rr;\n    }\n    if (h < 0) {\n      h += 1;\n    } else if (h > 1) {\n      h -= 1;\n    }\n  }\n  return {\n    h: Math.round(h * 360),\n    s: s * 100,\n    v: v * 100\n  };\n}\nexport function hsvToRgb(hsv) {\n  const h = (hsv.h ?? 0) / 360 * 6;\n  const s = (hsv.s ?? 0) / 100;\n  const v = (hsv.v ?? 0) / 100;\n  const i = Math.floor(h);\n  const f = h - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  const mod = i % 6;\n  const r = [v, q, p, p, t, v][mod];\n  const g = [t, v, v, q, p, p][mod];\n  const b = [p, p, t, v, v, q][mod];\n  return {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255)\n  };\n}\nexport function rgbToHex(rgb) {\n  const binaryRgb = rgb.r << 16 | rgb.g << 8 | rgb.b;\n  return binaryRgb.toString(16).padStart(6, '0');\n}\nexport function rgbaToHex8(rgba) {\n  const binaryRgb = rgbToHex({\n    r: rgba.r,\n    g: rgba.g,\n    b: rgba.b\n  });\n  const aHex = convertDecimalToHex(rgba.a ?? 1);\n  return `${binaryRgb.padStart(6, '0')}${aHex === '0' ? '00' : aHex}`;\n}\nexport function hexToRgb(hexInput) {\n  const hex = expandHex(hexInput);\n  const rgb = parseInt(hex.replace('#', ''), 16);\n  return {\n    r: rgb >> 16 & 0xff,\n    g: rgb >> 8 & 0xff,\n    b: rgb & 0xff\n  };\n}\nexport function rgbToXyz(rgb) {\n  let {\n    r,\n    g,\n    b\n  } = rgb;\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n  r *= 100;\n  g *= 100;\n  b *= 100;\n  return {\n    x: r * 0.4124 + g * 0.3576 + b * 0.1805,\n    y: r * 0.2126 + g * 0.7152 + b * 0.0722,\n    z: r * 0.0193 + g * 0.1192 + b * 0.9505\n  };\n}\nexport function xyzToLab(xyz) {\n  let {\n    x,\n    y,\n    z\n  } = xyz;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  return {\n    l: 116 * y - 16,\n    a: 500 * (x - y),\n    b: 200 * (y - z)\n  };\n}\nexport function labToLch(lab) {\n  const {\n    l,\n    a,\n    b\n  } = lab;\n  let h = Math.atan2(b, a);\n  h > 0 ? h = h / Math.PI * 180 : h = 360 - Math.abs(h) / Math.PI * 180;\n  return {\n    l,\n    c: Math.sqrt(a * a + b * b),\n    h\n  };\n}\nexport function rgbToCmy(rgb) {\n  const {\n    r,\n    g,\n    b\n  } = rgb;\n  return {\n    c: 1 - r / 255,\n    m: 1 - g / 255,\n    y: 1 - b / 255\n  };\n}\nexport function cmyToCmyk(cmy) {\n  const {\n    c,\n    m,\n    y\n  } = cmy;\n  let k = 1;\n  if (c < k) k = c;\n  if (m < k) k = m;\n  if (y < k) k = y;\n  if (k === 1) return {\n    c: 0,\n    m: 0,\n    y: 0,\n    k: 1\n  };\n  return {\n    c: (c - k) / (1 - k),\n    m: (m - k) / (1 - k),\n    y: (y - k) / (1 - k),\n    k\n  };\n}\n//# sourceMappingURL=conversions.js.map","/*\n    Color Convertor\n    Owen Rees, MIT License, 2024\n\n    based on https://github.com/bgrins/TinyColor\n*/\n\nimport { inputParser } from './utils/inputParser';\nimport { cmyToCmyk, labToLch, rgbaToHex8, rgbToCmy, rgbToHex, rgbToHsl, rgbToHsv, rgbToXyz, toRgbBase, xyzToLab } from './utils/conversions';\nimport { calculateBrightness, calculateLuminance, findClosestColor, truncateHex } from './utils/utilities';\nimport namedColors, { namedColorsRgb } from './utils/namedColors';\nclass ColorConvertor {\n  constructor(colorInput) {\n    this._colorInput = colorInput ?? undefined; // string input of any color format\n    this._colorObj = inputParser(this._colorInput); // Color info object. E.g. { format: 'hex', value: '#ffffff' }\n    this._rgbObj = toRgbBase(this._colorObj); // RGB color info object. E.g. { format: 'rgb', value: { r: 255, g: 255, b: 255 }\n  }\n\n  /*\n    General Methods\n  */\n  getInput() {\n    return this._colorInput ?? '';\n  }\n  getColorObj() {\n    return this._colorObj;\n  }\n  getRgbObj() {\n    return this._rgbObj;\n  }\n  isValid() {\n    return this.getColorObj().value !== undefined;\n  }\n  setColor(color) {\n    this._colorInput = color;\n    this._colorObj = inputParser(this.getInput());\n    this._rgbObj = toRgbBase(this.getColorObj());\n  }\n\n  // fromRatio () {\n  //   return 'not implemented'\n  // },\n\n  toRgb() {\n    return toRgbBase(this.getColorObj());\n  }\n  toRgbString() {\n    const {\n      format,\n      value\n    } = this.getRgbObj();\n    const {\n      r,\n      g,\n      b,\n      a\n    } = value;\n    return `${format}(${r}, ${g}, ${b}${a !== undefined ? `, ${a}` : ''})`;\n  }\n  toHsv() {\n    return rgbToHsv(this.getRgbObj().value);\n  }\n  toHsvString() {\n    const {\n      h,\n      s,\n      v\n    } = rgbToHsv(this.getRgbObj().value);\n    return `hsv(${h}, ${s}%, ${v}%)`;\n  }\n  toHsl() {\n    return rgbToHsl(this.getRgbObj().value);\n  }\n  toHslString() {\n    const {\n      h,\n      s,\n      l\n    } = rgbToHsl(this.getRgbObj().value);\n    return `hsl(${h}, ${s}%, ${l}%)`;\n  }\n  toHex() {\n    return rgbToHex(this.getRgbObj().value);\n  }\n  toHexString() {\n    return `#${this.toHex()}`;\n  }\n  toHex8() {\n    const {\n      r,\n      g,\n      b\n    } = this.getRgbObj().value;\n    const a = this.getAlpha();\n    return rgbaToHex8({\n      r,\n      g,\n      b,\n      a\n    });\n  }\n  toHex8String() {\n    return `#${this.toHex8()}`;\n  }\n  toCmy() {\n    return rgbToCmy(this.getRgbObj().value);\n  }\n  toCmyk() {\n    return cmyToCmyk(this.toCmy());\n  }\n\n  /*\n    XYZ, CIE-L*ab, CIE-L*Ch(ab)\n    formulae from https://www.easyrgb.com/en/math.php\n  */\n\n  // X, Y and Z output refers to a D65/2° standard illuminant.\n  toXyz() {\n    return rgbToXyz(this.toNormalizedRgb());\n  }\n  toXyzString() {\n    const {\n      x,\n      y,\n      z\n    } = this.toXyz();\n    return `xyz(${x}, ${y}, ${z})`;\n  }\n\n  // CIE-L*ab\n  toLab() {\n    return xyzToLab(this.toXyz());\n  }\n  toLabString() {\n    const {\n      l,\n      a,\n      b\n    } = this.toLab();\n    return `lab(${l}, ${a}, ${b})`;\n  }\n  toLch() {\n    return labToLch(this.toLab());\n  }\n  toLchString() {\n    const {\n      l,\n      c,\n      h\n    } = this.toLch();\n    return `lch(${l}, ${c}, ${h})`;\n  }\n  getBrightness() {\n    return calculateBrightness(this.getRgbObj().value);\n  }\n  getLuminance() {\n    return calculateLuminance(this.getRgbObj().value);\n  }\n  isDark() {\n    return this.getBrightness() < 128;\n  }\n  isLight() {\n    return this.getBrightness() >= 128;\n  }\n  getFormat() {\n    return this.getColorObj().format;\n  }\n  getAlpha() {\n    let {\n      a\n    } = this.getRgbObj().value;\n    a = a ?? 1; // 100% alpha if working with rgb values\n    return a;\n  }\n  setAlpha(newAlpha) {\n    if (newAlpha < 0 || newAlpha > 1) {\n      throw new Error('Alpha value must be between 0 and 1');\n    }\n    const {\n      r,\n      g,\n      b\n    } = this.getRgbObj().value;\n    const a = newAlpha;\n    this.getRgbObj().value = {\n      r,\n      g,\n      b,\n      a\n    };\n  }\n  toNormalizedRgb() {\n    const {\n      r,\n      g,\n      b\n    } = this.getRgbObj().value;\n    return {\n      r: r / 255,\n      g: g / 255,\n      b: b / 255\n    };\n  }\n  toNormalizedRgba() {\n    const {\n      r,\n      g,\n      b\n    } = this.getRgbObj().value;\n    const a = this.getAlpha();\n    return {\n      r: r / 255,\n      g: g / 255,\n      b: b / 255,\n      a\n    };\n  }\n  toName() {\n    const hex = truncateHex(this.toHex());\n    for (const color in namedColors) {\n      if (namedColors[color] === hex) {\n        return color;\n      }\n    }\n    return undefined;\n  }\n  toNearestNamedColor() {\n    const rgb = this.getRgbObj().value;\n    return findClosestColor(rgb, namedColorsRgb);\n  }\n  toPercentageRgb() {\n    const {\n      r,\n      g,\n      b\n    } = this.getRgbObj().value;\n    return {\n      r: r / 255 * 100,\n      g: g / 255 * 100,\n      b: b / 255 * 100\n    };\n  }\n  toPercentageRgbString() {\n    const {\n      r,\n      g,\n      b\n    } = this.toPercentageRgb();\n    return `rgb(${r}%, ${g}%, ${b}%)`;\n  }\n  equals(color2) {\n    const {\n      r,\n      g,\n      b\n    } = this.getRgbObj().value;\n    const color2RgbObj = toRgbBase(inputParser(color2)).value;\n    return color2RgbObj.r === r && color2RgbObj.g === g && color2RgbObj.b === b;\n  }\n  random() {\n    this._rgbObj = {\n      format: 'rgb',\n      value: {\n        r: Math.floor(Math.random() * 256),\n        g: Math.floor(Math.random() * 256),\n        b: Math.floor(Math.random() * 256)\n      }\n    };\n    return this._rgbObj;\n  }\n  clone() {\n    return new ColorConvertor(this.getInput());\n  }\n\n  /*\n    Readability Methods\n      <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n  */\n\n  // Analyze the 2 colors and returns the color contrast defined by WCAG Version 2\n  readability(color2) {\n    const l1 = this.getLuminance();\n    const l2 = new ColorConvertor(color2).getLuminance();\n    return (Math.max(l1, l2) + 0.05) / (Math.min(l1, l2) + 0.05);\n  }\n\n  // isReadable (color2: string) {\n  //   const readability = this.readability(color2)\n  //   console.log(readability)\n  // }\n\n  // Combination Methods\n\n  // Utility Methods\n}\nexport default ColorConvertor;\n//# sourceMappingURL=colorconvertor.js.map"],"names":["namedColors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","namedColorsRgb","r","g","b","inputParser","color","undefined","format","value","test","replace","length","rgbArray","match","Number","rgbaArray","a","hslArray","h","s","l","hslaArray","hsvArray","v","labEuclideanDistance","lab1","lab2","Math","sqrt","pow","toRgbBase","colorObj","hexToRgb","hslToRgb","hsvToRgb","rgbToHsl","rgb","max","min","diff","round","hsl","hue2rgb","p","q","t","rgbToHsv","diffc","c","rr","gg","bb","hsv","i","floor","f","mod","rgbToHex","toString","padStart","rgbaToHex8","rgba","binaryRgb","aHex","d","hexInput","hex","expandHex","parseInt","rgbToXyz","x","y","z","xyzToLab","xyz","ColorConvertor","constructor","colorInput","this","_colorInput","_colorObj","_rgbObj","getInput","getColorObj","getRgbObj","isValid","setColor","toRgb","toRgbString","toHsv","toHsvString","toHsl","toHslString","toHex","toHexString","toHex8","getAlpha","toHex8String","toCmy","m","rgbToCmy","toCmyk","cmy","k","cmyToCmyk","toXyz","toNormalizedRgb","toXyzString","toLab","toLabString","toLch","lab","atan2","PI","abs","labToLch","toLchString","getBrightness","calculateBrightness","getLuminance","R","G","B","RsRGB","GsRGB","BsRGB","calculateLuminance","isDark","isLight","getFormat","setAlpha","newAlpha","Error","toNormalizedRgba","toName","truncateHex","toNearestNamedColor","minDistance","Infinity","closestColor","distance","findClosestColor","toPercentageRgb","toPercentageRgbString","equals","color2","color2RgbObj","random","clone","readability","l1","l2"],"mappings":"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"}