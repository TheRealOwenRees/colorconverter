{"version":3,"file":"bundle.umd.min.js","sources":["../esm/utils/namedColors.js","../esm/utils/inputParser.js","../esm/utils/utilities.js","../esm/utils/conversions.js","../esm/colorconvertor.js"],"sourcesContent":["/*\n    Big List of Colors\n    ------------------\n    <https://www.w3.org/TR/css-color-4/#named-colors>\n*/\n\nconst namedColors = {\n  aliceblue: 'f0f8ff',\n  antiquewhite: 'faebd7',\n  aqua: '0ff',\n  aquamarine: '7fffd4',\n  azure: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '000',\n  blanchedalmond: 'ffebcd',\n  blue: '00f',\n  blueviolet: '8a2be2',\n  brown: 'a52a2a',\n  burlywood: 'deb887',\n  burntsienna: 'ea7e5d',\n  cadetblue: '5f9ea0',\n  chartreuse: '7fff00',\n  chocolate: 'd2691e',\n  coral: 'ff7f50',\n  cornflowerblue: '6495ed',\n  cornsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: '0ff',\n  darkblue: '00008b',\n  darkcyan: '008b8b',\n  darkgoldenrod: 'b8860b',\n  darkgray: 'a9a9a9',\n  darkgreen: '006400',\n  darkgrey: 'a9a9a9',\n  darkkhaki: 'bdb76b',\n  darkmagenta: '8b008b',\n  darkolivegreen: '556b2f',\n  darkorange: 'ff8c00',\n  darkorchid: '9932cc',\n  darkred: '8b0000',\n  darksalmon: 'e9967a',\n  darkseagreen: '8fbc8f',\n  darkslateblue: '483d8b',\n  darkslategray: '2f4f4f',\n  darkslategrey: '2f4f4f',\n  darkturquoise: '00ced1',\n  darkviolet: '9400d3',\n  deeppink: 'ff1493',\n  deepskyblue: '00bfff',\n  dimgray: '696969',\n  dimgrey: '696969',\n  dodgerblue: '1e90ff',\n  firebrick: 'b22222',\n  floralwhite: 'fffaf0',\n  forestgreen: '228b22',\n  fuchsia: 'f0f',\n  gainsboro: 'dcdcdc',\n  ghostwhite: 'f8f8ff',\n  gold: 'ffd700',\n  goldenrod: 'daa520',\n  gray: '808080',\n  green: '008000',\n  greenyellow: 'adff2f',\n  grey: '808080',\n  honeydew: 'f0fff0',\n  hotpink: 'ff69b4',\n  indianred: 'cd5c5c',\n  indigo: '4b0082',\n  ivory: 'fffff0',\n  khaki: 'f0e68c',\n  lavender: 'e6e6fa',\n  lavenderblush: 'fff0f5',\n  lawngreen: '7cfc00',\n  lemonchiffon: 'fffacd',\n  lightblue: 'add8e6',\n  lightcoral: 'f08080',\n  lightcyan: 'e0ffff',\n  lightgoldenrodyellow: 'fafad2',\n  lightgray: 'd3d3d3',\n  lightgreen: '90ee90',\n  lightgrey: 'd3d3d3',\n  lightpink: 'ffb6c1',\n  lightsalmon: 'ffa07a',\n  lightseagreen: '20b2aa',\n  lightskyblue: '87cefa',\n  lightslategray: '789',\n  lightslategrey: '789',\n  lightsteelblue: 'b0c4de',\n  lightyellow: 'ffffe0',\n  lime: '0f0',\n  limegreen: '32cd32',\n  linen: 'faf0e6',\n  magenta: 'f0f',\n  maroon: '800000',\n  mediumaquamarine: '66cdaa',\n  mediumblue: '0000cd',\n  mediumorchid: 'ba55d3',\n  mediumpurple: '9370db',\n  mediumseagreen: '3cb371',\n  mediumslateblue: '7b68ee',\n  mediumspringgreen: '00fa9a',\n  mediumturquoise: '48d1cc',\n  mediumvioletred: 'c71585',\n  midnightblue: '191970',\n  mintcream: 'f5fffa',\n  mistyrose: 'ffe4e1',\n  moccasin: 'ffe4b5',\n  navajowhite: 'ffdead',\n  navy: '000080',\n  oldlace: 'fdf5e6',\n  olive: '808000',\n  olivedrab: '6b8e23',\n  orange: 'ffa500',\n  orangered: 'ff4500',\n  orchid: 'da70d6',\n  palegoldenrod: 'eee8aa',\n  palegreen: '98fb98',\n  paleturquoise: 'afeeee',\n  palevioletred: 'db7093',\n  papayawhip: 'ffefd5',\n  peachpuff: 'ffdab9',\n  peru: 'cd853f',\n  pink: 'ffc0cb',\n  plum: 'dda0dd',\n  powderblue: 'b0e0e6',\n  purple: '800080',\n  rebeccapurple: '663399',\n  red: 'f00',\n  rosybrown: 'bc8f8f',\n  royalblue: '4169e1',\n  saddlebrown: '8b4513',\n  salmon: 'fa8072',\n  sandybrown: 'f4a460',\n  seagreen: '2e8b57',\n  seashell: 'fff5ee',\n  sienna: 'a0522d',\n  silver: 'c0c0c0',\n  skyblue: '87ceeb',\n  slateblue: '6a5acd',\n  slategray: '708090',\n  slategrey: '708090',\n  snow: 'fffafa',\n  springgreen: '00ff7f',\n  steelblue: '4682b4',\n  tan: 'd2b48c',\n  teal: '008080',\n  thistle: 'd8bfd8',\n  tomato: 'ff6347',\n  turquoise: '40e0d0',\n  violet: 'ee82ee',\n  wheat: 'f5deb3',\n  white: 'fff',\n  whitesmoke: 'f5f5f5',\n  yellow: 'ff0',\n  yellowgreen: '9acd32'\n};\nexport const namedColorsRgb = {\n  aliceblue: {\n    r: 240,\n    g: 248,\n    b: 255\n  },\n  antiquewhite: {\n    r: 250,\n    g: 235,\n    b: 215\n  },\n  aqua: {\n    r: 0,\n    g: 255,\n    b: 255\n  },\n  aquamarine: {\n    r: 127,\n    g: 255,\n    b: 212\n  },\n  azure: {\n    r: 240,\n    g: 255,\n    b: 255\n  },\n  beige: {\n    r: 245,\n    g: 245,\n    b: 220\n  },\n  bisque: {\n    r: 255,\n    g: 228,\n    b: 196\n  },\n  black: {\n    r: 0,\n    g: 0,\n    b: 0\n  },\n  blanchedalmond: {\n    r: 255,\n    g: 235,\n    b: 205\n  },\n  blue: {\n    r: 0,\n    g: 0,\n    b: 255\n  },\n  blueviolet: {\n    r: 138,\n    g: 43,\n    b: 226\n  },\n  brown: {\n    r: 165,\n    g: 42,\n    b: 42\n  },\n  burlywood: {\n    r: 222,\n    g: 184,\n    b: 135\n  },\n  burntsienna: {\n    r: 234,\n    g: 126,\n    b: 93\n  },\n  cadetblue: {\n    r: 95,\n    g: 158,\n    b: 160\n  },\n  chartreuse: {\n    r: 127,\n    g: 255,\n    b: 0\n  },\n  chocolate: {\n    r: 210,\n    g: 105,\n    b: 30\n  },\n  coral: {\n    r: 255,\n    g: 127,\n    b: 80\n  },\n  cornflowerblue: {\n    r: 100,\n    g: 149,\n    b: 237\n  },\n  cornsilk: {\n    r: 255,\n    g: 248,\n    b: 220\n  },\n  crimson: {\n    r: 220,\n    g: 20,\n    b: 60\n  },\n  cyan: {\n    r: 0,\n    g: 255,\n    b: 255\n  },\n  darkblue: {\n    r: 0,\n    g: 0,\n    b: 139\n  },\n  darkcyan: {\n    r: 0,\n    g: 139,\n    b: 139\n  },\n  darkgoldenrod: {\n    r: 184,\n    g: 134,\n    b: 11\n  },\n  darkgray: {\n    r: 169,\n    g: 169,\n    b: 169\n  },\n  darkgreen: {\n    r: 0,\n    g: 100,\n    b: 0\n  },\n  darkgrey: {\n    r: 169,\n    g: 169,\n    b: 169\n  },\n  darkkhaki: {\n    r: 189,\n    g: 183,\n    b: 107\n  },\n  darkmagenta: {\n    r: 139,\n    g: 0,\n    b: 139\n  },\n  darkolivegreen: {\n    r: 85,\n    g: 107,\n    b: 47\n  },\n  darkorange: {\n    r: 255,\n    g: 140,\n    b: 0\n  },\n  darkorchid: {\n    r: 153,\n    g: 50,\n    b: 204\n  },\n  darkred: {\n    r: 139,\n    g: 0,\n    b: 0\n  },\n  darksalmon: {\n    r: 233,\n    g: 150,\n    b: 122\n  },\n  darkseagreen: {\n    r: 143,\n    g: 188,\n    b: 143\n  },\n  darkslateblue: {\n    r: 72,\n    g: 61,\n    b: 139\n  },\n  darkslategray: {\n    r: 47,\n    g: 79,\n    b: 79\n  },\n  darkslategrey: {\n    r: 47,\n    g: 79,\n    b: 79\n  },\n  darkturquoise: {\n    r: 0,\n    g: 206,\n    b: 209\n  },\n  darkviolet: {\n    r: 148,\n    g: 0,\n    b: 211\n  },\n  deeppink: {\n    r: 255,\n    g: 20,\n    b: 147\n  },\n  deepskyblue: {\n    r: 0,\n    g: 191,\n    b: 255\n  },\n  dimgray: {\n    r: 105,\n    g: 105,\n    b: 105\n  },\n  dimgrey: {\n    r: 105,\n    g: 105,\n    b: 105\n  },\n  dodgerblue: {\n    r: 30,\n    g: 144,\n    b: 255\n  },\n  firebrick: {\n    r: 178,\n    g: 34,\n    b: 34\n  },\n  floralwhite: {\n    r: 255,\n    g: 250,\n    b: 240\n  },\n  forestgreen: {\n    r: 34,\n    g: 139,\n    b: 34\n  },\n  fuchsia: {\n    r: 255,\n    g: 0,\n    b: 255\n  },\n  gainsboro: {\n    r: 220,\n    g: 220,\n    b: 220\n  },\n  ghostwhite: {\n    r: 248,\n    g: 248,\n    b: 255\n  },\n  gold: {\n    r: 255,\n    g: 215,\n    b: 0\n  },\n  goldenrod: {\n    r: 218,\n    g: 165,\n    b: 32\n  },\n  gray: {\n    r: 128,\n    g: 128,\n    b: 128\n  },\n  green: {\n    r: 0,\n    g: 128,\n    b: 0\n  },\n  greenyellow: {\n    r: 173,\n    g: 255,\n    b: 47\n  },\n  grey: {\n    r: 128,\n    g: 128,\n    b: 128\n  },\n  honeydew: {\n    r: 240,\n    g: 255,\n    b: 240\n  },\n  hotpink: {\n    r: 255,\n    g: 105,\n    b: 180\n  },\n  indianred: {\n    r: 205,\n    g: 92,\n    b: 92\n  },\n  indigo: {\n    r: 75,\n    g: 0,\n    b: 130\n  },\n  ivory: {\n    r: 255,\n    g: 255,\n    b: 240\n  },\n  khaki: {\n    r: 240,\n    g: 230,\n    b: 140\n  },\n  lavender: {\n    r: 230,\n    g: 230,\n    b: 250\n  },\n  lavenderblush: {\n    r: 255,\n    g: 240,\n    b: 245\n  },\n  lawngreen: {\n    r: 124,\n    g: 252,\n    b: 0\n  },\n  lemonchiffon: {\n    r: 255,\n    g: 250,\n    b: 205\n  },\n  lightblue: {\n    r: 173,\n    g: 216,\n    b: 230\n  },\n  lightcoral: {\n    r: 240,\n    g: 128,\n    b: 128\n  },\n  lightcyan: {\n    r: 224,\n    g: 255,\n    b: 255\n  },\n  lightgoldenrodyellow: {\n    r: 250,\n    g: 250,\n    b: 210\n  },\n  lightgray: {\n    r: 211,\n    g: 211,\n    b: 211\n  },\n  lightgreen: {\n    r: 144,\n    g: 238,\n    b: 144\n  },\n  lightgrey: {\n    r: 211,\n    g: 211,\n    b: 211\n  },\n  lightpink: {\n    r: 255,\n    g: 182,\n    b: 193\n  },\n  lightsalmon: {\n    r: 255,\n    g: 160,\n    b: 122\n  },\n  lightseagreen: {\n    r: 32,\n    g: 178,\n    b: 170\n  },\n  lightskyblue: {\n    r: 135,\n    g: 206,\n    b: 250\n  },\n  lightslategray: {\n    r: 120,\n    g: 128,\n    b: 128\n  },\n  lightslategrey: {\n    r: 120,\n    g: 128,\n    b: 128\n  },\n  lightsteelblue: {\n    r: 176,\n    g: 196,\n    b: 222\n  },\n  lightyellow: {\n    r: 255,\n    g: 255,\n    b: 224\n  },\n  lime: {\n    r: 0,\n    g: 255,\n    b: 0\n  },\n  limegreen: {\n    r: 50,\n    g: 205,\n    b: 50\n  },\n  linen: {\n    r: 250,\n    g: 240,\n    b: 230\n  },\n  magenta: {\n    r: 255,\n    g: 0,\n    b: 255\n  },\n  maroon: {\n    r: 128,\n    g: 0,\n    b: 0\n  },\n  mediumaquamarine: {\n    r: 102,\n    g: 205,\n    b: 170\n  },\n  mediumblue: {\n    r: 0,\n    g: 0,\n    b: 205\n  },\n  mediumorchid: {\n    r: 186,\n    g: 85,\n    b: 211\n  },\n  mediumpurple: {\n    r: 147,\n    g: 112,\n    b: 219\n  },\n  mediumseagreen: {\n    r: 60,\n    g: 179,\n    b: 113\n  },\n  mediumslateblue: {\n    r: 123,\n    g: 104,\n    b: 238\n  },\n  mediumspringgreen: {\n    r: 0,\n    g: 250,\n    b: 154\n  },\n  mediumturquoise: {\n    r: 72,\n    g: 209,\n    b: 204\n  },\n  mediumvioletred: {\n    r: 199,\n    g: 21,\n    b: 133\n  },\n  midnightblue: {\n    r: 25,\n    g: 25,\n    b: 112\n  },\n  mintcream: {\n    r: 245,\n    g: 255,\n    b: 250\n  },\n  mistyrose: {\n    r: 255,\n    g: 228,\n    b: 225\n  },\n  moccasin: {\n    r: 255,\n    g: 228,\n    b: 181\n  },\n  navajowhite: {\n    r: 255,\n    g: 222,\n    b: 173\n  },\n  navy: {\n    r: 0,\n    g: 0,\n    b: 128\n  },\n  oldlace: {\n    r: 253,\n    g: 245,\n    b: 230\n  },\n  olive: {\n    r: 128,\n    g: 128,\n    b: 0\n  },\n  olivedrab: {\n    r: 107,\n    g: 142,\n    b: 35\n  },\n  orange: {\n    r: 255,\n    g: 165,\n    b: 0\n  },\n  orangered: {\n    r: 255,\n    g: 69,\n    b: 0\n  },\n  orchid: {\n    r: 218,\n    g: 112,\n    b: 214\n  },\n  palegoldenrod: {\n    r: 238,\n    g: 232,\n    b: 170\n  },\n  palegreen: {\n    r: 152,\n    g: 251,\n    b: 152\n  },\n  paleturquoise: {\n    r: 175,\n    g: 238,\n    b: 238\n  },\n  palevioletred: {\n    r: 219,\n    g: 112,\n    b: 147\n  },\n  papayawhip: {\n    r: 255,\n    g: 239,\n    b: 213\n  },\n  peachpuff: {\n    r: 255,\n    g: 218,\n    b: 185\n  },\n  peru: {\n    r: 205,\n    g: 133,\n    b: 63\n  },\n  pink: {\n    r: 255,\n    g: 192,\n    b: 203\n  },\n  plum: {\n    r: 221,\n    g: 160,\n    b: 221\n  },\n  powderblue: {\n    r: 176,\n    g: 224,\n    b: 230\n  },\n  purple: {\n    r: 128,\n    g: 0,\n    b: 128\n  },\n  rebeccapurple: {\n    r: 102,\n    g: 51,\n    b: 153\n  },\n  red: {\n    r: 255,\n    g: 0,\n    b: 0\n  },\n  rosybrown: {\n    r: 188,\n    g: 143,\n    b: 143\n  },\n  royalblue: {\n    r: 65,\n    g: 105,\n    b: 225\n  },\n  saddlebrown: {\n    r: 139,\n    g: 69,\n    b: 19\n  },\n  salmon: {\n    r: 250,\n    g: 128,\n    b: 114\n  },\n  sandybrown: {\n    r: 244,\n    g: 164,\n    b: 96\n  },\n  seagreen: {\n    r: 46,\n    g: 139,\n    b: 87\n  },\n  seashell: {\n    r: 255,\n    g: 245,\n    b: 238\n  },\n  sienna: {\n    r: 160,\n    g: 82,\n    b: 45\n  },\n  silver: {\n    r: 192,\n    g: 192,\n    b: 192\n  },\n  skyblue: {\n    r: 135,\n    g: 206,\n    b: 235\n  },\n  slateblue: {\n    r: 106,\n    g: 90,\n    b: 205\n  },\n  slategray: {\n    r: 112,\n    g: 128,\n    b: 144\n  },\n  slategrey: {\n    r: 112,\n    g: 128,\n    b: 144\n  },\n  snow: {\n    r: 255,\n    g: 250,\n    b: 250\n  },\n  springgreen: {\n    r: 0,\n    g: 255,\n    b: 127\n  },\n  steelblue: {\n    r: 70,\n    g: 130,\n    b: 180\n  },\n  tan: {\n    r: 210,\n    g: 180,\n    b: 140\n  },\n  teal: {\n    r: 0,\n    g: 128,\n    b: 128\n  },\n  thistle: {\n    r: 216,\n    g: 191,\n    b: 216\n  },\n  tomato: {\n    r: 255,\n    g: 99,\n    b: 71\n  },\n  turquoise: {\n    r: 64,\n    g: 224,\n    b: 208\n  },\n  violet: {\n    r: 238,\n    g: 130,\n    b: 238\n  },\n  wheat: {\n    r: 245,\n    g: 222,\n    b: 179\n  },\n  white: {\n    r: 255,\n    g: 255,\n    b: 255\n  },\n  whitesmoke: {\n    r: 245,\n    g: 245,\n    b: 245\n  },\n  yellow: {\n    r: 255,\n    g: 255,\n    b: 0\n  },\n  yellowgreen: {\n    r: 154,\n    g: 205,\n    b: 50\n  }\n};\nexport default namedColors;\n//# sourceMappingURL=namedColors.js.map","import namedColors from './namedColors';\n\n/*\n Given a string or object, convert that input to a ColorObjType\n\n Example input:\n \"red\"\n \"#f00\" or \"f00\"\n \"#ff0000\" or \"ff0000\"\n \"#ff000000\" or \"ff000000\"\n \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n TODO - OKLCH / OKLAB etc.\n*/\nexport function inputParser(color) {\n  if (color !== undefined) {\n    // RGB\n    if (/^rgb/.test(color)) {\n      const rgbArray = color.match(/\\d+/g);\n      if (rgbArray != null && rgbArray.length === 3) {\n        return {\n          format: 'rgb',\n          value: {\n            r: Number(rgbArray[0]),\n            g: Number(rgbArray[1]),\n            b: Number(rgbArray[2])\n          }\n        };\n      }\n    }\n\n    // RGBA\n    if (/^rgba/.test(color)) {\n      const rgbaArray = color.match(/\\d+(\\.\\d+)?/g);\n      if (rgbaArray != null && rgbaArray.length === 4) {\n        return {\n          format: 'rgba',\n          value: {\n            r: Number(rgbaArray[0]),\n            g: Number(rgbaArray[1]),\n            b: Number(rgbaArray[2]),\n            a: Number(rgbaArray[3])\n          }\n        };\n      }\n    }\n    if (/^[a-z]+$/.test(color) && namedColors[color] !== undefined) {\n      return {\n        format: 'name',\n        value: namedColors[color]\n      };\n    }\n\n    //   // Hex - 3 or 6 digits\n    if (color.replace('#', '').length === 6 || color.replace('#', '').length === 3) {\n      return {\n        format: 'hex',\n        value: color.replace('#', '')\n      };\n    }\n\n    // HexA\n    if (color.replace('#', '').length === 8) {\n      return {\n        format: 'hexa',\n        value: color.replace('#', '')\n      };\n    }\n\n    // HSL\n    if (/^hsl/.test(color)) {\n      const hslArray = color.match(/\\d+(\\.\\d+)?%?/g);\n      if (hslArray != null && hslArray.length === 3) {\n        return {\n          format: 'hsl',\n          value: {\n            h: Number(hslArray[0]),\n            s: Number(hslArray[1].replace('%', '')),\n            l: Number(hslArray[2].replace('%', ''))\n          }\n        };\n      }\n    }\n\n    // HSLA\n    if (/^hsla/.test(color)) {\n      const hslaArray = color.match(/\\d+(\\.\\d+)?%?/g);\n      if (hslaArray != null && hslaArray.length === 4) {\n        return {\n          format: 'hsla',\n          value: {\n            h: Number(hslaArray[0]),\n            s: Number(hslaArray[1].replace('%', '')),\n            l: Number(hslaArray[2].replace('%', '')),\n            a: Number(hslaArray[3])\n          }\n        };\n      }\n    }\n\n    // HSV\n    if (/^hsv/.test(color)) {\n      const hsvArray = color.match(/\\d+(\\.\\d+)?%?/g);\n      if (hsvArray != null && hsvArray.length === 3) {\n        return {\n          format: 'hsv',\n          value: {\n            h: Number(hsvArray[0]),\n            s: Number(hsvArray[1].replace('%', '')),\n            v: Number(hsvArray[2].replace('%', ''))\n          }\n        };\n      }\n    }\n  }\n  return {\n    format: undefined,\n    value: undefined\n  };\n}\n//# sourceMappingURL=inputParser.js.map","import { rgbToXyz, xyzToLab } from './conversions';\nexport function convertDecimalToHex(d) {\n  return Math.round(d * 255).toString(16);\n}\nexport function calculateBrightness(rgb) {\n  const {\n    r,\n    g,\n    b\n  } = rgb;\n  if (r === undefined || g === undefined || b === undefined) {\n    throw new Error('RGB values must be defined');\n  }\n  return (r * 299 + g * 587 + b * 114) / 1000;\n}\n\n// http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\nexport function calculateLuminance(rgb) {\n  const {\n    r,\n    g,\n    b\n  } = rgb;\n  if (r === undefined || g === undefined || b === undefined) {\n    throw new Error('RGB values must be defined');\n  }\n  let R, G, B;\n  if (r <= 0.03928) R = r / 12.92;else R = Math.pow((r + 0.055) / 1.055, 2.4);\n  if (g <= 0.03928) G = g / 12.92;else G = Math.pow((g + 0.055) / 1.055, 2.4);\n  if (b <= 0.03928) B = b / 12.92;else B = Math.pow((b + 0.055) / 1.055, 2.4);\n  return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n}\nexport function truncateHex(hex) {\n  if (hex.length === 6) {\n    if (hex[2] === hex[3] && hex[4] === hex[5]) {\n      return hex[0] + hex[1] + hex[2];\n    }\n  }\n  return hex;\n}\nexport function expandHex(hex) {\n  if (hex.length === 3) {\n    return hex[0] + hex[1] + hex[2] + hex[2] + hex[2] + hex[2];\n  }\n  return hex;\n}\nexport function labEuclideanDistance(lab1, lab2) {\n  if (lab1.l === undefined || lab1.a === undefined || lab1.b === undefined || lab2.l === undefined || lab2.a === undefined || lab2.b === undefined) {\n    throw new Error('Lab values must be defined');\n  } // TODO can we do 'any' === undefined inside of the lab1 and lab2 objects?\n  return Math.sqrt(Math.pow(lab1.l - lab2.l, 2) + Math.pow(lab1.a - lab2.a, 2) + Math.pow(lab1.b - lab1.b, 2));\n}\nexport function findClosestColor(rgb, namedColorsRgb) {\n  let minDistance = Infinity;\n  let closestColor = '';\n  const lab1 = xyzToLab(rgbToXyz(rgb));\n  for (const color in namedColorsRgb) {\n    const lab2 = xyzToLab(rgbToXyz(namedColorsRgb[color]));\n    const distance = labEuclideanDistance(lab1, lab2);\n    if (distance < minDistance) {\n      closestColor = color;\n      minDistance = distance;\n    }\n  }\n  return closestColor;\n}\n//# sourceMappingURL=utilities.js.map","/*\n    Color conversion functions. 'Normalized' means 0-1 range.\n\n    Formulae from:\n    https://www.easyrgb.com/en/math.php\n    https://gist.github.com/avisek/eadfbe7a7a169b1001a2d3affc21052e\n*/\n\nimport { convertDecimalToHex, expandHex } from './utilities';\nconst referenceWhiteConstants = {\n  x: 95.047,\n  y: 100,\n  z: 108.883\n};\nexport function toRgbBase(colorObj) {\n  if (colorObj.format === 'rgb' || colorObj.format === 'rgba') {\n    return rgbToNormalizedRgb(colorObj.value);\n  }\n  if (colorObj.format === 'hex' && typeof colorObj.value === 'string') {\n    return rgbToNormalizedRgb(hexToRgb(colorObj.value));\n  }\n  if (colorObj.format === 'hsl') {\n    return hslToRgbNormalized(colorObj.value);\n  }\n  if (colorObj.format === 'hsv') {\n    return hsvToRgbNormalized(colorObj.value);\n  }\n  return {\n    r: undefined,\n    g: undefined,\n    b: undefined,\n    a: undefined\n  };\n}\nexport function rgbNormalizedToRgb(rgb) {\n  return {\n    r: rgb.r !== undefined ? Math.round(rgb.r * 255) : undefined,\n    g: rgb.g !== undefined ? Math.round(rgb.g * 255) : undefined,\n    b: rgb.b !== undefined ? Math.round(rgb.b * 255) : undefined,\n    a: rgb.a ?? undefined\n  };\n}\nexport function rgbNormalizedToRgbPercent(rgb) {\n  return {\n    r: rgb.r !== undefined ? Math.round(rgb.r * 100) : undefined,\n    g: rgb.g !== undefined ? Math.round(rgb.g * 100) : undefined,\n    b: rgb.b !== undefined ? Math.round(rgb.b * 100) : undefined,\n    a: rgb.a ?? undefined\n  };\n}\nexport function rgbToNormalizedRgb(rgb) {\n  const {\n    r,\n    g,\n    b,\n    a\n  } = rgb;\n  return {\n    r: r !== undefined ? r / 255 : undefined,\n    g: g !== undefined ? g / 255 : undefined,\n    b: b !== undefined ? b / 255 : undefined,\n    a: a ?? undefined\n  };\n}\nexport function rgbToHex(rgb) {\n  if (rgb.r === undefined || rgb.g === undefined || rgb.b === undefined) {\n    return undefined;\n  }\n  const binaryRgb = rgb.r << 16 | rgb.g << 8 | rgb.b;\n  return binaryRgb.toString(16).padStart(6, '0');\n}\nexport function rgbaToHex8(rgba) {\n  const binaryRgb = rgbToHex(rgba);\n  if (binaryRgb === undefined) {\n    return '';\n  }\n  const aHex = convertDecimalToHex(rgba.a ?? 1);\n  return `${binaryRgb.padStart(6, '0')}${aHex === '0' ? '00' : aHex}`;\n}\nexport function rgbNormalizedToHsl(rgb) {\n  const {\n    r,\n    g,\n    b\n  } = rgb;\n  if (r === undefined || g === undefined || b === undefined) {\n    return {\n      h: undefined,\n      s: undefined,\n      l: undefined\n    };\n  }\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  let h = (max + min) / 2;\n  let s;\n  const l = (max + min) / 2;\n  if (max === min) {\n    h = 0;\n    s = 0; // Achromatic\n  } else {\n    const diff = max - min;\n    s = l > 0.5 ? diff / (2 - max - min) : diff / (max + min);\n    switch (max) {\n      case r:\n        h = (g - b) / diff + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / diff + 2;\n        break;\n      case b:\n        h = (r - g) / diff + 4;\n        break;\n      default:\n        break;\n    }\n    h /= 6;\n  }\n  return {\n    h: Math.round(h * 360),\n    s: Math.round(s * 100),\n    l: Math.round(l * 100)\n  };\n}\nexport function rgbNormalizedToHsv(rgb) {\n  if (rgb.r === undefined || rgb.g === undefined || rgb.b === undefined) {\n    return {\n      h: undefined,\n      s: undefined,\n      v: undefined\n    };\n  }\n  const max = Math.max(rgb.r, rgb.g, rgb.b);\n  const min = Math.min(rgb.r, rgb.g, rgb.b);\n  let h = max;\n  let s = max;\n  const v = max;\n  const diff = max - min;\n  const diffc = c => (max - c) / 6 / diff + 1 / 2;\n  if (diff === 0) {\n    h = 0;\n    s = 0;\n  } else {\n    s = diff / max;\n    const rr = diffc(rgb.r);\n    const gg = diffc(rgb.g);\n    const bb = diffc(rgb.b);\n    if (rgb.r === max) {\n      h = rgb.b - rgb.g;\n    } else if (rgb.g === max) {\n      h = 1 / 3 + rr - bb;\n    } else if (rgb.b === max) {\n      h = 2 / 3 + gg - rr;\n    }\n    if (h < 0) {\n      h += 1;\n    } else if (h > 1) {\n      h -= 1;\n    }\n  }\n  return {\n    h: Math.round(h * 360),\n    s: Math.round(s * 100),\n    v: Math.round(v * 100)\n  };\n}\nexport function hslToRgbNormalized(hsl) {\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n      return q;\n    }\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n  }\n  const h = (hsl.h ?? 0) / 360;\n  const s = (hsl.s ?? 0) / 100;\n  const l = (hsl.l ?? 0) / 100;\n  let r;\n  let g;\n  let b;\n  if (s === 0) {\n    r = g = b = l; // Achromatic\n  } else {\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n  return {\n    r,\n    g,\n    b\n  };\n}\nexport function hsvToRgbNormalized(hsv) {\n  const h = (hsv.h ?? 0) / 360 * 6;\n  const s = (hsv.s ?? 0) / 100;\n  const v = (hsv.v ?? 0) / 100;\n  const i = Math.floor(h);\n  const f = h - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  const mod = i % 6;\n  const r = [v, q, p, p, t, v][mod];\n  const g = [t, v, v, q, p, p][mod];\n  const b = [p, p, t, v, v, q][mod];\n  return {\n    r,\n    g,\n    b\n  };\n}\nexport function hexToRgb(hexColor) {\n  const hex = expandHex(hexColor);\n  const rgb = parseInt(hex.replace('#', ''), 16);\n  return {\n    r: rgb >> 16 & 0xff,\n    g: rgb >> 8 & 0xff,\n    b: rgb & 0xff\n  };\n}\nexport function xyzToLab(xyz) {\n  let {\n    x,\n    y,\n    z\n  } = xyz;\n  if (x === undefined || y === undefined || z === undefined) {\n    return {\n      l: undefined,\n      a: undefined,\n      b: undefined\n    };\n  }\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  return {\n    l: 116 * y - 16,\n    a: 500 * (x - y),\n    b: 200 * (y - z)\n  };\n}\nexport function labToLch(lab) {\n  if (lab.l === undefined || lab.a === undefined || lab.b === undefined) {\n    return {\n      l: undefined,\n      c: undefined,\n      h: undefined\n    };\n  }\n  let h = Math.atan2(lab.b, lab.a);\n  h > 0 ? h = h / Math.PI * 180 : h = 360 - Math.abs(h) / Math.PI * 180;\n  return {\n    l: lab.l,\n    c: Math.sqrt(lab.a * lab.a + lab.b * lab.b),\n    h\n  };\n}\nexport function rgbNormalizedToCmy(rgb) {\n  if (rgb.r === undefined || rgb.g === undefined || rgb.b === undefined) {\n    return {\n      c: undefined,\n      m: undefined,\n      y: undefined\n    };\n  }\n  return {\n    c: 1 - rgb.r,\n    m: 1 - rgb.g,\n    y: 1 - rgb.b\n  };\n}\nexport function cmyToCmyk(cmy) {\n  if (cmy.c === undefined || cmy.m === undefined || cmy.y === undefined) {\n    return {\n      c: undefined,\n      m: undefined,\n      y: undefined\n    };\n  }\n  let k = 1;\n  if (cmy.c < k) k = cmy.c;\n  if (cmy.m < k) k = cmy.m;\n  if (cmy.y < k) k = cmy.y;\n  if (k === 1) return {\n    c: 0,\n    m: 0,\n    y: 0,\n    k: 1\n  };\n  return {\n    c: (cmy.c - k) / (1 - k),\n    m: (cmy.m - k) / (1 - k),\n    y: (cmy.y - k) / (1 - k),\n    k\n  };\n}\nexport function lchToLab(lch) {\n  if (lch.l === undefined || lch.c === undefined || lch.h === undefined) {\n    return {\n      l: undefined,\n      a: undefined,\n      b: undefined\n    };\n  }\n  const hr = lch.h * Math.PI / 180;\n  return {\n    l: lch.l,\n    a: Math.cos(hr) * lch.c,\n    b: Math.sin(hr) * lch.c\n  };\n}\n\n/*\n    Reference white constants are based on the standard illuminant D65:\n    https://en.wikipedia.org/wiki/Illuminant_D65\n\n    The following is a list of reference white points for various standard illuminants:\n    https://en.wikipedia.org/wiki/Standard_illuminant#White_points_of_standard_illuminants\n\n    Pass in a custom reference white point if you want to use a different one, e.g.:\n    { x: 95.047, y: 100, z: 108.883 } for D65\n    { x: 96.422, y: 100, z: 82.521 } for D50\n    { x: 100, y: 100, z: 100 } for E\n*/\nexport function labToXyz(lab, referenceWhite = referenceWhiteConstants) {\n  if (lab.l === undefined || lab.a === undefined || lab.b === undefined) {\n    return {\n      x: undefined,\n      y: undefined,\n      z: undefined\n    };\n  }\n  let y = (lab.l + 16) / 116;\n  let x = lab.a / 500 + y;\n  let z = y - lab.b / 200;\n  const y2 = Math.pow(y, 3);\n  const x2 = Math.pow(x, 3);\n  const z2 = Math.pow(z, 3);\n  y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n  x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n  z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n  return {\n    x: x * referenceWhite.x,\n    y: y * referenceWhite.y,\n    z: z * referenceWhite.z\n  };\n}\nexport function xyzToRgbNormalized(xyz) {\n  if (xyz.x === undefined || xyz.y === undefined || xyz.z === undefined) {\n    return {\n      r: undefined,\n      g: undefined,\n      b: undefined\n    };\n  }\n  let {\n    x,\n    y,\n    z\n  } = xyz;\n  x /= 100;\n  y /= 100;\n  z /= 100;\n  const r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  const g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  const b = x * 0.0557 + y * -0.2040 + z * 1.0570;\n  return {\n    r: r > 0.0031308 ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055 : r * 12.92,\n    g: g > 0.0031308 ? 1.055 * Math.pow(g, 1 / 2.4) - 0.055 : g * 12.92,\n    b: b > 0.0031308 ? 1.055 * Math.pow(b, 1 / 2.4) - 0.055 : b * 12.92\n  };\n}\nexport function rgbToXyz(rgb) {\n  // TODO work with normalised figures, round to sRGB\n  let {\n    r,\n    g,\n    b\n  } = rgb;\n  if (r === undefined || g === undefined || b === undefined) {\n    return {\n      x: undefined,\n      y: undefined,\n      z: undefined\n    };\n  }\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n  r *= 100;\n  g *= 100;\n  b *= 100;\n  return {\n    x: r * 0.4124 + g * 0.3576 + b * 0.1805,\n    y: r * 0.2126 + g * 0.7152 + b * 0.0722,\n    z: r * 0.0193 + g * 0.1192 + b * 0.9505\n  };\n}\n//# sourceMappingURL=conversions.js.map","/*\n    Color Convertor\n    Owen Rees, MIT License, 2024\n\n    based on https://github.com/bgrins/TinyColor\n*/\n\nimport { inputParser } from './utils/inputParser';\nimport { rgbNormalizedToRgb, rgbNormalizedToHsl, toRgbBase, rgbNormalizedToCmy, cmyToCmyk, rgbNormalizedToHsv, rgbToXyz, xyzToLab, labToLch, rgbToHex, rgbaToHex8 } from './utils/conversions';\nimport { calculateBrightness, calculateLuminance, findClosestColor, truncateHex } from './utils/utilities';\nimport namedColors, { namedColorsRgb } from './utils/namedColors';\nclass ColorConvertor {\n  constructor(colorInput) {\n    this._colorInput = colorInput ?? undefined; // string input of any color format\n    this._colorObj = inputParser(this._colorInput); // Color info object created from _colorInput. E.g. { format: 'hex', value: '#ffffff' }\n    this._rgbObj = toRgbBase(this._colorObj); // RGB normalised values object - 0-1. E.g. { r: 1, g: 0.5, b: 0.8 }\n  }\n  getInput() {\n    return this._colorInput ?? '';\n  }\n  getColorObj() {\n    return this._colorObj;\n  }\n  getRgbObj() {\n    return this._rgbObj;\n  }\n  setInput(colorInput) {\n    this._colorInput = colorInput;\n  }\n  setColorObj(colorObj) {\n    this._colorObj = colorObj;\n  }\n  setRbgObj(rgbObj) {\n    this._rgbObj = rgbObj;\n  }\n\n  /**\n   * Returns the RGB values in the range 0-255\n   * @returns {RgbObject} - RGB values in the range 0-255\n   * @memberof ColorConvertor\n   */\n  toRgb() {\n    return rgbNormalizedToRgb(this.getRgbObj());\n  }\n\n  /**\n   * @returns {string} - RGB values in the range 0-255 as a string\n   * @memberof ColorConvertor\n   * @remarks \"rgb(255, 255, 255)\"\n   */\n  toRgbString() {\n    const {\n      r,\n      g,\n      b,\n      a\n    } = this.toRgb();\n    return `${a !== undefined ? 'rgba' : 'rgb'}(${r}, ${g}, ${b}${a !== undefined ? `, ${a}` : ''})`;\n  }\n\n  /**\n   * Checks if the parsed color is valid\n   * @returns {boolean} - true if the parsed color is valid\n   * @memberof ColorConvertor\n   */\n  isValid() {\n    return this.getColorObj().value !== undefined;\n  }\n  setColor(color) {\n    this.setInput(color);\n    this.setColorObj(inputParser(this.getInput()));\n    this.setRbgObj(toRgbBase(this.getColorObj()));\n  }\n\n  // TODO implement\n  fromRatio() {\n    return 'not implemented';\n  }\n\n  // TODO implement\n  fromPercentageRgb() {\n    return 'not implemented';\n  }\n  toHsv() {\n    return rgbNormalizedToHsv(this.getRgbObj());\n  }\n  toHsvString() {\n    const {\n      h,\n      s,\n      v\n    } = this.toHsv();\n    return `hsv(${h}, ${s}%, ${v}%)`;\n  }\n  toHsl() {\n    return rgbNormalizedToHsl(this.getRgbObj());\n  }\n  toHslString() {\n    const {\n      h,\n      s,\n      l\n    } = rgbNormalizedToHsl(this.getRgbObj());\n    return `hsl(${h}, ${s}%, ${l}%)`;\n  }\n  toHex() {\n    return rgbToHex(rgbNormalizedToRgb(this.getRgbObj())) ?? '';\n  }\n  toHexString() {\n    return `#${this.toHex()}`;\n  }\n  toHex8() {\n    const {\n      r,\n      g,\n      b\n    } = rgbNormalizedToRgb(this.getRgbObj());\n    const a = this.getAlpha();\n    return rgbaToHex8({\n      r,\n      g,\n      b,\n      a\n    });\n  }\n  toHex8String() {\n    return `#${this.toHex8()}`;\n  }\n  toCmy() {\n    return rgbNormalizedToCmy(this.getRgbObj());\n  }\n  toCmyk() {\n    return cmyToCmyk(this.toCmy());\n  }\n\n  /*\n    XYZ, CIE-L*ab, CIE-L*Ch(ab)\n    formulae from https://www.easyrgb.com/en/math.php\n     X, Y and Z output refers to a D65/2° standard illuminant.\n    */\n\n  toXyz() {\n    return rgbToXyz(this.getRgbObj());\n  }\n  toXyzString() {\n    const {\n      x,\n      y,\n      z\n    } = this.toXyz();\n    return `xyz(${x}, ${y}, ${z})`;\n  }\n\n  // CIE-L*ab\n  toLab() {\n    return xyzToLab(this.toXyz());\n  }\n  toLabString() {\n    const {\n      l,\n      a,\n      b\n    } = this.toLab();\n    return `lab(${l}, ${a}, ${b})`;\n  }\n  toLch() {\n    return labToLch(this.toLab());\n  }\n  toLchString() {\n    const {\n      l,\n      c,\n      h\n    } = this.toLch();\n    return `lch(${l}, ${c}, ${h})`;\n  }\n  getBrightness() {\n    return calculateBrightness(rgbNormalizedToRgb(this.getRgbObj()));\n  }\n  getLuminance() {\n    return calculateLuminance(this.getRgbObj());\n  }\n  isDark() {\n    return this.getBrightness() < 128;\n  }\n  isLight() {\n    return this.getBrightness() >= 128;\n  }\n  getFormat() {\n    return this.getColorObj().format;\n  }\n  getAlpha() {\n    let {\n      a\n    } = this.getRgbObj();\n    a = a ?? 1; // 100% alpha if working with rgb values\n    return a;\n  }\n  setAlpha(newAlpha) {\n    if (newAlpha < 0 || newAlpha > 1) {\n      throw new Error('Alpha value must be between 0 and 1');\n    }\n    const {\n      r,\n      g,\n      b\n    } = this.getRgbObj();\n    const a = newAlpha;\n    this.setRbgObj({\n      r,\n      g,\n      b,\n      a\n    });\n  }\n  toName() {\n    const hex = truncateHex(this.toHex());\n    for (const color in namedColors) {\n      if (namedColors[color] === hex) {\n        return color;\n      }\n    }\n    return undefined;\n  }\n  toNearestNamedColor() {\n    const rgb = rgbNormalizedToRgb(this.getRgbObj());\n    return findClosestColor(rgb, namedColorsRgb);\n  }\n  toPercentageRgb() {\n    const {\n      r,\n      g,\n      b\n    } = this.getRgbObj();\n    return {\n      r: r !== undefined ? r * 100 : undefined,\n      g: g !== undefined ? g * 100 : undefined,\n      b: b !== undefined ? b * 100 : undefined\n    };\n  }\n  toPercentageRgbString() {\n    const {\n      r,\n      g,\n      b\n    } = this.toPercentageRgb();\n    return `rgb(${r}%, ${g}%, ${b}%)`;\n  }\n  equals(color2) {\n    return this.toRgbString() === new ColorConvertor(color2).toRgbString();\n  }\n\n  /**\n     * Returns a random color in sRGB color space\n     * @returns {void}\n     * @memberof ColorConvertor\n     * @remarks Will overwrite the current color\n     */\n  random() {\n    this.setColorObj({\n      format: 'rgb',\n      value: {\n        r: Math.floor(Math.random() * 256),\n        g: Math.floor(Math.random() * 256),\n        b: Math.floor(Math.random() * 256)\n      }\n    });\n    this.setRbgObj(toRgbBase(this.getColorObj()));\n  }\n  clone() {\n    return new ColorConvertor(this.getInput());\n  }\n\n  /**\n   * Returns the contrast ratio between the current color and the color passed as an argument\n   * @param color2 - The color to compare the current color to\n   * @returns {number} - The contrast ratio between the current color and the color passed as an argument\n   * @memberof ColorConvertor\n   * @link http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n   */\n  readability(color2) {\n    const l1 = this.getLuminance();\n    const l2 = new ColorConvertor(color2).getLuminance();\n    return (Math.max(l1, l2) + 0.05) / (Math.min(l1, l2) + 0.05);\n  }\n}\nexport default ColorConvertor;\n//# sourceMappingURL=colorconvertor.js.map"],"names":["namedColors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","namedColorsRgb","r","g","b","inputParser","color","undefined","test","rgbArray","match","length","format","value","Number","rgbaArray","a","replace","hslArray","h","s","l","hslaArray","hsvArray","v","labEuclideanDistance","lab1","lab2","Error","Math","sqrt","pow","toRgbBase","colorObj","rgbToNormalizedRgb","hexColor","hex","expandHex","rgb","parseInt","hexToRgb","hsl","hue2rgb","p","q","t","hslToRgbNormalized","hsv","i","floor","f","mod","hsvToRgbNormalized","rgbNormalizedToRgb","round","rgbToHex","toString","padStart","rgbaToHex8","rgba","binaryRgb","aHex","d","rgbNormalizedToHsl","max","min","diff","xyzToLab","xyz","x","y","z","rgbToXyz","ColorConvertor","constructor","colorInput","this","_colorInput","_colorObj","_rgbObj","getInput","getColorObj","getRgbObj","setInput","setColorObj","setRbgObj","rgbObj","toRgb","toRgbString","isValid","setColor","fromRatio","fromPercentageRgb","toHsv","diffc","c","rr","gg","bb","rgbNormalizedToHsv","toHsvString","toHsl","toHslString","toHex","toHexString","toHex8","getAlpha","toHex8String","toCmy","m","toCmyk","cmy","k","cmyToCmyk","toXyz","toXyzString","toLab","toLabString","toLch","lab","atan2","PI","abs","labToLch","toLchString","getBrightness","calculateBrightness","getLuminance","R","G","B","calculateLuminance","isDark","isLight","getFormat","setAlpha","newAlpha","toName","truncateHex","toNearestNamedColor","minDistance","Infinity","closestColor","distance","findClosestColor","toPercentageRgb","toPercentageRgbString","equals","color2","random","clone","readability","l1","l2"],"mappings":"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"}