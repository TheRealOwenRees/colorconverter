{"version":3,"file":"colorconverter.esm.js","sources":["../../src/utils/namedColors.ts","../../src/utils/inputParser.ts","../../src/utils/utilities.ts","../../src/constants.ts","../../src/utils/conversions.ts","../../src/utils/palettes.ts","../../src/colorconverter.ts"],"sourcesContent":["/*\n    Big List of Colors\n    ------------------\n    https://www.w3.org/TR/css-color-4/#named-colors\n*/\n\nimport { type RgbObject } from \"../types\";\n\nexport const namedColors: Record<string, string> = {\n  aliceblue: \"f0f8ff\",\n  antiquewhite: \"faebd7\",\n  aqua: \"0ff\",\n  aquamarine: \"7fffd4\",\n  azure: \"f0ffff\",\n  beige: \"f5f5dc\",\n  bisque: \"ffe4c4\",\n  black: \"000\",\n  blanchedalmond: \"ffebcd\",\n  blue: \"00f\",\n  blueviolet: \"8a2be2\",\n  brown: \"a52a2a\",\n  burlywood: \"deb887\",\n  burntsienna: \"ea7e5d\",\n  cadetblue: \"5f9ea0\",\n  chartreuse: \"7fff00\",\n  chocolate: \"d2691e\",\n  coral: \"ff7f50\",\n  cornflowerblue: \"6495ed\",\n  cornsilk: \"fff8dc\",\n  crimson: \"dc143c\",\n  cyan: \"0ff\",\n  darkblue: \"00008b\",\n  darkcyan: \"008b8b\",\n  darkgoldenrod: \"b8860b\",\n  darkgray: \"a9a9a9\",\n  darkgreen: \"006400\",\n  darkgrey: \"a9a9a9\",\n  darkkhaki: \"bdb76b\",\n  darkmagenta: \"8b008b\",\n  darkolivegreen: \"556b2f\",\n  darkorange: \"ff8c00\",\n  darkorchid: \"9932cc\",\n  darkred: \"8b0000\",\n  darksalmon: \"e9967a\",\n  darkseagreen: \"8fbc8f\",\n  darkslateblue: \"483d8b\",\n  darkslategray: \"2f4f4f\",\n  darkslategrey: \"2f4f4f\",\n  darkturquoise: \"00ced1\",\n  darkviolet: \"9400d3\",\n  deeppink: \"ff1493\",\n  deepskyblue: \"00bfff\",\n  dimgray: \"696969\",\n  dimgrey: \"696969\",\n  dodgerblue: \"1e90ff\",\n  firebrick: \"b22222\",\n  floralwhite: \"fffaf0\",\n  forestgreen: \"228b22\",\n  fuchsia: \"f0f\",\n  gainsboro: \"dcdcdc\",\n  ghostwhite: \"f8f8ff\",\n  gold: \"ffd700\",\n  goldenrod: \"daa520\",\n  gray: \"808080\",\n  green: \"008000\",\n  greenyellow: \"adff2f\",\n  grey: \"808080\",\n  honeydew: \"f0fff0\",\n  hotpink: \"ff69b4\",\n  indianred: \"cd5c5c\",\n  indigo: \"4b0082\",\n  ivory: \"fffff0\",\n  khaki: \"f0e68c\",\n  lavender: \"e6e6fa\",\n  lavenderblush: \"fff0f5\",\n  lawngreen: \"7cfc00\",\n  lemonchiffon: \"fffacd\",\n  lightblue: \"add8e6\",\n  lightcoral: \"f08080\",\n  lightcyan: \"e0ffff\",\n  lightgoldenrodyellow: \"fafad2\",\n  lightgray: \"d3d3d3\",\n  lightgreen: \"90ee90\",\n  lightgrey: \"d3d3d3\",\n  lightpink: \"ffb6c1\",\n  lightsalmon: \"ffa07a\",\n  lightseagreen: \"20b2aa\",\n  lightskyblue: \"87cefa\",\n  lightslategray: \"789\",\n  lightslategrey: \"789\",\n  lightsteelblue: \"b0c4de\",\n  lightyellow: \"ffffe0\",\n  lime: \"0f0\",\n  limegreen: \"32cd32\",\n  linen: \"faf0e6\",\n  magenta: \"f0f\",\n  maroon: \"800000\",\n  mediumaquamarine: \"66cdaa\",\n  mediumblue: \"0000cd\",\n  mediumorchid: \"ba55d3\",\n  mediumpurple: \"9370db\",\n  mediumseagreen: \"3cb371\",\n  mediumslateblue: \"7b68ee\",\n  mediumspringgreen: \"00fa9a\",\n  mediumturquoise: \"48d1cc\",\n  mediumvioletred: \"c71585\",\n  midnightblue: \"191970\",\n  mintcream: \"f5fffa\",\n  mistyrose: \"ffe4e1\",\n  moccasin: \"ffe4b5\",\n  navajowhite: \"ffdead\",\n  navy: \"000080\",\n  oldlace: \"fdf5e6\",\n  olive: \"808000\",\n  olivedrab: \"6b8e23\",\n  orange: \"ffa500\",\n  orangered: \"ff4500\",\n  orchid: \"da70d6\",\n  palegoldenrod: \"eee8aa\",\n  palegreen: \"98fb98\",\n  paleturquoise: \"afeeee\",\n  palevioletred: \"db7093\",\n  papayawhip: \"ffefd5\",\n  peachpuff: \"ffdab9\",\n  peru: \"cd853f\",\n  pink: \"ffc0cb\",\n  plum: \"dda0dd\",\n  powderblue: \"b0e0e6\",\n  purple: \"800080\",\n  rebeccapurple: \"663399\",\n  red: \"f00\",\n  rosybrown: \"bc8f8f\",\n  royalblue: \"4169e1\",\n  saddlebrown: \"8b4513\",\n  salmon: \"fa8072\",\n  sandybrown: \"f4a460\",\n  seagreen: \"2e8b57\",\n  seashell: \"fff5ee\",\n  sienna: \"a0522d\",\n  silver: \"c0c0c0\",\n  skyblue: \"87ceeb\",\n  slateblue: \"6a5acd\",\n  slategray: \"708090\",\n  slategrey: \"708090\",\n  snow: \"fffafa\",\n  springgreen: \"00ff7f\",\n  steelblue: \"4682b4\",\n  tan: \"d2b48c\",\n  teal: \"008080\",\n  thistle: \"d8bfd8\",\n  tomato: \"ff6347\",\n  turquoise: \"40e0d0\",\n  violet: \"ee82ee\",\n  wheat: \"f5deb3\",\n  white: \"fff\",\n  whitesmoke: \"f5f5f5\",\n  yellow: \"ff0\",\n  yellowgreen: \"9acd32\",\n};\n\nexport const namedColorsRgb: Record<string, RgbObject> = {\n  aliceblue: { r: 240, g: 248, b: 255 },\n  antiquewhite: { r: 250, g: 235, b: 215 },\n  aqua: { r: 0, g: 255, b: 255 },\n  aquamarine: { r: 127, g: 255, b: 212 },\n  azure: { r: 240, g: 255, b: 255 },\n  beige: { r: 245, g: 245, b: 220 },\n  bisque: { r: 255, g: 228, b: 196 },\n  black: { r: 0, g: 0, b: 0 },\n  blanchedalmond: { r: 255, g: 235, b: 205 },\n  blue: { r: 0, g: 0, b: 255 },\n  blueviolet: { r: 138, g: 43, b: 226 },\n  brown: { r: 165, g: 42, b: 42 },\n  burlywood: { r: 222, g: 184, b: 135 },\n  burntsienna: { r: 234, g: 126, b: 93 },\n  cadetblue: { r: 95, g: 158, b: 160 },\n  chartreuse: { r: 127, g: 255, b: 0 },\n  chocolate: { r: 210, g: 105, b: 30 },\n  coral: { r: 255, g: 127, b: 80 },\n  cornflowerblue: { r: 100, g: 149, b: 237 },\n  cornsilk: { r: 255, g: 248, b: 220 },\n  crimson: { r: 220, g: 20, b: 60 },\n  cyan: { r: 0, g: 255, b: 255 },\n  darkblue: { r: 0, g: 0, b: 139 },\n  darkcyan: { r: 0, g: 139, b: 139 },\n  darkgoldenrod: { r: 184, g: 134, b: 11 },\n  darkgray: { r: 169, g: 169, b: 169 },\n  darkgreen: { r: 0, g: 100, b: 0 },\n  darkgrey: { r: 169, g: 169, b: 169 },\n  darkkhaki: { r: 189, g: 183, b: 107 },\n  darkmagenta: { r: 139, g: 0, b: 139 },\n  darkolivegreen: { r: 85, g: 107, b: 47 },\n  darkorange: { r: 255, g: 140, b: 0 },\n  darkorchid: { r: 153, g: 50, b: 204 },\n  darkred: { r: 139, g: 0, b: 0 },\n  darksalmon: { r: 233, g: 150, b: 122 },\n  darkseagreen: { r: 143, g: 188, b: 143 },\n  darkslateblue: { r: 72, g: 61, b: 139 },\n  darkslategray: { r: 47, g: 79, b: 79 },\n  darkslategrey: { r: 47, g: 79, b: 79 },\n  darkturquoise: { r: 0, g: 206, b: 209 },\n  darkviolet: { r: 148, g: 0, b: 211 },\n  deeppink: { r: 255, g: 20, b: 147 },\n  deepskyblue: { r: 0, g: 191, b: 255 },\n  dimgray: { r: 105, g: 105, b: 105 },\n  dimgrey: { r: 105, g: 105, b: 105 },\n  dodgerblue: { r: 30, g: 144, b: 255 },\n  firebrick: { r: 178, g: 34, b: 34 },\n  floralwhite: { r: 255, g: 250, b: 240 },\n  forestgreen: { r: 34, g: 139, b: 34 },\n  fuchsia: { r: 255, g: 0, b: 255 },\n  gainsboro: { r: 220, g: 220, b: 220 },\n  ghostwhite: { r: 248, g: 248, b: 255 },\n  gold: { r: 255, g: 215, b: 0 },\n  goldenrod: { r: 218, g: 165, b: 32 },\n  gray: { r: 128, g: 128, b: 128 },\n  green: { r: 0, g: 128, b: 0 },\n  greenyellow: { r: 173, g: 255, b: 47 },\n  grey: { r: 128, g: 128, b: 128 },\n  honeydew: { r: 240, g: 255, b: 240 },\n  hotpink: { r: 255, g: 105, b: 180 },\n  indianred: { r: 205, g: 92, b: 92 },\n  indigo: { r: 75, g: 0, b: 130 },\n  ivory: { r: 255, g: 255, b: 240 },\n  khaki: { r: 240, g: 230, b: 140 },\n  lavender: { r: 230, g: 230, b: 250 },\n  lavenderblush: { r: 255, g: 240, b: 245 },\n  lawngreen: { r: 124, g: 252, b: 0 },\n  lemonchiffon: { r: 255, g: 250, b: 205 },\n  lightblue: { r: 173, g: 216, b: 230 },\n  lightcoral: { r: 240, g: 128, b: 128 },\n  lightcyan: { r: 224, g: 255, b: 255 },\n  lightgoldenrodyellow: { r: 250, g: 250, b: 210 },\n  lightgray: { r: 211, g: 211, b: 211 },\n  lightgreen: { r: 144, g: 238, b: 144 },\n  lightgrey: { r: 211, g: 211, b: 211 },\n  lightpink: { r: 255, g: 182, b: 193 },\n  lightsalmon: { r: 255, g: 160, b: 122 },\n  lightseagreen: { r: 32, g: 178, b: 170 },\n  lightskyblue: { r: 135, g: 206, b: 250 },\n  lightslategray: { r: 120, g: 128, b: 128 },\n  lightslategrey: { r: 120, g: 128, b: 128 },\n  lightsteelblue: { r: 176, g: 196, b: 222 },\n  lightyellow: { r: 255, g: 255, b: 224 },\n  lime: { r: 0, g: 255, b: 0 },\n  limegreen: { r: 50, g: 205, b: 50 },\n  linen: { r: 250, g: 240, b: 230 },\n  magenta: { r: 255, g: 0, b: 255 },\n  maroon: { r: 128, g: 0, b: 0 },\n  mediumaquamarine: { r: 102, g: 205, b: 170 },\n  mediumblue: { r: 0, g: 0, b: 205 },\n  mediumorchid: { r: 186, g: 85, b: 211 },\n  mediumpurple: { r: 147, g: 112, b: 219 },\n  mediumseagreen: { r: 60, g: 179, b: 113 },\n  mediumslateblue: { r: 123, g: 104, b: 238 },\n  mediumspringgreen: { r: 0, g: 250, b: 154 },\n  mediumturquoise: { r: 72, g: 209, b: 204 },\n  mediumvioletred: { r: 199, g: 21, b: 133 },\n  midnightblue: { r: 25, g: 25, b: 112 },\n  mintcream: { r: 245, g: 255, b: 250 },\n  mistyrose: { r: 255, g: 228, b: 225 },\n  moccasin: { r: 255, g: 228, b: 181 },\n  navajowhite: { r: 255, g: 222, b: 173 },\n  navy: { r: 0, g: 0, b: 128 },\n  oldlace: { r: 253, g: 245, b: 230 },\n  olive: { r: 128, g: 128, b: 0 },\n  olivedrab: { r: 107, g: 142, b: 35 },\n  orange: { r: 255, g: 165, b: 0 },\n  orangered: { r: 255, g: 69, b: 0 },\n  orchid: { r: 218, g: 112, b: 214 },\n  palegoldenrod: { r: 238, g: 232, b: 170 },\n  palegreen: { r: 152, g: 251, b: 152 },\n  paleturquoise: { r: 175, g: 238, b: 238 },\n  palevioletred: { r: 219, g: 112, b: 147 },\n  papayawhip: { r: 255, g: 239, b: 213 },\n  peachpuff: { r: 255, g: 218, b: 185 },\n  peru: { r: 205, g: 133, b: 63 },\n  pink: { r: 255, g: 192, b: 203 },\n  plum: { r: 221, g: 160, b: 221 },\n  powderblue: { r: 176, g: 224, b: 230 },\n  purple: { r: 128, g: 0, b: 128 },\n  rebeccapurple: { r: 102, g: 51, b: 153 },\n  red: { r: 255, g: 0, b: 0 },\n  rosybrown: { r: 188, g: 143, b: 143 },\n  royalblue: { r: 65, g: 105, b: 225 },\n  saddlebrown: { r: 139, g: 69, b: 19 },\n  salmon: { r: 250, g: 128, b: 114 },\n  sandybrown: { r: 244, g: 164, b: 96 },\n  seagreen: { r: 46, g: 139, b: 87 },\n  seashell: { r: 255, g: 245, b: 238 },\n  sienna: { r: 160, g: 82, b: 45 },\n  silver: { r: 192, g: 192, b: 192 },\n  skyblue: { r: 135, g: 206, b: 235 },\n  slateblue: { r: 106, g: 90, b: 205 },\n  slategray: { r: 112, g: 128, b: 144 },\n  slategrey: { r: 112, g: 128, b: 144 },\n  snow: { r: 255, g: 250, b: 250 },\n  springgreen: { r: 0, g: 255, b: 127 },\n  steelblue: { r: 70, g: 130, b: 180 },\n  tan: { r: 210, g: 180, b: 140 },\n  teal: { r: 0, g: 128, b: 128 },\n  thistle: { r: 216, g: 191, b: 216 },\n  tomato: { r: 255, g: 99, b: 71 },\n  turquoise: { r: 64, g: 224, b: 208 },\n  violet: { r: 238, g: 130, b: 238 },\n  wheat: { r: 245, g: 222, b: 179 },\n  white: { r: 255, g: 255, b: 255 },\n  whitesmoke: { r: 245, g: 245, b: 245 },\n  yellow: { r: 255, g: 255, b: 0 },\n  yellowgreen: { r: 154, g: 205, b: 50 },\n};\n","import { type ColorObjType } from \"../types\";\nimport { namedColors } from \"./namedColors\";\n\n/**\n Given a string or object, convert that input to a ColorObjType\n @returns {ColorObjType} - An object with a format and value property\n @example\n Example input:\n \"red\"\n \"#f00\" or \"f00\"\n \"#ff0000\" or \"ff0000\"\n \"#ff000000\" or \"ff000000\"\n \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n*/\nexport function inputParser(color: string | undefined): ColorObjType {\n  if (color !== undefined) {\n    // RGB\n    if (/^rgb/.test(color)) {\n      const rgbArray = color.match(/\\d+/g);\n      if (rgbArray != null && rgbArray.length === 3) {\n        return {\n          format: \"rgb\",\n          value: {\n            r: Number(rgbArray[0]),\n            g: Number(rgbArray[1]),\n            b: Number(rgbArray[2]),\n          },\n        };\n      }\n    }\n\n    // RGBA\n    if (/^rgba/.test(color)) {\n      const rgbaArray = color.match(/\\d+(\\.\\d+)?/g);\n      if (rgbaArray != null && rgbaArray.length === 4) {\n        return {\n          format: \"rgba\",\n          value: {\n            r: Number(rgbaArray[0]),\n            g: Number(rgbaArray[1]),\n            b: Number(rgbaArray[2]),\n            a: Number(rgbaArray[3]),\n          },\n        };\n      }\n    }\n\n    if (/^[a-z]+$/.test(color) && namedColors[color] !== undefined) {\n      return {\n        format: \"name\",\n        value: namedColors[color],\n      };\n    }\n\n    //   // Hex - 3 or 6 digits\n    if (\n      color.replace(\"#\", \"\").length === 6 ||\n      color.replace(\"#\", \"\").length === 3\n    ) {\n      return {\n        format: \"hex\",\n        value: color.replace(\"#\", \"\"),\n      };\n    }\n\n    // HexA\n    if (color.replace(\"#\", \"\").length === 8) {\n      return {\n        format: \"hexa\",\n        value: color.replace(\"#\", \"\"),\n      };\n    }\n\n    // HSL\n    if (/^hsl/.test(color)) {\n      const hslArray = color.match(/\\d+(\\.\\d+)?%?/g);\n      if (hslArray != null && hslArray.length === 3) {\n        return {\n          format: \"hsl\",\n          value: {\n            h: Number(hslArray[0]),\n            s: Number(hslArray[1].replace(\"%\", \"\")),\n            l: Number(hslArray[2].replace(\"%\", \"\")),\n          },\n        };\n      }\n    }\n\n    // HSLA\n    if (/^hsla/.test(color)) {\n      const hslaArray = color.match(/\\d+(\\.\\d+)?%?/g);\n      if (hslaArray != null && hslaArray.length === 4) {\n        return {\n          format: \"hsla\",\n          value: {\n            h: Number(hslaArray[0]),\n            s: Number(hslaArray[1].replace(\"%\", \"\")),\n            l: Number(hslaArray[2].replace(\"%\", \"\")),\n            a: Number(hslaArray[3]),\n          },\n        };\n      }\n    }\n\n    // HSV\n    if (/^hsv/.test(color)) {\n      const hsvArray = color.match(/\\d+(\\.\\d+)?%?/g);\n      if (hsvArray != null && hsvArray.length === 3) {\n        return {\n          format: \"hsv\",\n          value: {\n            h: Number(hsvArray[0]),\n            s: Number(hsvArray[1].replace(\"%\", \"\")),\n            v: Number(hsvArray[2].replace(\"%\", \"\")),\n          },\n        };\n      }\n    }\n\n    // LCH\n    if (/^lch/.test(color)) {\n      const lchArray = color.match(/\\d+(\\.\\d+)?%?/g);\n      if (lchArray != null && lchArray.length === 3) {\n        return {\n          format: \"lch\",\n          value: {\n            l: Number(lchArray[0].replace(\"%\", \"\")),\n            c: Number(lchArray[1]),\n            h: Number(lchArray[2]),\n          },\n        };\n      }\n    }\n\n    // OKLCH\n    if (/^oklch/.test(color)) {\n      const oklchArray = color.match(/\\d+(\\.\\d+)?%?/g);\n      if (oklchArray != null && oklchArray.length === 3) {\n        return {\n          format: \"oklch\",\n          value: {\n            l: Number(oklchArray[0].replace(\"%\", \"\")),\n            c: Number(oklchArray[1]),\n            h: Number(oklchArray[2]),\n          },\n        };\n      }\n    }\n  }\n\n  return {\n    format: undefined,\n    value: undefined,\n  };\n}\n","import {\n  type LabObject,\n  type RgbObject,\n  type UtilitiesInterface,\n  type WcagContrastInterface,\n} from \"../types\";\n\n// Convert a decimal number to a two-digit hex string\nexport function convertDecimalToHex(d: number): string {\n  return Math.round(d * 255).toString(16);\n}\n\n// Calculate brightness according to ITU-R BT.709\nexport function calculateBrightness(rgb: RgbObject): number {\n  const { r, g, b } = rgb;\n  if (r === undefined || g === undefined || b === undefined) {\n    throw new Error(\"RGB values must be defined\");\n  }\n  return (r * 299 + g * 587 + b * 114) / 1000;\n}\n\n// Calculate relative luminance\n// http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\nexport function calculateLuminance(rgb: RgbObject): number {\n  if (rgb.r === undefined || rgb.g === undefined || rgb.b === undefined) {\n    throw new Error(\"RGB values must be defined\");\n  }\n\n  let R, G, B;\n  if (rgb.r <= 0.03928) R = rgb.r / 12.92;\n  else R = Math.pow((rgb.r + 0.055) / 1.055, 2.4);\n  if (rgb.g <= 0.03928) G = rgb.g / 12.92;\n  else G = Math.pow((rgb.g + 0.055) / 1.055, 2.4);\n  if (rgb.b <= 0.03928) B = rgb.b / 12.92;\n  else B = Math.pow((rgb.b + 0.055) / 1.055, 2.4);\n  return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n}\n\n// Truncate hex shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\nexport function truncateHex(hex: string): string {\n  if (hex.length === 6) {\n    if (hex[2] === hex[3] && hex[4] === hex[5]) {\n      return hex[0] + hex[1] + hex[2];\n    }\n  }\n  return hex;\n}\n\n// Expand hex shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\nexport function expandHex(hex: string): string {\n  if (hex.length === 3) {\n    return hex[0] + hex[1] + hex[2] + hex[2] + hex[2] + hex[2];\n  }\n  return hex;\n}\n\n// https://en.wikipedia.org/wiki/Color_difference#CIEDE2000\n// √((L₀-L₁)²+(a₀-a₁)²+(b₀-b₁)²\nexport function labDeltaE(lab1: LabObject, lab2: LabObject): number {\n  if (\n    lab1.l === undefined ||\n    lab1.a === undefined ||\n    lab1.b === undefined ||\n    lab2.l === undefined ||\n    lab2.a === undefined ||\n    lab2.b === undefined\n  ) {\n    throw new Error(\"Lab values must be defined\");\n  }\n  return Math.sqrt(\n    Math.pow(lab1.l - lab2.l, 2) +\n      Math.pow(lab1.a - lab2.a, 2) +\n      Math.pow(lab1.b - lab1.b, 2),\n  );\n}\n\n// Generate a random RGB color\nfunction randomRgbColor(): RgbObject {\n  return {\n    r: Math.floor(Math.random() * 256),\n    g: Math.floor(Math.random() * 256),\n    b: Math.floor(Math.random() * 256),\n  };\n}\n\n// Calculate contrast ratio\nfunction calculateContrastRatio(\n  luminance1: number,\n  luminance2: number,\n): number {\n  return (\n    (Math.max(luminance1, luminance2) + 0.05) /\n    (Math.min(luminance1, luminance2) + 0.05)\n  );\n}\n\n// Calculate readability based on contrast ratio\n// http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\nfunction calculateReadability(contrastRatio: number): WcagContrastInterface {\n  return {\n    AA: {\n      large: contrastRatio >= 3,\n      normal: contrastRatio >= 4.5,\n      small: contrastRatio >= 7,\n    },\n    AAA: {\n      large: contrastRatio >= 4.5,\n      normal: contrastRatio >= 7,\n      small: contrastRatio >= 7,\n    },\n  };\n}\n\n// Clamp a value between a minimum and maximum value\nexport function clamp(min: number, max: number, value: number): number {\n  return Math.min(Math.max(value, min), max);\n}\n\nconst utilities: UtilitiesInterface = {\n  convertDecimalToHex,\n  calculateBrightness,\n  calculateLuminance,\n  truncateHex,\n  expandHex,\n  labDeltaE,\n  randomRgbColor,\n  calculateContrastRatio,\n  calculateReadability,\n  clamp,\n};\n\nexport default utilities;\n","export const referenceWhiteConstants = {\n  x: 95.047,\n  y: 100,\n  z: 108.883,\n};\n\nexport const M1 = [\n  [0.8189330101, 0.3618667424, -0.1288597137],\n  [0.0329845436, 0.9293118715, 0.0361456387],\n  [0.0482003018, 0.2643662691, 0.633851707],\n];\n\nexport const M2 = [\n  [0.2104542553, 0.793617785, -0.0040720468],\n  [1.9779984951, -2.428592205, 0.4505937099],\n  [0.0259040371, 0.7827717662, -0.808675766],\n];\n\nexport const invM1 = [\n  [1.2270138511035211, -0.5577999806518222, 0.28125614896646783],\n  [-0.04058017842328059, 1.1122568696168302, -0.07167667866560119],\n  [-0.0763812845057069, -0.4214819784180127, 1.586163220440795],\n];\n\nexport const invM2 = [\n  [0.9999999984505199, 0.3963377921737679, 0.21580375806075883],\n  [1.0000000088817609, -0.10556134232365635, -0.0638541747717059],\n  [1.000000054672411, -0.08948418209496577, -1.291485537864092],\n];\n","/*\n  Color conversion functions. 'Normalized' means 0-1 range.\n  Formulae from https://www.easyrgb.com/en/math.php\n*/\n\nimport {\n  type CmykObject,\n  type ColorConversionInterface,\n  type ColorObjType,\n  type HslObject,\n  type HsvObject,\n  type LabObject,\n  type LchObject,\n  type RgbObject,\n  type XyzObject,\n} from \"../types\";\nimport { convertDecimalToHex, expandHex, labDeltaE } from \"./utilities\";\nimport { M1, M2, invM1, invM2, referenceWhiteConstants } from \"../constants\";\n\n/*\n   RGB / RGBA conversions\n*/\n\nexport function toRgbBase(colorObj: ColorObjType): RgbObject {\n  if (colorObj.format === \"rgb\" || colorObj.format === \"rgba\") {\n    return rgbToNormalizedRgb(colorObj.value as RgbObject);\n  }\n  if (colorObj.format === \"name\" && typeof colorObj.value === \"string\") {\n    return hexToNormalizedRgb(colorObj.value);\n  }\n  if (colorObj.format === \"hex\" && typeof colorObj.value === \"string\") {\n    return rgbToNormalizedRgb(hexToRgb(colorObj.value));\n  }\n  if (colorObj.format === \"hsl\") {\n    return hslToRgbNormalized(colorObj.value as HslObject);\n  }\n  if (colorObj.format === \"hsv\") {\n    return hsvToRgbNormalized(colorObj.value as HsvObject);\n  }\n  if (colorObj.format === \"lch\") {\n    const lab = lchToLab(colorObj.value as LchObject);\n    const xyz = labToXyz(lab);\n    return xyzToRgbNormalized(xyz);\n  }\n  if (colorObj.format === \"oklch\") {\n    const oklab = lchToLab(colorObj.value as LchObject);\n    const lRGB = okLabToLinearRgb(oklab);\n    return lRgbToNormalizedRgb(lRGB);\n  }\n\n  return {\n    r: undefined,\n    g: undefined,\n    b: undefined,\n    a: undefined,\n  };\n}\n\nexport function hexToNormalizedRgb(hexColor: string): RgbObject {\n  const rgb = hexToRgb(hexColor);\n  return rgbToNormalizedRgb(rgb);\n}\n\nexport function rgbNormalizedToRgb(rgb: RgbObject): RgbObject {\n  return {\n    r: rgb.r !== undefined ? Math.round(rgb.r * 255) : undefined,\n    g: rgb.g !== undefined ? Math.round(rgb.g * 255) : undefined,\n    b: rgb.b !== undefined ? Math.round(rgb.b * 255) : undefined,\n    a: rgb.a ?? undefined,\n  };\n}\n\nexport function rgbNormalizedToRgbPercent(rgb: RgbObject): RgbObject {\n  return {\n    r: rgb.r !== undefined ? Math.round(rgb.r * 100) : undefined,\n    g: rgb.g !== undefined ? Math.round(rgb.g * 100) : undefined,\n    b: rgb.b !== undefined ? Math.round(rgb.b * 100) : undefined,\n    a: rgb.a ?? undefined,\n  };\n}\n\nexport function rgbToNormalizedRgb(rgb: RgbObject): RgbObject {\n  const { r, g, b, a } = rgb;\n  return {\n    r: r !== undefined ? r / 255 : undefined,\n    g: g !== undefined ? g / 255 : undefined,\n    b: b !== undefined ? b / 255 : undefined,\n    a: a ?? undefined,\n  };\n}\n\nexport function lrgbToRgb(lrgb: RgbObject): RgbObject {\n  if (lrgb.r === undefined || lrgb.g === undefined || lrgb.b === undefined) {\n    throw new Error(\"RGB values must be defined\");\n  }\n\n  const fn = (c = 0): number => {\n    const abs = Math.abs(c);\n    return abs > 0.0031308\n      ? 1.055 * Math.pow(abs, 1 / 2.4) - 0.055\n      : 12.92 * abs;\n  };\n\n  return {\n    r: fn(lrgb.r),\n    g: fn(lrgb.g),\n    b: fn(lrgb.b),\n    a: lrgb.a ?? undefined,\n  };\n}\n\n/*\n  Hex / Hex8 conversions\n*/\n\nexport function rgbToHex(rgb: RgbObject): string | undefined {\n  if (rgb.r === undefined || rgb.g === undefined || rgb.b === undefined) {\n    return undefined;\n  }\n  const binaryRgb = (rgb.r << 16) | (rgb.g << 8) | rgb.b;\n  return binaryRgb.toString(16).padStart(6, \"0\");\n}\n\nexport function rgbaToHex8(rgba: RgbObject): string {\n  const binaryRgb = rgbToHex(rgba);\n  if (binaryRgb === undefined) {\n    return \"\";\n  }\n  const aHex = convertDecimalToHex(rgba.a ?? 1);\n  return `${binaryRgb.padStart(6, \"0\")}${aHex === \"0\" ? \"00\" : aHex}`;\n}\n\n/*\n    HSL / HSV conversions\n*/\n\nexport function rgbNormalizedToHsl(rgb: RgbObject): HslObject {\n  if (rgb.r === undefined || rgb.g === undefined || rgb.b === undefined) {\n    throw new Error(\"RGB values must be defined\");\n  }\n\n  const max = Math.max(rgb.r, rgb.g, rgb.b);\n  const min = Math.min(rgb.r, rgb.g, rgb.b);\n\n  let h = (max + min) / 2;\n  let s;\n  const l = (max + min) / 2;\n\n  if (max === min) {\n    h = 0;\n    s = 0; // Achromatic\n  } else {\n    const diff = max - min;\n    s = l > 0.5 ? diff / (2 - max - min) : diff / (max + min);\n\n    switch (max) {\n      case rgb.r:\n        h = (rgb.g - rgb.b) / diff + (rgb.g < rgb.b ? 6 : 0);\n        break;\n      case rgb.g:\n        h = (rgb.b - rgb.r) / diff + 2;\n        break;\n      case rgb.b:\n        h = (rgb.r - rgb.g) / diff + 4;\n        break;\n      default:\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return {\n    h: Math.round(h * 360),\n    s: Math.round(s * 100),\n    l: Math.round(l * 100),\n  };\n}\n\nexport function rgbNormalizedToHsv(rgb: RgbObject): HsvObject {\n  if (rgb.r === undefined || rgb.g === undefined || rgb.b === undefined) {\n    throw new Error(\"RGB values must be defined\");\n  }\n\n  const max = Math.max(rgb.r, rgb.g, rgb.b);\n  const min = Math.min(rgb.r, rgb.g, rgb.b);\n\n  let h = max;\n  let s = max;\n  const v = max;\n\n  const diff = max - min;\n  const diffc = (c: number): number => (max - c) / 6 / diff + 1 / 2;\n\n  if (diff === 0) {\n    h = 0;\n    s = 0;\n  } else {\n    s = diff / max;\n    const rr = diffc(rgb.r);\n    const gg = diffc(rgb.g);\n    const bb = diffc(rgb.b);\n\n    if (rgb.r === max) {\n      h = rgb.b - rgb.g;\n    } else if (rgb.g === max) {\n      h = 1 / 3 + rr - bb;\n    } else if (rgb.b === max) {\n      h = 2 / 3 + gg - rr;\n    }\n\n    if (h < 0) {\n      h += 1;\n    } else if (h > 1) {\n      h -= 1;\n    }\n  }\n\n  return {\n    h: Math.round(h * 360),\n    s: Math.round(s * 100),\n    v: Math.round(v * 100),\n  };\n}\n\nexport function hslToRgbNormalized(hsl: HslObject): RgbObject {\n  function hue2rgb(p: number, q: number, t: number): number {\n    if (t < 0) {\n      t += 1;\n    }\n\n    if (t > 1) {\n      t -= 1;\n    }\n\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n\n    if (t < 1 / 2) {\n      return q;\n    }\n\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n\n    return p;\n  }\n\n  const h = (hsl.h ?? 0) / 360;\n  const s = (hsl.s ?? 0) / 100;\n  const l = (hsl.l ?? 0) / 100;\n\n  let r;\n  let g;\n  let b;\n\n  if (s === 0) {\n    r = g = b = l; // Achromatic\n  } else {\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n\n  return { r, g, b };\n}\n\nexport function hsvToRgbNormalized(hsv: HsvObject): RgbObject {\n  const h = ((hsv.h ?? 0) / 360) * 6;\n  const s = (hsv.s ?? 0) / 100;\n  const v = (hsv.v ?? 0) / 100;\n\n  const i = Math.floor(h);\n  const f = h - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n\n  const mod = i % 6;\n\n  const r = [v, q, p, p, t, v][mod];\n  const g = [t, v, v, q, p, p][mod];\n  const b = [p, p, t, v, v, q][mod];\n  return { r, g, b };\n}\n\nexport function hexToRgb(hexColor: string): RgbObject {\n  const hex = expandHex(hexColor);\n  const rgb = parseInt(hex.replace(\"#\", \"\"), 16);\n  return {\n    r: (rgb >> 16) & 0xff,\n    g: (rgb >> 8) & 0xff,\n    b: rgb & 0xff,\n  };\n}\n\n/*\n  CMY / CMYK conversions\n*/\n\nexport function rgbNormalizedToCmy(rgb: RgbObject): CmykObject {\n  if (rgb.r === undefined || rgb.g === undefined || rgb.b === undefined) {\n    throw new Error(\"RGB values must be defined\");\n  }\n\n  return {\n    c: 1 - rgb.r,\n    m: 1 - rgb.g,\n    y: 1 - rgb.b,\n  };\n}\n\nexport function cmyToCmyk(cmy: CmykObject): CmykObject {\n  if (cmy.c === undefined || cmy.m === undefined || cmy.y === undefined) {\n    throw new Error(\"CMY values must be defined\");\n  }\n\n  let k: number = 1;\n  if (cmy.c < k) k = cmy.c;\n  if (cmy.m < k) k = cmy.m;\n  if (cmy.y < k) k = cmy.y;\n  if (k === 1) return { c: 0, m: 0, y: 0, k: 1 };\n  return {\n    c: (cmy.c - k) / (1 - k),\n    m: (cmy.m - k) / (1 - k),\n    y: (cmy.y - k) / (1 - k),\n    k,\n  };\n}\n\n/*\n  XYZ, CIE-L*ab, CIE-L*Ch(ab) conversions\n\n  X, Y and Z output refers to a D65/2° standard illuminant.\n\n  Reference white constants are based on the standard illuminant D65:\n  https://en.wikipedia.org/wiki/Illuminant_D65\n\n  The following is a list of reference white points for various standard illuminants:\n  https://en.wikipedia.org/wiki/Standard_illuminant#White_points_of_standard_illuminants\n\n  Pass in a custom reference white point if you want to use a different one, e.g.:\n  { x: 95.047, y: 100, z: 108.883 } for D65\n  { x: 96.422, y: 100, z: 82.521 } for D50\n  { x: 100, y: 100, z: 100 } for E\n*/\n\nexport function xyzToLab(xyz: XyzObject): LabObject {\n  let { x, y, z } = xyz;\n\n  if (x === undefined || y === undefined || z === undefined) {\n    throw new Error(\"XYZ values must be defined\");\n  }\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n\n  return {\n    l: 116 * y - 16,\n    a: 500 * (x - y),\n    b: 200 * (y - z),\n  };\n}\n\nexport function labToLch(lab: LabObject): LchObject {\n  if (lab.l === undefined || lab.a === undefined || lab.b === undefined) {\n    throw new Error(\"LAB values must be defined\");\n  }\n\n  let h = Math.atan2(lab.b, lab.a);\n  h > 0 ? (h = (h / Math.PI) * 180) : (h = 360 - (Math.abs(h) / Math.PI) * 180);\n\n  return {\n    l: lab.l,\n    c: Math.sqrt(lab.a * lab.a + lab.b * lab.b),\n    h,\n  };\n}\n\nexport function lchToLab(lch: LchObject): LabObject {\n  if (lch.l === undefined || lch.c === undefined || lch.h === undefined) {\n    throw new Error(\"LCH values must be defined\");\n  }\n\n  const hr = (lch.h * Math.PI) / 180;\n\n  return {\n    l: lch.l,\n    a: Math.cos(hr) * lch.c,\n    b: Math.sin(hr) * lch.c,\n  };\n}\n\nexport function labToXyz(\n  lab: LabObject,\n  referenceWhite: Record<string, number> = referenceWhiteConstants,\n): XyzObject {\n  if (lab.l === undefined || lab.a === undefined || lab.b === undefined) {\n    throw new Error(\"LAB values must be defined\");\n  }\n\n  let y = (lab.l + 16) / 116;\n  let x = lab.a / 500 + y;\n  let z = y - lab.b / 200;\n\n  const y2 = Math.pow(y, 3);\n  const x2 = Math.pow(x, 3);\n  const z2 = Math.pow(z, 3);\n\n  y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n  x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n  z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n  return {\n    x: x * referenceWhite.x,\n    y: y * referenceWhite.y,\n    z: z * referenceWhite.z,\n  };\n}\n\nexport function xyzToRgbNormalized(xyz: XyzObject): RgbObject {\n  if (xyz.x === undefined || xyz.y === undefined || xyz.z === undefined) {\n    return {\n      r: undefined,\n      g: undefined,\n      b: undefined,\n    };\n  }\n  let { x, y, z } = xyz;\n  x /= 100;\n  y /= 100;\n  z /= 100;\n\n  const r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  const g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  const b = x * 0.0557 + y * -0.204 + z * 1.057;\n\n  return {\n    r: r > 0.0031308 ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055 : r * 12.92,\n    g: g > 0.0031308 ? 1.055 * Math.pow(g, 1 / 2.4) - 0.055 : g * 12.92,\n    b: b > 0.0031308 ? 1.055 * Math.pow(b, 1 / 2.4) - 0.055 : b * 12.92,\n  };\n}\n\nexport function rgbToXyz(rgb: RgbObject): XyzObject {\n  let { r, g, b } = rgb;\n\n  if (r === undefined || g === undefined || b === undefined) {\n    throw new Error(\"RGB values must be defined\");\n  }\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n\n  r *= 100;\n  g *= 100;\n  b *= 100;\n\n  return {\n    x: r * 0.4124 + g * 0.3576 + b * 0.1805,\n    y: r * 0.2126 + g * 0.7152 + b * 0.0722,\n    z: r * 0.0193 + g * 0.1192 + b * 0.9505,\n  };\n}\n\n/*\n  OKLAB <- -> XYZ conversions\n  Formula from https://bottosson.github.io/posts/oklab/\n\n  OKLAB uses a D65/10° standard illuminant.\n\n  OKLCH uses the same conversion as LCH, but with the OKLAB color space.\n*/\n\nexport function xyzToOklab(xyz: XyzObject): LabObject {\n  if (xyz.x === undefined || xyz.y === undefined || xyz.z === undefined) {\n    throw new Error(\"XYZ values must be defined\");\n  }\n\n  const L = Math.cbrt(xyz.x * M1[0][0] + xyz.y * M1[0][1] + xyz.z * M1[0][2]);\n  const M = Math.cbrt(xyz.x * M1[1][0] + xyz.y * M1[1][1] + xyz.z * M1[1][2]);\n  const S = Math.cbrt(xyz.x * M1[2][0] + xyz.y * M1[2][1] + xyz.z * M1[2][2]);\n\n  return {\n    l: M2[0][0] * L + M2[0][1] * M + M2[0][2] * S,\n    a: M2[1][0] * L + M2[1][1] * M + M2[1][2] * S,\n    b: M2[2][0] * L + M2[2][1] * M + M2[2][2] * S,\n  };\n}\n\nexport function okLabToXyz(oklab: LabObject): XyzObject {\n  if (oklab.l === undefined || oklab.a === undefined || oklab.b === undefined) {\n    throw new Error(\"OKLAB values must be defined\");\n  }\n\n  const L = Math.pow(\n    oklab.l * invM2[0][0] + oklab.a * invM2[0][1] + oklab.b * invM2[0][2],\n    3,\n  );\n  const M = Math.pow(\n    oklab.l * invM2[1][0] + oklab.a * invM2[1][1] + oklab.b * invM2[1][2],\n    3,\n  );\n  const S = Math.pow(\n    oklab.l * invM2[2][0] + oklab.a * invM2[2][1] + oklab.b * invM2[2][2],\n    3,\n  );\n\n  return {\n    x: L * invM1[0][0] + M * invM1[0][1] + S * invM1[0][2],\n    y: L * invM1[1][0] + M * invM1[1][1] + S * invM1[1][2],\n    z: L * invM1[2][0] + M * invM1[2][1] + S * invM1[2][2],\n  };\n}\n\nexport function okLabToLinearRgb(oklab: LabObject): RgbObject {\n  let L = oklab.l / 100 + 0.3963377774 * oklab.a + 0.2158037573 * oklab.b;\n  let M = oklab.l / 100 - 0.1055613458 * oklab.a - 0.0638541728 * oklab.b;\n  let S = oklab.l / 100 - 0.0894841775 * oklab.a - 1.291485548 * oklab.b;\n\n  L = L * L * L;\n  M = M * M * M;\n  S = S * S * S;\n\n  return {\n    r: 4.0767416621 * L - 3.3077115913 * M + 0.2309699292 * S,\n    g: -1.2684380046 * L + 2.6097574011 * M - 0.3413193965 * S,\n    b: -0.0041960863 * L - 0.7034186147 * M + 1.707614701 * S,\n  };\n}\n\nexport function lRgbToNormalizedRgb(lRgb: RgbObject): RgbObject {\n  const fn = (c = 0): number => {\n    const abs = Math.abs(c);\n    return abs > 0.0031308\n      ? 1.055 * Math.pow(abs, 1 / 2.4) - 0.055\n      : 12.92 * abs;\n  };\n\n  return {\n    r: fn(lRgb.r),\n    g: fn(lRgb.g),\n    b: fn(lRgb.b),\n  };\n}\n\n/*\n  Other conversions\n*/\nexport function findClosestColor(\n  rgb: RgbObject,\n  namedColorsRgb: Record<string, RgbObject>,\n): string {\n  let minDistance = Infinity;\n  let closestColor = \"\";\n  const lab1 = xyzToLab(rgbToXyz(rgb));\n  for (const color in namedColorsRgb) {\n    const lab2 = xyzToLab(rgbToXyz(namedColorsRgb[color]));\n    const distance = labDeltaE(lab1, lab2);\n    if (distance < minDistance) {\n      closestColor = color;\n      minDistance = distance;\n    }\n  }\n  return closestColor;\n}\n\nconst colorConversion: ColorConversionInterface = {\n  toRgbBase,\n  hexToNormalizedRgb,\n  rgbNormalizedToRgb,\n  rgbNormalizedToRgbPercent,\n  rgbToNormalizedRgb,\n  lrgbToRgb,\n  rgbToHex,\n  rgbaToHex8,\n  rgbNormalizedToHsl,\n  rgbNormalizedToHsv,\n  hslToRgbNormalized,\n  hsvToRgbNormalized,\n  hexToRgb,\n  rgbNormalizedToCmy,\n  cmyToCmyk,\n  xyzToLab,\n  labToLch,\n  lchToLab,\n  labToXyz,\n  xyzToRgbNormalized,\n  rgbToXyz,\n  xyzToOklab,\n  okLabToXyz,\n  okLabToLinearRgb,\n  lRgbToNormalizedRgb,\n  findClosestColor,\n};\n\nexport default colorConversion;\n","import { type HslObject, type PalettesInterface } from \"../types\";\nimport { clamp } from \"./utilities\";\n\nfunction analogous(numOfColors: number, baseHsl: HslObject): HslObject[] {\n  const { h, s, l } = baseHsl;\n  const step = 360 / numOfColors;\n  const colors = [];\n  for (let i = 0; i < numOfColors; i++) {\n    colors.push({ h: (h + i * step) % 360, s, l });\n  }\n  return colors;\n}\n\nfunction monochromatic(\n  numOfColors: number,\n  deltaS: number | undefined,\n  deltaL: number | undefined,\n  baseHsl: HslObject,\n): HslObject[] {\n  const { h, s, l } = baseHsl;\n\n  // Because we want an equal number of colors on each side of the base color,\n  // we add 1 to an even number of colors to allow for this\n  const adjustedNumOfColors =\n    numOfColors % 2 === 0 ? numOfColors + 1 : numOfColors;\n\n  const colorsEachSide = Math.ceil(adjustedNumOfColors / 2);\n\n  // Deltas S and L are calculated based on the odd number of colors\n  const adjustedDeltaS = deltaS ?? 100 / adjustedNumOfColors;\n  const adjustedDeltaL = deltaL ?? 100 / adjustedNumOfColors;\n\n  const colors: HslObject[] = [];\n\n  for (let i = 0; i < colorsEachSide; i++) {\n    if (i === 0) {\n      colors.push({ h, s, l });\n      continue;\n    }\n    colors.push(\n      {\n        h,\n        s: clamp(0, 100, s - adjustedDeltaS * i),\n        l: clamp(0, 100, l - adjustedDeltaL * i),\n      },\n      {\n        h,\n        s: clamp(0, 100, s + adjustedDeltaS * i),\n        l: clamp(0, 100, l + adjustedDeltaL * i),\n      },\n    );\n  }\n  console.log(colors.sort((a, b) => a.s - b.s));\n  return colors.sort((a, b) => a.s - b.s);\n}\n\nconst palettes: PalettesInterface = {\n  analogous,\n  monochromatic,\n};\n\nexport default palettes;\n","/*\n    Color Converter\n    Owen Rees, MIT License, 2024\n\n    based on https://github.com/bgrins/TinyColor\n*/\n\nimport {\n  type CmykObject,\n  type ColorConverterInterface,\n  type ColorObjType,\n  type HslObject,\n  type HsvObject,\n  type LabObject,\n  type LchObject,\n  type RgbObject,\n  type WcagContrastInterface,\n  type XyzObject,\n} from \"./types\";\n\nimport { namedColors, namedColorsRgb } from \"./utils/namedColors\";\nimport { inputParser } from \"./utils/inputParser\";\nimport colorConversion from \"./utils/conversions\";\nimport utilities from \"./utils/utilities\";\nimport palettes from \"./utils/palettes\";\n\nclass ColorConverter implements ColorConverterInterface {\n  private _colorInput: string | undefined;\n  private _colorObj: ColorObjType;\n  private _rgbObj: RgbObject;\n\n  public constructor(colorInput?: string) {\n    this._colorInput = colorInput ?? undefined; // string input of any color format\n    this._colorObj = inputParser(this._colorInput); // Color info object created from _colorInput. E.g. { format: 'hex', value: '#ffffff' }\n    this._rgbObj = colorConversion.toRgbBase(this._colorObj); // RGB normalised values object - 0-1. E.g. { r: 1, g: 0.5, b: 0.8 }\n  }\n\n  public getInput(): string {\n    return this._colorInput ?? \"\";\n  }\n\n  public getColorObj(): ColorObjType {\n    return this._colorObj;\n  }\n\n  public getRgbObj(): RgbObject {\n    return this._rgbObj;\n  }\n\n  protected setInput(colorInput: string): void {\n    this._colorInput = colorInput;\n  }\n\n  protected setColorObj(colorObj: ColorObjType): void {\n    this._colorObj = colorObj;\n  }\n\n  protected setRbgObj(rgbObj: RgbObject): void {\n    this._rgbObj = rgbObj;\n  }\n\n  public setColor(color: string): void {\n    this.setInput(color);\n    this.setColorObj(inputParser(this.getInput()));\n    this.setRbgObj(colorConversion.toRgbBase(this.getColorObj()));\n  }\n\n  /**\n   * Checks if the parsed color is valid\n   * @returns {boolean} - true if the parsed color is valid\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.isValid() // true\n   */\n  public isValid(): boolean {\n    return this.getColorObj().value !== undefined;\n  }\n\n  /**\n   * Returns the RGB values in the range 0-255\n   * @returns {RgbObject} - RGB values object\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toRgb() // { r: 255, g: 0, b: 0 }\n   */\n  public toRgb(): RgbObject {\n    return colorConversion.rgbNormalizedToRgb(this.getRgbObj());\n  }\n\n  /**\n   * Returns the RGB values in the range 0-255 as a string\n   * @returns {string} - RGB values string\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toRgbString() // \"rgb(255, 0, 0)\"\n   */\n  public toRgbString(): string {\n    const { r, g, b, a } = this.toRgb();\n    return `${a !== undefined ? \"rgba\" : \"rgb\"}(${r}, ${g}, ${b}${a !== undefined ? `, ${a}` : \"\"})`;\n  }\n\n  /**\n   * Returns the RGB values in the range 0-1\n   * @returns {RgbObject} - RGB values object\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toNormalizedRgb() // { r: 1, g: 0, b: 0 }\n   */\n  public toNormalizedRgb(): RgbObject {\n    return this.getRgbObj();\n  }\n\n  public toNormalizedRgbString(): string {\n    const { r, g, b, a } = this.getRgbObj();\n    return `${a !== undefined ? \"rgba\" : \"rgb\"}(${r}, ${g}, ${b}${a !== undefined ? `, ${a}` : \"\"})`;\n  }\n\n  /**\n   * Converts the current color to  HSV\n   * @returns {HsvObject} - HSV values object\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHsv() // { h: 0, s: 100, v: 100 }\n   */\n  public toHsv(): HsvObject {\n    return colorConversion.rgbNormalizedToHsv(this.getRgbObj());\n  }\n\n  /**\n   * Converts the current color to HSV as a string\n   * @returns {string} - HSV values as a string\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHsvString() // \"hsv(0, 100%, 100%)\"\n   */\n  public toHsvString(): string {\n    const { h, s, v } = this.toHsv();\n    return `hsv(${h}, ${s}%, ${v}%)`;\n  }\n\n  /**\n   * Converts the current color to HSL\n   * @returns {HslObject} - HSL values object\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHsl() // { h: 0, s: 100, l: 50 }\n   */\n  public toHsl(): HslObject {\n    const { format, value } = this.getColorObj();\n    return format === \"hsv\"\n      ? (value as HslObject)\n      : colorConversion.rgbNormalizedToHsl(this.getRgbObj());\n  }\n\n  /**\n   * Converts the current color to HSL as a string\n   * @returns {string} - HSL values as a string\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHslString() // \"hsl(0, 100%, 50%)\"\n   */\n  public toHslString(): string {\n    const { h, s, l } = colorConversion.rgbNormalizedToHsl(this.getRgbObj());\n    return `hsl(${h}, ${s}%, ${l}%)`;\n  }\n\n  /**\n   * Converts the current color to Hex\n   * @returns {string} - Hex value\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHex() // \"ff0000\"\n   */\n  public toHex(): string {\n    return (\n      colorConversion.rgbToHex(\n        colorConversion.rgbNormalizedToRgb(this.getRgbObj()),\n      ) ?? \"\"\n    );\n  }\n\n  /**\n   * Converts the current color to Hex as a string\n   * @returns {string} - Hex value as a string\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHex() // \"#ff0000\"\n   */\n  public toHexString(): string {\n    return `#${this.toHex()}`;\n  }\n\n  /**\n   * Converts the current color to Hex8\n   * @returns {string} - Hex8 value\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHex8() // \"ff0000ff\"\n   */\n  public toHex8(): string {\n    const { r, g, b } = colorConversion.rgbNormalizedToRgb(this.getRgbObj());\n    const a = this.getAlpha();\n    return colorConversion.rgbaToHex8({ r, g, b, a });\n  }\n\n  /**\n   * Converts the current color to Hex8 as a string\n   * @returns {string} - Hex8 value as a string\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHex8String() // \"#ff0000ff\"\n   */\n  public toHex8String(): string {\n    return `#${this.toHex8()}`;\n  }\n\n  /**\n   * Converts the current color to CMY\n   * @returns {CmykObject} - CMYK values object\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toCmy() // { c: 0, m: 100, y: 100 }\n   */\n  public toCmy(): CmykObject {\n    return colorConversion.rgbNormalizedToCmy(this.getRgbObj());\n  }\n\n  /** Converts the current color to CMYK\n   * @returns {CmykObject} - CMYK values object\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toCmyk() // { c: 0, m: 100, y: 100, k: 0 }\n   */\n  public toCmyk(): CmykObject {\n    return colorConversion.cmyToCmyk(this.toCmy());\n  }\n\n  /**\n   * Converts the current color to XYZ\n   * @returns {XyzObject} - XYZ values object\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toXyz() // { x: 41.24, y: 21.26, z: 1.93 }\n   */\n  public toXyz(): XyzObject {\n    return colorConversion.rgbToXyz(this.getRgbObj());\n  }\n\n  /**\n   * Converts the current color to XYZ as a string\n   * @returns {string} - XYZ values as a string\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toXyzString() // \"xyz(41.24, 21.26, 1.93)\"\n   */\n  public toXyzString(): string {\n    const { x, y, z } = this.toXyz();\n    return `xyz(${x}, ${y}, ${z})`;\n  }\n\n  /**\n   * Converts the current color to LAB\n   * @returns {LabObject} - LAB values object\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toLab() // { l: 53.24, a: 80.09, b: 67.20 }\n   */\n  public toLab(): LabObject {\n    return colorConversion.xyzToLab(this.toXyz());\n  }\n\n  /**\n   * Converts the current color to LAB as a string\n   * @returns {string} - LAB values as a string\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toLabString() // \"lab(53.24, 80.09, 67.20)\"\n   */\n  public toLabString(): string {\n    const { l, a, b } = this.toLab();\n    return `lab(${l}, ${a}, ${b})`;\n  }\n\n  /**\n   * Converts the current color to LCH\n   * @returns {LchObject} - LCH values object\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toLch() // { l: 53.24, c: 104.55, h: 40.85 }\n   */\n  public toLch(): LchObject {\n    return colorConversion.labToLch(this.toLab());\n  }\n\n  /**\n   * Converts the current color to LCH as a string\n   * @returns {string} - LCH values as a string\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toLchString() // \"lch(53.24, 104.55, 40.85)\"\n   */\n  public toLchString(): string {\n    const { l, c, h } = this.toLch();\n    return `lch(${l}, ${c}, ${h})`;\n  }\n\n  /**\n   * Returns the brightness of the current color\n   * @returns {number} - Brightness value\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.getBrightness() // 76.245\n   */\n  public getBrightness(): number {\n    return utilities.calculateBrightness(\n      colorConversion.rgbNormalizedToRgb(this.getRgbObj()),\n    );\n  }\n\n  /**\n   * Returns the luminance of the current color\n   * @returns {number} - Luminance value\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.getLuminance() // 0.2126\n   */\n  public getLuminance(): number {\n    return utilities.calculateLuminance(this.getRgbObj());\n  }\n\n  /**\n   * Returns true if the current color is dark\n   * @returns {boolean} - true if the current color is dark\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.isDark() // true\n   */\n  public isDark(): boolean {\n    return this.getBrightness() < 128;\n  }\n\n  /**\n   * Returns true if the current color is light\n   * @returns {boolean} - true if the current color is light\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.isLight() // false\n   */\n  public isLight(): boolean {\n    return this.getBrightness() >= 128;\n  }\n\n  /**\n   * Returns the format of the current color\n   * @returns {string} - Color format\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('#ff0000')\n   * color.getFormat() // \"hex\"\n   */\n  public getFormat(): string | undefined {\n    return this.getColorObj().format;\n  }\n\n  /**\n   * Returns the alpha value of the current color\n   * @returns {number} - Alpha value\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.getAlpha() // 1\n   */\n  public getAlpha(): number | undefined {\n    let { a } = this.getRgbObj();\n    a = a ?? 1; // 100% alpha if working with rgb values\n    return a;\n  }\n\n  /**\n   * Sets the alpha value of the current color\n   * @param {number} newAlpha - Alpha value\n   * @returns {void}\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.setAlpha(0.5)\n   * color.getAlpha() // 0.5\n   */\n  public setAlpha(newAlpha: number): void {\n    if (newAlpha < 0 || newAlpha > 1) {\n      throw new Error(\"Alpha value must be between 0 and 1\");\n    }\n    const { r, g, b } = this.getRgbObj();\n    const a = newAlpha;\n    this.setRbgObj({ r, g, b, a });\n  }\n\n  /**\n   * Returns a matching named CSS color if one exists\n   * @returns {string} - color name\n   * @memberof ColorConverter\n   * @link https://www.w3.org/TR/css-color-4/#named-colors\n   * @example\n   * const color = new ColorConvertor(\"hsl(0, 100%, 50%)\")\n   * color.toName() // \"red\"\n   */\n  public toName(): string | undefined {\n    const hex = utilities.truncateHex(this.toHex());\n    for (const color in namedColors) {\n      if (namedColors[color] === hex) {\n        return color;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the closest named CSS color\n   * @returns {string} - color name\n   * @memberof ColorConverter\n   * @link https://www.w3.org/TR/css-color-4/#named-colors\n   * @example\n   * const color = new ColorConvertor(\"hsl(0, 92%, 48%)\")\n   * color.toNearestNamedColor() // \"red\"\n   */\n  public toNearestNamedColor(): string {\n    const rgb = colorConversion.rgbNormalizedToRgb(this.getRgbObj());\n    return colorConversion.findClosestColor(rgb, namedColorsRgb);\n  }\n\n  /**\n   * Returns the RGB values in the range 0-100\n   * @returns {RgbObject} - RGB values object\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toPercentageRgb() // { r: 100, g: 0, b: 0 }\n   */\n  public toPercentageRgb(): RgbObject {\n    const { r, g, b, a } = this.getRgbObj();\n    return {\n      r: r !== undefined ? r * 100 : undefined,\n      g: g !== undefined ? g * 100 : undefined,\n      b: b !== undefined ? b * 100 : undefined,\n      a: a !== undefined ? this.getAlpha() : undefined,\n    };\n  }\n\n  /**\n   * Returns the RGB values in the range 0-100% as a string\n   * @returns {string} - RGB values string\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toPercentageRgbString() // \"rgb(100%, 0%, 0%)\"\n   */\n  public toPercentageRgbString(): string {\n    const { r, g, b, a } = this.toPercentageRgb();\n    return `${a !== undefined ? \"rgba\" : \"rgb\"}(${r}%, ${g}%, ${b}%${a !== undefined ? `, ${a}` : \"\"})`;\n  }\n\n  /**\n   * Checks if the current color is equal to the color passed as an argument\n   * @param color2\n   * @returns {boolean} - true if the current color is equal to the color passed as an argument\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor(\"red\")\n   * color.equals(\"#ff0000\") // true\n   * color.equals(\"hsl(0, 100%, 50%)\") // true\n   */\n  public equals(color2: string): boolean {\n    return this.toRgbString() === new ColorConverter(color2).toRgbString();\n  }\n\n  /**\n   * Returns a random color in sRGB color space\n   * @returns {void}\n   * @memberof ColorConverter\n   * @remarks Will overwrite the current color\n   */\n  public random(): void {\n    this.setColorObj({\n      format: \"rgb\",\n      value: utilities.randomRgbColor(),\n    });\n    this.setRbgObj(colorConversion.toRgbBase(this.getColorObj()));\n  }\n\n  /**\n   * Returns a clone of the current color instance\n   * @returns {ColorConverter} - ColorConvertor instance\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor(\"red\")\n   * const color2 = color.clone()\n   * color2.toRgbString() // \"rgb(255, 0, 0)\"\n   */\n  public clone(): ColorConverterInterface {\n    return new ColorConverter(this.getInput());\n  }\n\n  /**\n   * Returns the contrast ratio between the current color and the color passed as an argument\n   * @param color2 - The color to compare the current color to\n   * @returns {number} - The contrast ratio between the current color and the color passed as an argument\n   * @memberof ColorConverter\n   * @link http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n   */\n  public readability(color2: string): number {\n    const l1: number = this.getLuminance();\n    const l2: number = new ColorConverter(color2).getLuminance();\n    return utilities.calculateContrastRatio(l1, l2);\n  }\n\n  /**\n   * Returns whether WCAG2 guidelines say that the current color is readable on the color passed as an argument\n   * @param color2 - The color to compare the current color to\n   * @returns {Record<string, Record<string, boolean>>} - Object containing the results of the readability tests\n   * @memberof ColorConverter\n   * @link http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n   * @example\n   * const color = new ColorConvertor(\"red\")\n   * color.isReadable(\"#ffffff\")\n   * // { AA: { large: true, normal: true, small: true }, AAA: { large: true, normal: true, small: true } }\n   */\n  public isReadable(color2: string): WcagContrastInterface {\n    return utilities.calculateReadability(this.readability(color2));\n  }\n\n  /** Returns a complementary color based on the current color\n   * @returns {HslObject[]} - Array of HSL objects\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor(\"red\")\n   * color.complementary()\n   * // [\n   * //   { h: 0, s: 100, l: 50 },\n   * //   { h: 180, s: 100, l: 50 },\n   * // ]\n   */\n  public complementary(): HslObject[] {\n    return palettes.analogous(2, this.toHsl());\n  }\n\n  /** Returns a complementary color based on the current color, as an array of strings\n   * @returns {string[]} - Array of HSL strings\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor(\"red\")\n   * color.complementaryString()\n   * // [\n   * //   \"hsl(0, 100%, 50%)\",\n   * //   \"hsl(180, 100%, 50%)\",\n   * // ]\n   */\n  public complementaryString(): string[] {\n    return this.complementary().map(\n      (hsl) => `hsl(${hsl.h}, ${hsl.s}%, ${hsl.l}%)`,\n    );\n  }\n\n  /**\n   * Returns a triad of colors based on the current color, spaced evenly around the color wheel\n   * @returns {HslObject[]} - Array of HSL objects\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor(\"red\")\n   * color.triadic()\n   * // [\n   * //   { h: 0, s: 100, l: 50 },\n   * //   { h: 120, s: 100, l: 50 },\n   * //   { h: 240, s: 100, l: 50 },\n   * // ]\n   */\n  public triadic(): HslObject[] {\n    return palettes.analogous(3, this.toHsl());\n  }\n\n  /**\n   * Returns a triad of colors based on the current color, as an array of strings\\\n   * @returns {string[]} - Array of HSL strings\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor(\"red\")\n   * color.triadicString()\n   * // [\n   * //   \"hsl(0, 100%, 50%)\",\n   * //   \"hsl(120, 100%, 50%)\",\n   * //   \"hsl(240, 100%, 50%)\",\n   * // ]\n   */\n  public triadicString(): string[] {\n    return this.triadic().map((hsl) => `hsl(${hsl.h}, ${hsl.s}%, ${hsl.l}%)`);\n  }\n\n  /**\n   * Returns a tetrad of colors based on the current color, spaced evenly around the color wheel\n   * @returns {HslObject[]} - Array of HSL objects\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor(\"red\")\n   * color.tetradic()\n   * // [\n   * //   { h: 0, s: 100, l: 50 },\n   * //   { h: 90, s: 100, l: 50 },\n   * //   { h: 180, s: 100, l: 50 },\n   * //   { h: 270, s: 100, l: 50 },\n   * // ]\n   */\n  public tetradic(): HslObject[] {\n    return palettes.analogous(4, this.toHsl());\n  }\n\n  /**\n   * Returns a tetrad of colors based on the current color, as an array of strings\n   * @returns {string[]} - Array of HSL strings\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor(\"red\")\n   * color.tetradicString()\n   * // [\n   * //   \"hsl(0, 100%, 50%)\",\n   * //   \"hsl(90, 100%, 50%)\",\n   * //   \"hsl(180, 100%, 50%)\",\n   * //   \"hsl(270, 100%, 50%)\",\n   * // ]\n   */\n  public tetradicString(): string[] {\n    return this.tetradic().map((hsl) => `hsl(${hsl.h}, ${hsl.s}%, ${hsl.l}%)`);\n  }\n\n  /**\n   * Returns a split-complementary color based on the current color\n   * @param numOfColors - number of colors to return\n   * @returns {HslObject[]} - Array of HSL objects\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor(\"red\")\n   * color.splitComplementary(5)\n   * // [\n   * //   { h: 0, s: 100, l: 50 },\n   * //   { h: 150, s: 100, l: 50 },\n   * //   { h: 210, s: 100, l: 50 },\n   * //   { h: 270, s: 100, l: 50 },\n   * //   { h: 330, s: 100, l: 50 },\n   * // ]\n   */\n  public splitComplementary(numOfColors = 5): HslObject[] {\n    return palettes.analogous(numOfColors, this.toHsl());\n  }\n\n  /**\n   * Returns a split-complementary color based on the current color, as an array of strings\n   * @param numOfColors - number of colors to return\n   * @returns {string[]} - Array of HSL strings\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor(\"red\")\n   * color.splitComplementaryString(5)\n   * // [\n   * //   \"hsl(0, 100%, 50%)\",\n   * //   \"hsl(150, 100%, 50%)\",\n   * //   \"hsl(210, 100%, 50%)\",\n   * //   \"hsl(270, 100%, 50%)\",\n   * //   \"hsl(330, 100%, 50%)\",\n   * // ]\n   */\n  public splitComplementaryString(numOfColors = 5): string[] {\n    return this.splitComplementary(numOfColors).map(\n      (hsl) => `hsl(${hsl.h}, ${hsl.s}%, ${hsl.l}%)`,\n    );\n  }\n\n  /**\n   * Creates a monochromatic palette based on the current color\n   * @param numOfColors - number of colors to return\n   * @param deltaS - difference in saturation between each color\n   * @param deltaL - difference in lightness between each color\n   * @returns {HslObject[]} - Array of HSL objects\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor(\"red\")\n   * color.monochromatic(5, 10, 10)\n   * // [\n   * //   { h: 0, s: 80, l: 30 },\n   * //   { h: 0, s: 90, l: 40 },\n   * //   { h: 0, s: 100, l: 50 },\n   * //   { h: 0, s: 100, l: 60 },\n   * //   { h: 0, s: 100, l: 70 },\n   * // ]\n   */\n  public monochromatic(\n    numOfColors = 3,\n    deltaS: number | undefined = undefined,\n    deltaL: number | undefined = undefined,\n  ): HslObject[] {\n    return palettes.monochromatic(numOfColors, deltaS, deltaL, this.toHsl());\n  }\n\n  /**\n   * Creates a monochromatic palette based on the current color, as an array of strings\n   * @param numOfColors - number of colors to return\n   * @param deltaS - difference in saturation between each color\n   * @param deltaL - difference in lightness between each color\n   * @returns {string[]} - Array of HSL strings\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor(\"red\")\n   * color.monochromaticString(5, 10, 10)\n   * // [\n   * //   \"hsl(0, 80%, 30%)\",\n   * //   \"hsl(0, 90%, 40%)\",\n   * //   \"hsl(0, 100%, 50%)\",\n   * //   \"hsl(0, 100%, 60%)\",\n   * //   \"hsl(0, 100%, 70%)\",\n   * // ]\n   */\n  public monochromaticString(\n    numOfColors = 3,\n    deltaS = 33.33,\n    deltaL = 33.33,\n  ): string[] {\n    return this.monochromatic(numOfColors, deltaS, deltaL).map(\n      (hsl) => `hsl(${hsl.h}, ${hsl.s}%, ${hsl.l}%)`,\n    );\n  }\n}\n\nexport default ColorConverter;\n"],"names":["namedColors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","namedColorsRgb","r","g","b","inputParser","color","undefined","test","rgbArray","match","length","format","value","Number","rgbaArray","a","replace","hslArray","h","s","l","hslaArray","hsvArray","v","lchArray","c","oklchArray","convertDecimalToHex","d","Math","round","toString","calculateBrightness","rgb","Error","calculateLuminance","R","G","B","pow","truncateHex","hex","expandHex","labDeltaE","lab1","lab2","sqrt","randomRgbColor","floor","random","calculateContrastRatio","luminance1","luminance2","max","min","calculateReadability","contrastRatio","AA","large","normal","small","AAA","clamp","utilities","referenceWhiteConstants","x","y","z","M1","M2","invM1","invM2","toRgbBase","colorObj","rgbToNormalizedRgb","hexToNormalizedRgb","hexToRgb","hslToRgbNormalized","hsvToRgbNormalized","lab","lchToLab","xyz","labToXyz","xyzToRgbNormalized","oklab","lRGB","okLabToLinearRgb","lRgbToNormalizedRgb","hexColor","rgbNormalizedToRgb","_a","rgbNormalizedToRgbPercent","lrgbToRgb","lrgb","fn","abs","rgbToHex","binaryRgb","padStart","rgbaToHex8","rgba","aHex","rgbNormalizedToHsl","diff","rgbNormalizedToHsv","diffc","rr","gg","bb","hsl","hue2rgb","p","q","t","_b","_c","hsv","i","f","mod","parseInt","rgbNormalizedToCmy","m","cmyToCmyk","cmy","k","xyzToLab","labToLch","atan2","PI","lch","hr","cos","sin","referenceWhite","y2","x2","z2","rgbToXyz","xyzToOklab","L","cbrt","M","S","okLabToXyz","lRgb","findClosestColor","minDistance","Infinity","closestColor","distance","colorConversion","analogous","numOfColors","baseHsl","step","colors","push","monochromatic","deltaS","deltaL","adjustedNumOfColors","colorsEachSide","ceil","adjustedDeltaS","adjustedDeltaL","console","log","sort","palettes","ColorConverter","constructor","colorInput","_colorInput","_colorObj","_rgbObj","getInput","getColorObj","getRgbObj","setInput","setColorObj","setRbgObj","rgbObj","setColor","isValid","toRgb","toRgbString","toNormalizedRgb","toNormalizedRgbString","toHsv","toHsvString","toHsl","toHslString","toHex","toHexString","toHex8","getAlpha","toHex8String","toCmy","toCmyk","toXyz","toXyzString","toLab","toLabString","toLch","toLchString","getBrightness","getLuminance","isDark","isLight","getFormat","setAlpha","newAlpha","toName","toNearestNamedColor","toPercentageRgb","toPercentageRgbString","equals","color2","clone","readability","l1","l2","isReadable","complementary","complementaryString","map","triadic","triadicString","tetradic","tetradicString","splitComplementary","splitComplementaryString","monochromaticString"],"mappings":"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"}