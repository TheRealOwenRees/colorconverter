{"version":3,"file":"colorconvertor.esm.js","sources":["../../src/utils/utilities.ts","../../src/utils/conversions.ts","../../src/utils/namedColors.ts","../../src/utils/inputParser.ts","../../src/colorconvertor.ts"],"sourcesContent":["import { type LabObject, type RgbObject } from \"../types\";\n\nexport function convertDecimalToHex(d: number): string {\n  return Math.round(d * 255).toString(16);\n}\n\nexport function calculateBrightness(rgb: RgbObject): number {\n  const { r, g, b } = rgb;\n  if (r === undefined || g === undefined || b === undefined) {\n    throw new Error(\"RGB values must be defined\");\n  }\n  return (r * 299 + g * 587 + b * 114) / 1000;\n}\n\n// http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\nexport function calculateLuminance(rgb: RgbObject): number {\n  if (rgb.r === undefined || rgb.g === undefined || rgb.b === undefined) {\n    throw new Error(\"RGB values must be defined\");\n  }\n\n  let R, G, B;\n  if (rgb.r <= 0.03928) R = rgb.r / 12.92;\n  else R = Math.pow((rgb.r + 0.055) / 1.055, 2.4);\n  if (rgb.g <= 0.03928) G = rgb.g / 12.92;\n  else G = Math.pow((rgb.g + 0.055) / 1.055, 2.4);\n  if (rgb.b <= 0.03928) B = rgb.b / 12.92;\n  else B = Math.pow((rgb.b + 0.055) / 1.055, 2.4);\n  return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n}\n\nexport function truncateHex(hex: string): string {\n  if (hex.length === 6) {\n    if (hex[2] === hex[3] && hex[4] === hex[5]) {\n      return hex[0] + hex[1] + hex[2];\n    }\n  }\n  return hex;\n}\n\nexport function expandHex(hex: string): string {\n  if (hex.length === 3) {\n    return hex[0] + hex[1] + hex[2] + hex[2] + hex[2] + hex[2];\n  }\n  return hex;\n}\n\n// √((L₀-L₁)²+(a₀-a₁)²+(b₀-b₁)²\nexport function labDeltaE(lab1: LabObject, lab2: LabObject): number {\n  if (\n    lab1.l === undefined ||\n    lab1.a === undefined ||\n    lab1.b === undefined ||\n    lab2.l === undefined ||\n    lab2.a === undefined ||\n    lab2.b === undefined\n  ) {\n    throw new Error(\"Lab values must be defined\");\n  }\n  return Math.sqrt(\n    Math.pow(lab1.l - lab2.l, 2) +\n      Math.pow(lab1.a - lab2.a, 2) +\n      Math.pow(lab1.b - lab1.b, 2),\n  );\n}\n","/*\n  Color conversion functions. 'Normalized' means 0-1 range.\n  Formulae from https://www.easyrgb.com/en/math.php\n*/\n\nimport {\n  type CmykObject,\n  type ColorObjType,\n  type HslObject,\n  type HsvObject,\n  type LabObject,\n  type LchObject,\n  type RgbObject,\n  type XyzObject,\n} from \"../types\";\nimport { convertDecimalToHex, expandHex, labDeltaE } from \"./utilities\";\n\nconst referenceWhiteConstants = {\n  x: 95.047,\n  y: 100,\n  z: 108.883,\n};\n\n/*\n   RGB / RGBA conversions\n*/\n\nexport function toRgbBase(colorObj: ColorObjType): RgbObject {\n  if (colorObj.format === \"rgb\" || colorObj.format === \"rgba\") {\n    return rgbToNormalizedRgb(colorObj.value as RgbObject);\n  }\n  if (colorObj.format === \"hex\" && typeof colorObj.value === \"string\") {\n    return rgbToNormalizedRgb(hexToRgb(colorObj.value));\n  }\n  if (colorObj.format === \"hsl\") {\n    return hslToRgbNormalized(colorObj.value as HslObject);\n  }\n  if (colorObj.format === \"hsv\") {\n    return hsvToRgbNormalized(colorObj.value as HsvObject);\n  }\n  if (colorObj.format === \"lch\") {\n    const lab = lchToLab(colorObj.value as LchObject);\n    const xyz = labToXyz(lab);\n    return xyzToRgbNormalized(xyz);\n  }\n  if (colorObj.format === \"oklch\") {\n    const oklab = lchToLab(colorObj.value as LchObject);\n    const lRGB = okLabToLinearRbg(oklab);\n    return lRgbToNormalizedRgb(lRGB);\n  }\n\n  return {\n    r: undefined,\n    g: undefined,\n    b: undefined,\n    a: undefined,\n  };\n}\n\nexport function rgbNormalizedToRgb(rgb: RgbObject): RgbObject {\n  return {\n    r: rgb.r !== undefined ? Math.round(rgb.r * 255) : undefined,\n    g: rgb.g !== undefined ? Math.round(rgb.g * 255) : undefined,\n    b: rgb.b !== undefined ? Math.round(rgb.b * 255) : undefined,\n    a: rgb.a ?? undefined,\n  };\n}\n\nexport function rgbNormalizedToRgbPercent(rgb: RgbObject): RgbObject {\n  return {\n    r: rgb.r !== undefined ? Math.round(rgb.r * 100) : undefined,\n    g: rgb.g !== undefined ? Math.round(rgb.g * 100) : undefined,\n    b: rgb.b !== undefined ? Math.round(rgb.b * 100) : undefined,\n    a: rgb.a ?? undefined,\n  };\n}\n\nexport function rgbToNormalizedRgb(rgb: RgbObject): RgbObject {\n  const { r, g, b, a } = rgb;\n  return {\n    r: r !== undefined ? r / 255 : undefined,\n    g: g !== undefined ? g / 255 : undefined,\n    b: b !== undefined ? b / 255 : undefined,\n    a: a ?? undefined,\n  };\n}\n\nexport function lrgbToRgb(lrgb: RgbObject): RgbObject {\n  if (lrgb.r === undefined || lrgb.g === undefined || lrgb.b === undefined) {\n    throw new Error(\"RGB values must be defined\");\n  }\n\n  const fn = (c = 0): number => {\n    const abs = Math.abs(c);\n    return abs > 0.0031308\n      ? 1.055 * Math.pow(abs, 1 / 2.4) - 0.055\n      : 12.92 * abs;\n  };\n\n  return {\n    r: fn(lrgb.r),\n    g: fn(lrgb.g),\n    b: fn(lrgb.b),\n    a: lrgb.a ?? undefined,\n  };\n}\n\n/*\n  Hex / Hex8 conversions\n*/\n\nexport function rgbToHex(rgb: RgbObject): string | undefined {\n  if (rgb.r === undefined || rgb.g === undefined || rgb.b === undefined) {\n    return undefined;\n  }\n  const binaryRgb = (rgb.r << 16) | (rgb.g << 8) | rgb.b;\n  return binaryRgb.toString(16).padStart(6, \"0\");\n}\n\nexport function rgbaToHex8(rgba: RgbObject): string {\n  const binaryRgb = rgbToHex(rgba);\n  if (binaryRgb === undefined) {\n    return \"\";\n  }\n  const aHex = convertDecimalToHex(rgba.a ?? 1);\n  return `${binaryRgb.padStart(6, \"0\")}${aHex === \"0\" ? \"00\" : aHex}`;\n}\n\n/*\n    HSL / HSV conversions\n*/\n\nexport function rgbNormalizedToHsl(rgb: RgbObject): HslObject {\n  if (rgb.r === undefined || rgb.g === undefined || rgb.b === undefined) {\n    throw new Error(\"RGB values must be defined\");\n  }\n\n  const max = Math.max(rgb.r, rgb.g, rgb.b);\n  const min = Math.min(rgb.r, rgb.g, rgb.b);\n\n  let h = (max + min) / 2;\n  let s;\n  const l = (max + min) / 2;\n\n  if (max === min) {\n    h = 0;\n    s = 0; // Achromatic\n  } else {\n    const diff = max - min;\n    s = l > 0.5 ? diff / (2 - max - min) : diff / (max + min);\n\n    switch (max) {\n      case rgb.r:\n        h = (rgb.g - rgb.b) / diff + (rgb.g < rgb.b ? 6 : 0);\n        break;\n      case rgb.g:\n        h = (rgb.b - rgb.r) / diff + 2;\n        break;\n      case rgb.b:\n        h = (rgb.r - rgb.g) / diff + 4;\n        break;\n      default:\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return {\n    h: Math.round(h * 360),\n    s: Math.round(s * 100),\n    l: Math.round(l * 100),\n  };\n}\n\nexport function rgbNormalizedToHsv(rgb: RgbObject): HsvObject {\n  if (rgb.r === undefined || rgb.g === undefined || rgb.b === undefined) {\n    throw new Error(\"RGB values must be defined\");\n  }\n\n  const max = Math.max(rgb.r, rgb.g, rgb.b);\n  const min = Math.min(rgb.r, rgb.g, rgb.b);\n\n  let h = max;\n  let s = max;\n  const v = max;\n\n  const diff = max - min;\n  const diffc = (c: number): number => (max - c) / 6 / diff + 1 / 2;\n\n  if (diff === 0) {\n    h = 0;\n    s = 0;\n  } else {\n    s = diff / max;\n    const rr = diffc(rgb.r);\n    const gg = diffc(rgb.g);\n    const bb = diffc(rgb.b);\n\n    if (rgb.r === max) {\n      h = rgb.b - rgb.g;\n    } else if (rgb.g === max) {\n      h = 1 / 3 + rr - bb;\n    } else if (rgb.b === max) {\n      h = 2 / 3 + gg - rr;\n    }\n\n    if (h < 0) {\n      h += 1;\n    } else if (h > 1) {\n      h -= 1;\n    }\n  }\n\n  return {\n    h: Math.round(h * 360),\n    s: Math.round(s * 100),\n    v: Math.round(v * 100),\n  };\n}\n\nexport function hslToRgbNormalized(hsl: HslObject): RgbObject {\n  function hue2rgb(p: number, q: number, t: number): number {\n    if (t < 0) {\n      t += 1;\n    }\n\n    if (t > 1) {\n      t -= 1;\n    }\n\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n\n    if (t < 1 / 2) {\n      return q;\n    }\n\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n\n    return p;\n  }\n\n  const h = (hsl.h ?? 0) / 360;\n  const s = (hsl.s ?? 0) / 100;\n  const l = (hsl.l ?? 0) / 100;\n\n  let r;\n  let g;\n  let b;\n\n  if (s === 0) {\n    r = g = b = l; // Achromatic\n  } else {\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n\n  return { r, g, b };\n}\n\nexport function hsvToRgbNormalized(hsv: HsvObject): RgbObject {\n  const h = ((hsv.h ?? 0) / 360) * 6;\n  const s = (hsv.s ?? 0) / 100;\n  const v = (hsv.v ?? 0) / 100;\n\n  const i = Math.floor(h);\n  const f = h - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n\n  const mod = i % 6;\n\n  const r = [v, q, p, p, t, v][mod];\n  const g = [t, v, v, q, p, p][mod];\n  const b = [p, p, t, v, v, q][mod];\n  return { r, g, b };\n}\n\nexport function hexToRgb(hexColor: string): RgbObject {\n  const hex = expandHex(hexColor);\n  const rgb = parseInt(hex.replace(\"#\", \"\"), 16);\n  return {\n    r: (rgb >> 16) & 0xff,\n    g: (rgb >> 8) & 0xff,\n    b: rgb & 0xff,\n  };\n}\n\n/*\n  CMY / CMYK conversions\n*/\n\nexport function rgbNormalizedToCmy(rgb: RgbObject): CmykObject {\n  if (rgb.r === undefined || rgb.g === undefined || rgb.b === undefined) {\n    throw new Error(\"RGB values must be defined\");\n  }\n\n  return {\n    c: 1 - rgb.r,\n    m: 1 - rgb.g,\n    y: 1 - rgb.b,\n  };\n}\n\nexport function cmyToCmyk(cmy: CmykObject): CmykObject {\n  if (cmy.c === undefined || cmy.m === undefined || cmy.y === undefined) {\n    throw new Error(\"CMY values must be defined\");\n  }\n\n  let k: number = 1;\n  if (cmy.c < k) k = cmy.c;\n  if (cmy.m < k) k = cmy.m;\n  if (cmy.y < k) k = cmy.y;\n  if (k === 1) return { c: 0, m: 0, y: 0, k: 1 };\n  return {\n    c: (cmy.c - k) / (1 - k),\n    m: (cmy.m - k) / (1 - k),\n    y: (cmy.y - k) / (1 - k),\n    k,\n  };\n}\n\n/*\n  XYZ, CIE-L*ab, CIE-L*Ch(ab) conversions\n\n  X, Y and Z output refers to a D65/2° standard illuminant.\n\n  Reference white constants are based on the standard illuminant D65:\n  https://en.wikipedia.org/wiki/Illuminant_D65\n\n  The following is a list of reference white points for various standard illuminants:\n  https://en.wikipedia.org/wiki/Standard_illuminant#White_points_of_standard_illuminants\n\n  Pass in a custom reference white point if you want to use a different one, e.g.:\n  { x: 95.047, y: 100, z: 108.883 } for D65\n  { x: 96.422, y: 100, z: 82.521 } for D50\n  { x: 100, y: 100, z: 100 } for E\n*/\n\n// TODO deprecate XYZ, use modern conversions of lRGB instead\n\nexport function xyzToLab(xyz: XyzObject): LabObject {\n  let { x, y, z } = xyz;\n\n  if (x === undefined || y === undefined || z === undefined) {\n    throw new Error(\"XYZ values must be defined\");\n  }\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n\n  return {\n    l: 116 * y - 16,\n    a: 500 * (x - y),\n    b: 200 * (y - z),\n  };\n}\n\nexport function labToLch(lab: LabObject): LchObject {\n  if (lab.l === undefined || lab.a === undefined || lab.b === undefined) {\n    throw new Error(\"LAB values must be defined\");\n  }\n\n  let h = Math.atan2(lab.b, lab.a);\n  h > 0 ? (h = (h / Math.PI) * 180) : (h = 360 - (Math.abs(h) / Math.PI) * 180);\n\n  return {\n    l: lab.l,\n    c: Math.sqrt(lab.a * lab.a + lab.b * lab.b),\n    h,\n  };\n}\n\nexport function lchToLab(lch: LchObject): LabObject {\n  if (lch.l === undefined || lch.c === undefined || lch.h === undefined) {\n    throw new Error(\"LCH values must be defined\");\n  }\n\n  const hr = (lch.h * Math.PI) / 180;\n\n  return {\n    l: lch.l,\n    a: Math.cos(hr) * lch.c,\n    b: Math.sin(hr) * lch.c,\n  };\n}\n\nexport function labToXyz(\n  lab: LabObject,\n  referenceWhite: Record<string, number> = referenceWhiteConstants,\n): XyzObject {\n  if (lab.l === undefined || lab.a === undefined || lab.b === undefined) {\n    throw new Error(\"LAB values must be defined\");\n  }\n\n  let y = (lab.l + 16) / 116;\n  let x = lab.a / 500 + y;\n  let z = y - lab.b / 200;\n\n  const y2 = Math.pow(y, 3);\n  const x2 = Math.pow(x, 3);\n  const z2 = Math.pow(z, 3);\n\n  y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n  x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n  z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n  return {\n    x: x * referenceWhite.x,\n    y: y * referenceWhite.y,\n    z: z * referenceWhite.z,\n  };\n}\n\nexport function xyzToRgbNormalized(xyz: XyzObject): RgbObject {\n  if (xyz.x === undefined || xyz.y === undefined || xyz.z === undefined) {\n    return {\n      r: undefined,\n      g: undefined,\n      b: undefined,\n    };\n  }\n  let { x, y, z } = xyz;\n  x /= 100;\n  y /= 100;\n  z /= 100;\n\n  const r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  const g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  const b = x * 0.0557 + y * -0.204 + z * 1.057;\n\n  return {\n    r: r > 0.0031308 ? 1.055 * Math.pow(r, 1 / 2.4) - 0.055 : r * 12.92,\n    g: g > 0.0031308 ? 1.055 * Math.pow(g, 1 / 2.4) - 0.055 : g * 12.92,\n    b: b > 0.0031308 ? 1.055 * Math.pow(b, 1 / 2.4) - 0.055 : b * 12.92,\n  };\n}\n\nexport function rgbToXyz(rgb: RgbObject): XyzObject {\n  let { r, g, b } = rgb;\n\n  if (r === undefined || g === undefined || b === undefined) {\n    throw new Error(\"RGB values must be defined\");\n  }\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n\n  r *= 100;\n  g *= 100;\n  b *= 100;\n\n  return {\n    x: r * 0.4124 + g * 0.3576 + b * 0.1805,\n    y: r * 0.2126 + g * 0.7152 + b * 0.0722,\n    z: r * 0.0193 + g * 0.1192 + b * 0.9505,\n  };\n}\n\n/*\n  OKLAB <- -> XYZ conversions\n  Formula from https://bottosson.github.io/posts/oklab/\n\n  OKLAB uses a D65/10° standard illuminant.\n\n  OKLCH uses the same conversion as LCH, but with the OKLAB color space.\n*/\n\nconst M1 = [\n  [0.8189330101, 0.3618667424, -0.1288597137],\n  [0.0329845436, 0.9293118715, 0.0361456387],\n  [0.0482003018, 0.2643662691, 0.633851707],\n];\n\nconst M2 = [\n  [0.2104542553, 0.793617785, -0.0040720468],\n  [1.9779984951, -2.428592205, 0.4505937099],\n  [0.0259040371, 0.7827717662, -0.808675766],\n];\n\nconst invM1 = [\n  [1.2270138511035211, -0.5577999806518222, 0.28125614896646783],\n  [-0.04058017842328059, 1.1122568696168302, -0.07167667866560119],\n  [-0.0763812845057069, -0.4214819784180127, 1.586163220440795],\n];\n\nconst invM2 = [\n  [0.9999999984505199, 0.3963377921737679, 0.21580375806075883],\n  [1.0000000088817609, -0.10556134232365635, -0.0638541747717059],\n  [1.000000054672411, -0.08948418209496577, -1.291485537864092],\n];\n\nexport function xyzToOklab(xyz: XyzObject): LabObject {\n  if (xyz.x === undefined || xyz.y === undefined || xyz.z === undefined) {\n    throw new Error(\"XYZ values must be defined\");\n  }\n\n  const L = Math.cbrt(xyz.x * M1[0][0] + xyz.y * M1[0][1] + xyz.z * M1[0][2]);\n  const M = Math.cbrt(xyz.x * M1[1][0] + xyz.y * M1[1][1] + xyz.z * M1[1][2]);\n  const S = Math.cbrt(xyz.x * M1[2][0] + xyz.y * M1[2][1] + xyz.z * M1[2][2]);\n\n  return {\n    l: M2[0][0] * L + M2[0][1] * M + M2[0][2] * S,\n    a: M2[1][0] * L + M2[1][1] * M + M2[1][2] * S,\n    b: M2[2][0] * L + M2[2][1] * M + M2[2][2] * S,\n  };\n}\n\n// TODO giving largely inflated numbers\nexport function okLabToXyz(oklab: LabObject): XyzObject {\n  if (oklab.l === undefined || oklab.a === undefined || oklab.b === undefined) {\n    throw new Error(\"OKLAB values must be defined\");\n  }\n\n  const L = Math.pow(\n    oklab.l * invM2[0][0] + oklab.a * invM2[0][1] + oklab.b * invM2[0][2],\n    3,\n  );\n  const M = Math.pow(\n    oklab.l * invM2[1][0] + oklab.a * invM2[1][1] + oklab.b * invM2[1][2],\n    3,\n  );\n  const S = Math.pow(\n    oklab.l * invM2[2][0] + oklab.a * invM2[2][1] + oklab.b * invM2[2][2],\n    3,\n  );\n\n  return {\n    x: L * invM1[0][0] + M * invM1[0][1] + S * invM1[0][2],\n    y: L * invM1[1][0] + M * invM1[1][1] + S * invM1[1][2],\n    z: L * invM1[2][0] + M * invM1[2][1] + S * invM1[2][2],\n  };\n}\n\nexport function okLabToLinearRbg(oklab: LabObject): RgbObject {\n  let L = oklab.l / 100 + 0.3963377774 * oklab.a + 0.2158037573 * oklab.b;\n  let M = oklab.l / 100 - 0.1055613458 * oklab.a - 0.0638541728 * oklab.b;\n  let S = oklab.l / 100 - 0.0894841775 * oklab.a - 1.291485548 * oklab.b;\n\n  L = L * L * L;\n  M = M * M * M;\n  S = S * S * S;\n\n  return {\n    r: 4.0767416621 * L - 3.3077115913 * M + 0.2309699292 * S,\n    g: -1.2684380046 * L + 2.6097574011 * M - 0.3413193965 * S,\n    b: -0.0041960863 * L - 0.7034186147 * M + 1.707614701 * S,\n  };\n}\n\nexport function lRgbToNormalizedRgb(lRgb: RgbObject): RgbObject {\n  const fn = (c = 0): number => {\n    const abs = Math.abs(c);\n    return abs > 0.0031308\n      ? 1.055 * Math.pow(abs, 1 / 2.4) - 0.055\n      : 12.92 * abs;\n  };\n\n  return {\n    r: fn(lRgb.r),\n    g: fn(lRgb.g),\n    b: fn(lRgb.b),\n  };\n}\n\n/*\n  Other conversions\n*/\nexport function findClosestColor(\n  rgb: RgbObject,\n  namedColorsRgb: Record<string, RgbObject>,\n): string {\n  let minDistance = Infinity;\n  let closestColor = \"\";\n  const lab1 = xyzToLab(rgbToXyz(rgb));\n  for (const color in namedColorsRgb) {\n    const lab2 = xyzToLab(rgbToXyz(namedColorsRgb[color]));\n    const distance = labDeltaE(lab1, lab2);\n    if (distance < minDistance) {\n      closestColor = color;\n      minDistance = distance;\n    }\n  }\n  return closestColor;\n}\n","/*\n    Big List of Colors\n    ------------------\n    https://www.w3.org/TR/css-color-4/#named-colors\n*/\n\nimport { type RgbObject } from '../types'\n\nconst namedColors: Record<string, string> = {\n  aliceblue: 'f0f8ff',\n  antiquewhite: 'faebd7',\n  aqua: '0ff',\n  aquamarine: '7fffd4',\n  azure: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '000',\n  blanchedalmond: 'ffebcd',\n  blue: '00f',\n  blueviolet: '8a2be2',\n  brown: 'a52a2a',\n  burlywood: 'deb887',\n  burntsienna: 'ea7e5d',\n  cadetblue: '5f9ea0',\n  chartreuse: '7fff00',\n  chocolate: 'd2691e',\n  coral: 'ff7f50',\n  cornflowerblue: '6495ed',\n  cornsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: '0ff',\n  darkblue: '00008b',\n  darkcyan: '008b8b',\n  darkgoldenrod: 'b8860b',\n  darkgray: 'a9a9a9',\n  darkgreen: '006400',\n  darkgrey: 'a9a9a9',\n  darkkhaki: 'bdb76b',\n  darkmagenta: '8b008b',\n  darkolivegreen: '556b2f',\n  darkorange: 'ff8c00',\n  darkorchid: '9932cc',\n  darkred: '8b0000',\n  darksalmon: 'e9967a',\n  darkseagreen: '8fbc8f',\n  darkslateblue: '483d8b',\n  darkslategray: '2f4f4f',\n  darkslategrey: '2f4f4f',\n  darkturquoise: '00ced1',\n  darkviolet: '9400d3',\n  deeppink: 'ff1493',\n  deepskyblue: '00bfff',\n  dimgray: '696969',\n  dimgrey: '696969',\n  dodgerblue: '1e90ff',\n  firebrick: 'b22222',\n  floralwhite: 'fffaf0',\n  forestgreen: '228b22',\n  fuchsia: 'f0f',\n  gainsboro: 'dcdcdc',\n  ghostwhite: 'f8f8ff',\n  gold: 'ffd700',\n  goldenrod: 'daa520',\n  gray: '808080',\n  green: '008000',\n  greenyellow: 'adff2f',\n  grey: '808080',\n  honeydew: 'f0fff0',\n  hotpink: 'ff69b4',\n  indianred: 'cd5c5c',\n  indigo: '4b0082',\n  ivory: 'fffff0',\n  khaki: 'f0e68c',\n  lavender: 'e6e6fa',\n  lavenderblush: 'fff0f5',\n  lawngreen: '7cfc00',\n  lemonchiffon: 'fffacd',\n  lightblue: 'add8e6',\n  lightcoral: 'f08080',\n  lightcyan: 'e0ffff',\n  lightgoldenrodyellow: 'fafad2',\n  lightgray: 'd3d3d3',\n  lightgreen: '90ee90',\n  lightgrey: 'd3d3d3',\n  lightpink: 'ffb6c1',\n  lightsalmon: 'ffa07a',\n  lightseagreen: '20b2aa',\n  lightskyblue: '87cefa',\n  lightslategray: '789',\n  lightslategrey: '789',\n  lightsteelblue: 'b0c4de',\n  lightyellow: 'ffffe0',\n  lime: '0f0',\n  limegreen: '32cd32',\n  linen: 'faf0e6',\n  magenta: 'f0f',\n  maroon: '800000',\n  mediumaquamarine: '66cdaa',\n  mediumblue: '0000cd',\n  mediumorchid: 'ba55d3',\n  mediumpurple: '9370db',\n  mediumseagreen: '3cb371',\n  mediumslateblue: '7b68ee',\n  mediumspringgreen: '00fa9a',\n  mediumturquoise: '48d1cc',\n  mediumvioletred: 'c71585',\n  midnightblue: '191970',\n  mintcream: 'f5fffa',\n  mistyrose: 'ffe4e1',\n  moccasin: 'ffe4b5',\n  navajowhite: 'ffdead',\n  navy: '000080',\n  oldlace: 'fdf5e6',\n  olive: '808000',\n  olivedrab: '6b8e23',\n  orange: 'ffa500',\n  orangered: 'ff4500',\n  orchid: 'da70d6',\n  palegoldenrod: 'eee8aa',\n  palegreen: '98fb98',\n  paleturquoise: 'afeeee',\n  palevioletred: 'db7093',\n  papayawhip: 'ffefd5',\n  peachpuff: 'ffdab9',\n  peru: 'cd853f',\n  pink: 'ffc0cb',\n  plum: 'dda0dd',\n  powderblue: 'b0e0e6',\n  purple: '800080',\n  rebeccapurple: '663399',\n  red: 'f00',\n  rosybrown: 'bc8f8f',\n  royalblue: '4169e1',\n  saddlebrown: '8b4513',\n  salmon: 'fa8072',\n  sandybrown: 'f4a460',\n  seagreen: '2e8b57',\n  seashell: 'fff5ee',\n  sienna: 'a0522d',\n  silver: 'c0c0c0',\n  skyblue: '87ceeb',\n  slateblue: '6a5acd',\n  slategray: '708090',\n  slategrey: '708090',\n  snow: 'fffafa',\n  springgreen: '00ff7f',\n  steelblue: '4682b4',\n  tan: 'd2b48c',\n  teal: '008080',\n  thistle: 'd8bfd8',\n  tomato: 'ff6347',\n  turquoise: '40e0d0',\n  violet: 'ee82ee',\n  wheat: 'f5deb3',\n  white: 'fff',\n  whitesmoke: 'f5f5f5',\n  yellow: 'ff0',\n  yellowgreen: '9acd32'\n}\n\nexport const namedColorsRgb: Record<string, RgbObject> = {\n  aliceblue: { r: 240, g: 248, b: 255 },\n  antiquewhite: { r: 250, g: 235, b: 215 },\n  aqua: { r: 0, g: 255, b: 255 },\n  aquamarine: { r: 127, g: 255, b: 212 },\n  azure: { r: 240, g: 255, b: 255 },\n  beige: { r: 245, g: 245, b: 220 },\n  bisque: { r: 255, g: 228, b: 196 },\n  black: { r: 0, g: 0, b: 0 },\n  blanchedalmond: { r: 255, g: 235, b: 205 },\n  blue: { r: 0, g: 0, b: 255 },\n  blueviolet: { r: 138, g: 43, b: 226 },\n  brown: { r: 165, g: 42, b: 42 },\n  burlywood: { r: 222, g: 184, b: 135 },\n  burntsienna: { r: 234, g: 126, b: 93 },\n  cadetblue: { r: 95, g: 158, b: 160 },\n  chartreuse: { r: 127, g: 255, b: 0 },\n  chocolate: { r: 210, g: 105, b: 30 },\n  coral: { r: 255, g: 127, b: 80 },\n  cornflowerblue: { r: 100, g: 149, b: 237 },\n  cornsilk: { r: 255, g: 248, b: 220 },\n  crimson: { r: 220, g: 20, b: 60 },\n  cyan: { r: 0, g: 255, b: 255 },\n  darkblue: { r: 0, g: 0, b: 139 },\n  darkcyan: { r: 0, g: 139, b: 139 },\n  darkgoldenrod: { r: 184, g: 134, b: 11 },\n  darkgray: { r: 169, g: 169, b: 169 },\n  darkgreen: { r: 0, g: 100, b: 0 },\n  darkgrey: { r: 169, g: 169, b: 169 },\n  darkkhaki: { r: 189, g: 183, b: 107 },\n  darkmagenta: { r: 139, g: 0, b: 139 },\n  darkolivegreen: { r: 85, g: 107, b: 47 },\n  darkorange: { r: 255, g: 140, b: 0 },\n  darkorchid: { r: 153, g: 50, b: 204 },\n  darkred: { r: 139, g: 0, b: 0 },\n  darksalmon: { r: 233, g: 150, b: 122 },\n  darkseagreen: { r: 143, g: 188, b: 143 },\n  darkslateblue: { r: 72, g: 61, b: 139 },\n  darkslategray: { r: 47, g: 79, b: 79 },\n  darkslategrey: { r: 47, g: 79, b: 79 },\n  darkturquoise: { r: 0, g: 206, b: 209 },\n  darkviolet: { r: 148, g: 0, b: 211 },\n  deeppink: { r: 255, g: 20, b: 147 },\n  deepskyblue: { r: 0, g: 191, b: 255 },\n  dimgray: { r: 105, g: 105, b: 105 },\n  dimgrey: { r: 105, g: 105, b: 105 },\n  dodgerblue: { r: 30, g: 144, b: 255 },\n  firebrick: { r: 178, g: 34, b: 34 },\n  floralwhite: { r: 255, g: 250, b: 240 },\n  forestgreen: { r: 34, g: 139, b: 34 },\n  fuchsia: { r: 255, g: 0, b: 255 },\n  gainsboro: { r: 220, g: 220, b: 220 },\n  ghostwhite: { r: 248, g: 248, b: 255 },\n  gold: { r: 255, g: 215, b: 0 },\n  goldenrod: { r: 218, g: 165, b: 32 },\n  gray: { r: 128, g: 128, b: 128 },\n  green: { r: 0, g: 128, b: 0 },\n  greenyellow: { r: 173, g: 255, b: 47 },\n  grey: { r: 128, g: 128, b: 128 },\n  honeydew: { r: 240, g: 255, b: 240 },\n  hotpink: { r: 255, g: 105, b: 180 },\n  indianred: { r: 205, g: 92, b: 92 },\n  indigo: { r: 75, g: 0, b: 130 },\n  ivory: { r: 255, g: 255, b: 240 },\n  khaki: { r: 240, g: 230, b: 140 },\n  lavender: { r: 230, g: 230, b: 250 },\n  lavenderblush: { r: 255, g: 240, b: 245 },\n  lawngreen: { r: 124, g: 252, b: 0 },\n  lemonchiffon: { r: 255, g: 250, b: 205 },\n  lightblue: { r: 173, g: 216, b: 230 },\n  lightcoral: { r: 240, g: 128, b: 128 },\n  lightcyan: { r: 224, g: 255, b: 255 },\n  lightgoldenrodyellow: { r: 250, g: 250, b: 210 },\n  lightgray: { r: 211, g: 211, b: 211 },\n  lightgreen: { r: 144, g: 238, b: 144 },\n  lightgrey: { r: 211, g: 211, b: 211 },\n  lightpink: { r: 255, g: 182, b: 193 },\n  lightsalmon: { r: 255, g: 160, b: 122 },\n  lightseagreen: { r: 32, g: 178, b: 170 },\n  lightskyblue: { r: 135, g: 206, b: 250 },\n  lightslategray: { r: 120, g: 128, b: 128 },\n  lightslategrey: { r: 120, g: 128, b: 128 },\n  lightsteelblue: { r: 176, g: 196, b: 222 },\n  lightyellow: { r: 255, g: 255, b: 224 },\n  lime: { r: 0, g: 255, b: 0 },\n  limegreen: { r: 50, g: 205, b: 50 },\n  linen: { r: 250, g: 240, b: 230 },\n  magenta: { r: 255, g: 0, b: 255 },\n  maroon: { r: 128, g: 0, b: 0 },\n  mediumaquamarine: { r: 102, g: 205, b: 170 },\n  mediumblue: { r: 0, g: 0, b: 205 },\n  mediumorchid: { r: 186, g: 85, b: 211 },\n  mediumpurple: { r: 147, g: 112, b: 219 },\n  mediumseagreen: { r: 60, g: 179, b: 113 },\n  mediumslateblue: { r: 123, g: 104, b: 238 },\n  mediumspringgreen: { r: 0, g: 250, b: 154 },\n  mediumturquoise: { r: 72, g: 209, b: 204 },\n  mediumvioletred: { r: 199, g: 21, b: 133 },\n  midnightblue: { r: 25, g: 25, b: 112 },\n  mintcream: { r: 245, g: 255, b: 250 },\n  mistyrose: { r: 255, g: 228, b: 225 },\n  moccasin: { r: 255, g: 228, b: 181 },\n  navajowhite: { r: 255, g: 222, b: 173 },\n  navy: { r: 0, g: 0, b: 128 },\n  oldlace: { r: 253, g: 245, b: 230 },\n  olive: { r: 128, g: 128, b: 0 },\n  olivedrab: { r: 107, g: 142, b: 35 },\n  orange: { r: 255, g: 165, b: 0 },\n  orangered: { r: 255, g: 69, b: 0 },\n  orchid: { r: 218, g: 112, b: 214 },\n  palegoldenrod: { r: 238, g: 232, b: 170 },\n  palegreen: { r: 152, g: 251, b: 152 },\n  paleturquoise: { r: 175, g: 238, b: 238 },\n  palevioletred: { r: 219, g: 112, b: 147 },\n  papayawhip: { r: 255, g: 239, b: 213 },\n  peachpuff: { r: 255, g: 218, b: 185 },\n  peru: { r: 205, g: 133, b: 63 },\n  pink: { r: 255, g: 192, b: 203 },\n  plum: { r: 221, g: 160, b: 221 },\n  powderblue: { r: 176, g: 224, b: 230 },\n  purple: { r: 128, g: 0, b: 128 },\n  rebeccapurple: { r: 102, g: 51, b: 153 },\n  red: { r: 255, g: 0, b: 0 },\n  rosybrown: { r: 188, g: 143, b: 143 },\n  royalblue: { r: 65, g: 105, b: 225 },\n  saddlebrown: { r: 139, g: 69, b: 19 },\n  salmon: { r: 250, g: 128, b: 114 },\n  sandybrown: { r: 244, g: 164, b: 96 },\n  seagreen: { r: 46, g: 139, b: 87 },\n  seashell: { r: 255, g: 245, b: 238 },\n  sienna: { r: 160, g: 82, b: 45 },\n  silver: { r: 192, g: 192, b: 192 },\n  skyblue: { r: 135, g: 206, b: 235 },\n  slateblue: { r: 106, g: 90, b: 205 },\n  slategray: { r: 112, g: 128, b: 144 },\n  slategrey: { r: 112, g: 128, b: 144 },\n  snow: { r: 255, g: 250, b: 250 },\n  springgreen: { r: 0, g: 255, b: 127 },\n  steelblue: { r: 70, g: 130, b: 180 },\n  tan: { r: 210, g: 180, b: 140 },\n  teal: { r: 0, g: 128, b: 128 },\n  thistle: { r: 216, g: 191, b: 216 },\n  tomato: { r: 255, g: 99, b: 71 },\n  turquoise: { r: 64, g: 224, b: 208 },\n  violet: { r: 238, g: 130, b: 238 },\n  wheat: { r: 245, g: 222, b: 179 },\n  white: { r: 255, g: 255, b: 255 },\n  whitesmoke: { r: 245, g: 245, b: 245 },\n  yellow: { r: 255, g: 255, b: 0 },\n  yellowgreen: { r: 154, g: 205, b: 50 }\n}\n\nexport default namedColors\n","import { type ColorObjType } from '../types'\nimport namedColors from './namedColors'\n\n/*\n Given a string or object, convert that input to a ColorObjType\n\n Example input:\n \"red\"\n \"#f00\" or \"f00\"\n \"#ff0000\" or \"ff0000\"\n \"#ff000000\" or \"ff000000\"\n \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n TODO - OKLCH / OKLAB etc.\n*/\nexport function inputParser (color: string | undefined): ColorObjType {\n  if (color !== undefined) {\n    // RGB\n    if (/^rgb/.test(color)) {\n      const rgbArray = color.match(/\\d+/g)\n      if ((rgbArray != null) && rgbArray.length === 3) {\n        return {\n          format: 'rgb',\n          value: {\n            r: Number(rgbArray[0]),\n            g: Number(rgbArray[1]),\n            b: Number(rgbArray[2])\n          }\n        }\n      }\n    }\n\n    // RGBA\n    if (/^rgba/.test(color)) {\n      const rgbaArray = color.match(/\\d+(\\.\\d+)?/g)\n      if ((rgbaArray != null) && rgbaArray.length === 4) {\n        return {\n          format: 'rgba',\n          value: {\n            r: Number(rgbaArray[0]),\n            g: Number(rgbaArray[1]),\n            b: Number(rgbaArray[2]),\n            a: Number(rgbaArray[3])\n          }\n        }\n      }\n    }\n\n    if (/^[a-z]+$/.test(color) && namedColors[color] !== undefined) {\n      return {\n        format: 'name',\n        value: namedColors[color]\n      }\n    }\n\n    //   // Hex - 3 or 6 digits\n    if (\n      color.replace('#', '').length === 6 ||\n        color.replace('#', '').length === 3\n    ) {\n      return {\n        format: 'hex',\n        value: color.replace('#', '')\n      }\n    }\n\n    // HexA\n    if (color.replace('#', '').length === 8) {\n      return {\n        format: 'hexa',\n        value: color.replace('#', '')\n      }\n    }\n\n    // HSL\n    if (/^hsl/.test(color)) {\n      const hslArray = color.match(/\\d+(\\.\\d+)?%?/g)\n      if ((hslArray != null) && hslArray.length === 3) {\n        return {\n          format: 'hsl',\n          value: {\n            h: Number(hslArray[0]),\n            s: Number(hslArray[1].replace('%', '')),\n            l: Number(hslArray[2].replace('%', ''))\n          }\n        }\n      }\n    }\n\n    // HSLA\n    if (/^hsla/.test(color)) {\n      const hslaArray = color.match(/\\d+(\\.\\d+)?%?/g)\n      if ((hslaArray != null) && hslaArray.length === 4) {\n        return {\n          format: 'hsla',\n          value: {\n            h: Number(hslaArray[0]),\n            s: Number(hslaArray[1].replace('%', '')),\n            l: Number(hslaArray[2].replace('%', '')),\n            a: Number(hslaArray[3])\n          }\n        }\n      }\n    }\n\n    // HSV\n    if (/^hsv/.test(color)) {\n      const hsvArray = color.match(/\\d+(\\.\\d+)?%?/g)\n      if ((hsvArray != null) && hsvArray.length === 3) {\n        return {\n          format: 'hsv',\n          value: {\n            h: Number(hsvArray[0]),\n            s: Number(hsvArray[1].replace('%', '')),\n            v: Number(hsvArray[2].replace('%', ''))\n          }\n        }\n      }\n    }\n\n    // LCH\n    if (/^lch/.test(color)) {\n      const lchArray = color.match(/\\d+(\\.\\d+)?%?/g)\n      if ((lchArray != null) && lchArray.length === 3) {\n        return {\n          format: 'lch',\n          value: {\n            l: Number(lchArray[0].replace('%', '')),\n            c: Number(lchArray[1]),\n            h: Number(lchArray[2])\n          }\n        }\n      }\n    }\n\n    // OKLCH\n    if (/^oklch/.test(color)) {\n      const oklchArray = color.match(/\\d+(\\.\\d+)?%?/g)\n      if ((oklchArray != null) && oklchArray.length === 3) {\n        return {\n          format: 'oklch',\n          value: {\n            l: Number(oklchArray[0].replace('%', '')),\n            c: Number(oklchArray[1]),\n            h: Number(oklchArray[2])\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    format: undefined,\n    value: undefined\n  }\n}\n","/*\n    Color Convertor\n    Owen Rees, MIT License, 2024\n\n    based on https://github.com/bgrins/TinyColor\n*/\n\nimport {\n  type CmykObject,\n  type ColorObjType,\n  type HslObject,\n  type HsvObject,\n  type LabObject,\n  type LchObject,\n  type RgbObject,\n  type XyzObject,\n} from \"./types\";\nimport {\n  rgbNormalizedToRgb,\n  rgbNormalizedToHsl,\n  toRgbBase,\n  rgbNormalizedToCmy,\n  cmyToCmyk,\n  rgbNormalizedToHsv,\n  rgbToXyz,\n  xyzToLab,\n  labToLch,\n  rgbToHex,\n  rgbaToHex8,\n  findClosestColor,\n} from \"./utils/conversions\";\nimport { inputParser } from \"./utils/inputParser\";\nimport {\n  calculateBrightness,\n  calculateLuminance,\n  truncateHex,\n} from \"./utils/utilities\";\nimport namedColors, { namedColorsRgb } from \"./utils/namedColors\";\n\nclass ColorConvertor {\n  private _colorInput: string | undefined;\n  private _colorObj: ColorObjType;\n  private _rgbObj: RgbObject;\n\n  constructor(colorInput?: string) {\n    this._colorInput = colorInput ?? undefined; // string input of any color format\n    this._colorObj = inputParser(this._colorInput); // Color info object created from _colorInput. E.g. { format: 'hex', value: '#ffffff' }\n    this._rgbObj = toRgbBase(this._colorObj); // RGB normalised values object - 0-1. E.g. { r: 1, g: 0.5, b: 0.8 }\n  }\n\n  getInput(): string {\n    return this._colorInput ?? \"\";\n  }\n\n  getColorObj(): ColorObjType {\n    return this._colorObj;\n  }\n\n  getRgbObj(): RgbObject {\n    return this._rgbObj;\n  }\n\n  setInput(colorInput: string): void {\n    this._colorInput = colorInput;\n  }\n\n  setColorObj(colorObj: ColorObjType): void {\n    this._colorObj = colorObj;\n  }\n\n  setRbgObj(rgbObj: RgbObject): void {\n    this._rgbObj = rgbObj;\n  }\n\n  setColor(color: string): void {\n    this.setInput(color);\n    this.setColorObj(inputParser(this.getInput()));\n    this.setRbgObj(toRgbBase(this.getColorObj()));\n  }\n\n  /**\n   * Checks if the parsed color is valid\n   * @returns {boolean} - true if the parsed color is valid\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.isValid() // true\n   */\n  isValid(): boolean {\n    return this.getColorObj().value !== undefined;\n  }\n\n  /**\n   * Returns the RGB values in the range 0-255\n   * @returns {RgbObject} - RGB values object\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toRgb() // { r: 255, g: 0, b: 0 }\n   */\n  toRgb(): RgbObject {\n    return rgbNormalizedToRgb(this.getRgbObj());\n  }\n\n  /**\n   * Returns the RGB values in the range 0-255 as a string\n   * @returns {string} - RGB values string\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toRgbString() // \"rgb(255, 0, 0)\"\n   */\n  toRgbString(): string {\n    const { r, g, b, a } = this.toRgb();\n    return `${a !== undefined ? \"rgba\" : \"rgb\"}(${r}, ${g}, ${b}${a !== undefined ? `, ${a}` : \"\"})`;\n  }\n\n  toNormalizedRgb(): RgbObject {\n    return this.getRgbObj();\n  }\n\n  toNormalizedRgbString(): string {\n    const { r, g, b, a } = this.getRgbObj();\n    return `${a !== undefined ? \"rgba\" : \"rgb\"}(${r}, ${g}, ${b}${a !== undefined ? `, ${a}` : \"\"})`;\n  }\n\n  // TODO implement\n  fromRatio(): string {\n    return \"not implemented\";\n  }\n\n  // TODO implement\n  fromPercentageRgb(): string {\n    return \"not implemented\";\n  }\n\n  /**\n   * Converts the current color to  HSV\n   * @returns {HsvObject} - HSV values object\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHsv() // { h: 0, s: 100, v: 100 }\n   */\n  toHsv(): HsvObject {\n    return rgbNormalizedToHsv(this.getRgbObj());\n  }\n\n  /**\n   * Converts the current color to HSV as a string\n   * @returns {string} - HSV values as a string\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHsvString() // \"hsv(0, 100%, 100%)\"\n   */\n  toHsvString(): string {\n    const { h, s, v } = this.toHsv();\n    return `hsv(${h}, ${s}%, ${v}%)`;\n  }\n\n  /**\n   * Converts the current color to HSL\n   * @returns {HslObject} - HSL values object\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHsl() // { h: 0, s: 100, l: 50 }\n   */\n  toHsl(): HslObject {\n    return rgbNormalizedToHsl(this.getRgbObj());\n  }\n\n  /**\n   * Converts the current color to HSL as a string\n   * @returns {string} - HSL values as a string\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHslString() // \"hsl(0, 100%, 50%)\"\n   */\n  toHslString(): string {\n    const { h, s, l } = rgbNormalizedToHsl(this.getRgbObj());\n    return `hsl(${h}, ${s}%, ${l}%)`;\n  }\n\n  /**\n   * Converts the current color to Hex\n   * @returns {string} - Hex value\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHex() // \"ff0000\"\n   */\n  toHex(): string {\n    return rgbToHex(rgbNormalizedToRgb(this.getRgbObj())) ?? \"\";\n  }\n\n  /**\n   * Converts the current color to Hex as a string\n   * @returns {string} - Hex value as a string\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHex() // \"#ff0000\"\n   */\n  toHexString(): string {\n    return `#${this.toHex()}`;\n  }\n\n  /**\n   * Converts the current color to Hex8\n   * @returns {string} - Hex8 value\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHex8() // \"ff0000ff\"\n   */\n  toHex8(): string {\n    const { r, g, b } = rgbNormalizedToRgb(this.getRgbObj());\n    const a = this.getAlpha();\n    return rgbaToHex8({ r, g, b, a });\n  }\n\n  /**\n   * Converts the current color to Hex8 as a string\n   * @returns {string} - Hex8 value as a string\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHex8String() // \"#ff0000ff\"\n   */\n  toHex8String(): string {\n    return `#${this.toHex8()}`;\n  }\n\n  /**\n   * Converts the current color to CMY\n   * @returns {CmykObject} - CMYK values object\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toCmy() // { c: 0, m: 100, y: 100 }\n   */\n  toCmy(): CmykObject {\n    return rgbNormalizedToCmy(this.getRgbObj());\n  }\n\n  /** Converts the current color to CMYK\n   * @returns {CmykObject} - CMYK values object\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toCmyk() // { c: 0, m: 100, y: 100, k: 0 }\n   */\n  toCmyk(): CmykObject {\n    return cmyToCmyk(this.toCmy());\n  }\n\n  /*\n    XYZ, CIE-L*ab, CIE-L*Ch(ab)\n    formulae from https://www.easyrgb.com/en/math.php\n\n    X, Y and Z output refers to a D65/2° standard illuminant.\n    */\n\n  /**\n   * Converts the current color to XYZ\n   * @returns {XyzObject} - XYZ values object\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toXyz() // { x: 41.24, y: 21.26, z: 1.93 }\n   */\n  toXyz(): XyzObject {\n    return rgbToXyz(this.getRgbObj());\n  }\n\n  /**\n   * Converts the current color to XYZ as a string\n   * @returns {string} - XYZ values as a string\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toXyzString() // \"xyz(41.24, 21.26, 1.93)\"\n   */\n  toXyzString(): string {\n    const { x, y, z } = this.toXyz();\n    return `xyz(${x}, ${y}, ${z})`;\n  }\n\n  /**\n   * Converts the current color to LAB\n   * @returns {LabObject} - LAB values object\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toLab() // { l: 53.24, a: 80.09, b: 67.20 }\n   */\n  toLab(): LabObject {\n    return xyzToLab(this.toXyz());\n  }\n\n  /**\n   * Converts the current color to LAB as a string\n   * @returns {string} - LAB values as a string\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toLabString() // \"lab(53.24, 80.09, 67.20)\"\n   */\n  toLabString(): string {\n    const { l, a, b } = this.toLab();\n    return `lab(${l}, ${a}, ${b})`;\n  }\n\n  /**\n   * Converts the current color to LCH\n   * @returns {LchObject} - LCH values object\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toLch() // { l: 53.24, c: 104.55, h: 40.85 }\n   */\n  toLch(): LchObject {\n    return labToLch(this.toLab());\n  }\n\n  /**\n   * Converts the current color to LCH as a string\n   * @returns {string} - LCH values as a string\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toLchString() // \"lch(53.24, 104.55, 40.85)\"\n   */\n  toLchString(): string {\n    const { l, c, h } = this.toLch();\n    return `lch(${l}, ${c}, ${h})`;\n  }\n\n  /**\n   * Returns the brightness of the current color\n   * @returns {number} - Brightness value\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.getBrightness() // 76.245\n   */\n  getBrightness(): number {\n    return calculateBrightness(rgbNormalizedToRgb(this.getRgbObj()));\n  }\n\n  /**\n   * Returns the luminance of the current color\n   * @returns {number} - Luminance value\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.getLuminance() // 0.2126\n   */\n  getLuminance(): number {\n    return calculateLuminance(this.getRgbObj());\n  }\n\n  /**\n   * Returns true if the current color is dark\n   * @returns {boolean} - true if the current color is dark\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.isDark() // true\n   */\n  isDark(): boolean {\n    return this.getBrightness() < 128;\n  }\n\n  /**\n   * Returns true if the current color is light\n   * @returns {boolean} - true if the current color is light\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.isLight() // false\n   */\n  isLight(): boolean {\n    return this.getBrightness() >= 128;\n  }\n\n  /**\n   * Returns the format of the current color\n   * @returns {string} - Color format\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('#ff0000')\n   * color.getFormat() // \"hex\"\n   */\n  getFormat(): string | undefined {\n    return this.getColorObj().format;\n  }\n\n  /**\n   * Returns the alpha value of the current color\n   * @returns {number} - Alpha value\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.getAlpha() // 1\n   */\n  getAlpha(): number | undefined {\n    let { a } = this.getRgbObj();\n    a = a ?? 1; // 100% alpha if working with rgb values\n    return a;\n  }\n\n  /**\n   * Sets the alpha value of the current color\n   * @param {number} newAlpha - Alpha value\n   * @returns {void}\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.setAlpha(0.5)\n   * color.getAlpha() // 0.5\n   */\n  setAlpha(newAlpha: number): void {\n    if (newAlpha < 0 || newAlpha > 1) {\n      throw new Error(\"Alpha value must be between 0 and 1\");\n    }\n    const { r, g, b } = this.getRgbObj();\n    const a = newAlpha;\n    this.setRbgObj({ r, g, b, a });\n  }\n\n  /**\n   * Returns a matching named CSS color if one exists\n   * @returns {string} - color name\n   * @memberof ColorConvertor\n   * @link https://www.w3.org/TR/css-color-4/#named-colors\n   * @example\n   * const color = new ColorConvertor(\"hsl(0, 100%, 50%)\")\n   * color.toName() // \"red\"\n   */\n  toName(): string | undefined {\n    const hex = truncateHex(this.toHex());\n    for (const color in namedColors) {\n      if (namedColors[color] === hex) {\n        return color;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the closest named CSS color\n   * @returns {string} - color name\n   * @memberof ColorConvertor\n   * @link https://www.w3.org/TR/css-color-4/#named-colors\n   * @example\n   * const color = new ColorConvertor(\"hsl(0, 92%, 48%)\")\n   * color.toNearestNamedColor() // \"red\"\n   */\n  toNearestNamedColor(): string {\n    const rgb = rgbNormalizedToRgb(this.getRgbObj());\n    return findClosestColor(rgb, namedColorsRgb);\n  }\n\n  /**\n   * Returns the RGB values in the range 0-100\n   * @returns {RgbObject} - RGB values object\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toPercentageRgb() // { r: 100, g: 0, b: 0 }\n   */\n  toPercentageRgb(): RgbObject {\n    const { r, g, b, a } = this.getRgbObj();\n    return {\n      r: r !== undefined ? r * 100 : undefined,\n      g: g !== undefined ? g * 100 : undefined,\n      b: b !== undefined ? b * 100 : undefined,\n      a: a !== undefined ? this.getAlpha() : undefined,\n    };\n  }\n\n  /**\n   * Returns the RGB values in the range 0-100% as a string\n   * @returns {string} - RGB values string\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toPercentageRgbString() // \"rgb(100%, 0%, 0%)\"\n   */\n  toPercentageRgbString(): string {\n    const { r, g, b, a } = this.toPercentageRgb();\n    return `${a !== undefined ? \"rgba\" : \"rgb\"}(${r}%, ${g}%, ${b}%${a !== undefined ? `, ${a}` : \"\"})`;\n  }\n\n  /**\n   * Checks if the current color is equal to the color passed as an argument\n   * @param color2\n   * @returns {boolean} - true if the current color is equal to the color passed as an argument\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor(\"red\")\n   * color.equals(\"#ff0000\") // true\n   * color.equals(\"hsl(0, 100%, 50%)\") // true\n   */\n  equals(color2: string): boolean {\n    return this.toRgbString() === new ColorConvertor(color2).toRgbString();\n  }\n\n  /**\n   * Returns a random color in sRGB color space\n   * @returns {void}\n   * @memberof ColorConvertor\n   * @remarks Will overwrite the current color\n   */\n  random(): void {\n    this.setColorObj({\n      format: \"rgb\",\n      value: {\n        r: Math.floor(Math.random() * 256),\n        g: Math.floor(Math.random() * 256),\n        b: Math.floor(Math.random() * 256),\n      },\n    });\n    this.setRbgObj(toRgbBase(this.getColorObj()));\n  }\n\n  /**\n   * Returns a clone of the current color instance\n   * @returns {ColorConvertor} - ColorConvertor instance\n   * @memberof ColorConvertor\n   * @example\n   * const color = new ColorConvertor(\"red\")\n   * const color2 = color.clone()\n   * color2.toRgbString() // \"rgb(255, 0, 0)\"\n   */\n  clone(): ColorConvertor {\n    return new ColorConvertor(this.getInput());\n  }\n\n  /**\n   * Returns the contrast ratio between the current color and the color passed as an argument\n   * @param color2 - The color to compare the current color to\n   * @returns {number} - The contrast ratio between the current color and the color passed as an argument\n   * @memberof ColorConvertor\n   * @link http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n   */\n  readability(color2: string): number {\n    const l1: number = this.getLuminance();\n    const l2: number = new ColorConvertor(color2).getLuminance();\n    return (Math.max(l1, l2) + 0.05) / (Math.min(l1, l2) + 0.05);\n  }\n\n  /**\n   * Returns whether WCAG2 guidelines say that the current color is readable on the color passed as an argument\n   * @param color2 - The color to compare the current color to\n   * @returns {Record<string, Record<string, boolean>>} - Object containing the results of the readability tests\n   * @memberof ColorConvertor\n   * @link http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n   * @example\n   * const color = new ColorConvertor(\"red\")\n   * color.isReadable(\"#ffffff\")\n   * // { AA: { large: true, normal: true, small: true }, AAA: { large: true, normal: true, small: true } }\n   */\n  isReadable(color2: string): Record<string, Record<string, boolean>> {\n    const readability = this.readability(color2);\n    return {\n      AA: {\n        large: readability >= 3,\n        normal: readability >= 4.5,\n        small: readability >= 7,\n      },\n      AAA: {\n        large: readability >= 4.5,\n        normal: readability >= 7,\n        small: readability >= 7,\n      },\n    };\n  }\n}\n\nexport default ColorConvertor;\n"],"names":["convertDecimalToHex","d","Math","round","toString","calculateBrightness","rgb","r","g","b","undefined","Error","calculateLuminance","R","G","B","pow","truncateHex","hex","length","expandHex","labDeltaE","lab1","lab2","l","a","sqrt","referenceWhiteConstants","x","y","z","toRgbBase","colorObj","format","rgbToNormalizedRgb","value","hexToRgb","hslToRgbNormalized","hsvToRgbNormalized","lab","lchToLab","xyz","labToXyz","xyzToRgbNormalized","oklab","lRGB","okLabToLinearRbg","lRgbToNormalizedRgb","rgbNormalizedToRgb","_a","rgbToHex","binaryRgb","padStart","rgbaToHex8","rgba","aHex","rgbNormalizedToHsl","max","min","h","s","diff","rgbNormalizedToHsv","v","diffc","c","rr","gg","bb","hsl","hue2rgb","p","q","t","_b","_c","hsv","i","floor","f","mod","hexColor","parseInt","replace","rgbNormalizedToCmy","m","cmyToCmyk","cmy","k","xyzToLab","labToLch","atan2","PI","abs","lch","hr","cos","sin","referenceWhite","y2","x2","z2","rgbToXyz","L","M","S","lRgb","fn","findClosestColor","namedColorsRgb","minDistance","Infinity","closestColor","color","distance","namedColors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","inputParser","test","rgbArray","match","Number","rgbaArray","hslArray","hslaArray","hsvArray","lchArray","oklchArray","ColorConvertor","constructor","colorInput","_colorInput","_colorObj","_rgbObj","getInput","getColorObj","getRgbObj","setInput","setColorObj","setRbgObj","rgbObj","setColor","isValid","toRgb","toRgbString","toNormalizedRgb","toNormalizedRgbString","fromRatio","fromPercentageRgb","toHsv","toHsvString","toHsl","toHslString","toHex","toHexString","toHex8","getAlpha","toHex8String","toCmy","toCmyk","toXyz","toXyzString","toLab","toLabString","toLch","toLchString","getBrightness","getLuminance","isDark","isLight","getFormat","setAlpha","newAlpha","toName","toNearestNamedColor","toPercentageRgb","toPercentageRgbString","equals","color2","random","clone","readability","l1","l2","isReadable","AA","large","normal","small","AAA"],"mappings":"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"}