{"version":3,"file":"colorconvertor.js","names":["inputParser","rgbNormalizedToRgb","rgbNormalizedToHsl","toRgbBase","rgbNormalizedToCmy","cmyToCmyk","rgbNormalizedToHsv","rgbToXyz","xyzToLab","labToLch","rgbToHex","rgbaToHex8","calculateBrightness","calculateLuminance","findClosestColor","truncateHex","namedColors","namedColorsRgb","ColorConvertor","constructor","colorInput","_colorInput","undefined","_colorObj","_rgbObj","getInput","getColorObj","getRgbObj","setInput","setColorObj","colorObj","setRbgObj","rgbObj","toRgb","toRgbString","r","g","b","a","isValid","value","setColor","color","fromRatio","fromPercentageRgb","toHsv","toHsvString","h","s","v","toHsl","toHslString","l","toHex","toHexString","toHex8","getAlpha","toHex8String","toCmy","toCmyk","toXyz","toXyzString","x","y","z","toLab","toLabString","toLch","toLchString","c","getBrightness","getLuminance","isDark","isLight","getFormat","format","setAlpha","newAlpha","Error","toName","hex","toNearestNamedColor","rgb","toPercentageRgb","toPercentageRgbString","equals","color2","random","Math","floor","clone","readability","l1","l2","max","min"],"sources":["../../src/colorconvertor.ts"],"sourcesContent":["/*\n    Color Convertor\n    Owen Rees, MIT License, 2024\n\n    based on https://github.com/bgrins/TinyColor\n*/\n\nimport {\n  type CmykObject,\n  type ColorObjType,\n  type HslObject, type HsvObject, type LabObject, type LchObject,\n  type RgbObject, type XyzObject\n} from './types'\nimport { inputParser } from './utils/inputParser'\nimport {\n  rgbNormalizedToRgb,\n  rgbNormalizedToHsl,\n  toRgbBase,\n  rgbNormalizedToCmy,\n  cmyToCmyk,\n  rgbNormalizedToHsv,\n  rgbToXyz,\n  xyzToLab,\n  labToLch,\n  rgbToHex,\n  rgbaToHex8\n} from './utils/conversions'\nimport { calculateBrightness, calculateLuminance, findClosestColor, truncateHex } from './utils/utilities'\nimport namedColors, { namedColorsRgb } from './utils/namedColors'\n\nclass ColorConvertor {\n  private _colorInput: string | undefined\n  private _colorObj: ColorObjType\n  private _rgbObj: RgbObject\n\n  constructor (colorInput?: string) {\n    this._colorInput = colorInput ?? undefined // string input of any color format\n    this._colorObj = inputParser(this._colorInput) // Color info object created from _colorInput. E.g. { format: 'hex', value: '#ffffff' }\n    this._rgbObj = toRgbBase(this._colorObj) // RGB normalised values object - 0-1. E.g. { r: 1, g: 0.5, b: 0.8 }\n  }\n\n  getInput (): string {\n    return this._colorInput ?? ''\n  }\n\n  getColorObj (): ColorObjType {\n    return this._colorObj\n  }\n\n  getRgbObj (): RgbObject {\n    return this._rgbObj\n  }\n\n  setInput (colorInput: string): void {\n    this._colorInput = colorInput\n  }\n\n  setColorObj (colorObj: ColorObjType): void {\n    this._colorObj = colorObj\n  }\n\n  setRbgObj (rgbObj: RgbObject): void {\n    this._rgbObj = rgbObj\n  }\n\n  /**\n   * Returns the RGB values in the range 0-255\n   * @returns {RgbObject} - RGB values in the range 0-255\n   * @memberof ColorConvertor\n   */\n  toRgb (): RgbObject {\n    return rgbNormalizedToRgb(this.getRgbObj())\n  }\n\n  /**\n   * @returns {string} - RGB values in the range 0-255 as a string\n   * @memberof ColorConvertor\n   * @remarks \"rgb(255, 255, 255)\"\n   */\n  toRgbString (): string {\n    const { r, g, b, a } = this.toRgb()\n    return `${a !== undefined ? 'rgba' : 'rgb'}(${r}, ${g}, ${b}${a !== undefined ? `, ${a}` : ''})`\n  }\n\n  /**\n   * Checks if the parsed color is valid\n   * @returns {boolean} - true if the parsed color is valid\n   * @memberof ColorConvertor\n   */\n  isValid (): boolean {\n    return this.getColorObj().value !== undefined\n  }\n\n  setColor (color: string): void {\n    this.setInput(color)\n    this.setColorObj(inputParser(this.getInput()))\n    this.setRbgObj(toRgbBase(this.getColorObj()))\n  }\n\n  // TODO implement\n  fromRatio (): string {\n    return 'not implemented'\n  }\n\n  // TODO implement\n  fromPercentageRgb (): string {\n    return 'not implemented'\n  }\n\n  toHsv (): HsvObject {\n    return rgbNormalizedToHsv(this.getRgbObj())\n  }\n\n  toHsvString (): string {\n    const { h, s, v } = this.toHsv()\n    return `hsv(${h}, ${s}%, ${v}%)`\n  }\n\n  toHsl (): HslObject {\n    return rgbNormalizedToHsl(this.getRgbObj())\n  }\n\n  toHslString (): string {\n    const { h, s, l } = rgbNormalizedToHsl(this.getRgbObj())\n    return `hsl(${h}, ${s}%, ${l}%)`\n  }\n\n  toHex (): string {\n    return rgbToHex(rgbNormalizedToRgb(this.getRgbObj())) ?? ''\n  }\n\n  toHexString (): string {\n    return `#${this.toHex()}`\n  }\n\n  toHex8 (): string {\n    const { r, g, b } = rgbNormalizedToRgb(this.getRgbObj())\n    const a = this.getAlpha()\n    return rgbaToHex8({ r, g, b, a })\n  }\n\n  toHex8String (): string {\n    return `#${this.toHex8()}`\n  }\n\n  toCmy (): CmykObject {\n    return rgbNormalizedToCmy(this.getRgbObj())\n  }\n\n  toCmyk (): CmykObject {\n    return cmyToCmyk(this.toCmy())\n  }\n\n  /*\n    XYZ, CIE-L*ab, CIE-L*Ch(ab)\n    formulae from https://www.easyrgb.com/en/math.php\n\n    X, Y and Z output refers to a D65/2Â° standard illuminant.\n    */\n\n  toXyz (): XyzObject {\n    return rgbToXyz(this.getRgbObj())\n  }\n\n  toXyzString (): string {\n    const { x, y, z } = this.toXyz()\n    return `xyz(${x}, ${y}, ${z})`\n  }\n\n  // CIE-L*ab\n  toLab (): LabObject {\n    return xyzToLab(this.toXyz())\n  }\n\n  toLabString (): string {\n    const { l, a, b } = this.toLab()\n    return `lab(${l}, ${a}, ${b})`\n  }\n\n  toLch (): LchObject {\n    return labToLch(this.toLab())\n  }\n\n  toLchString (): string {\n    const { l, c, h } = this.toLch()\n    return `lch(${l}, ${c}, ${h})`\n  }\n\n  getBrightness (): number {\n    return calculateBrightness(rgbNormalizedToRgb(this.getRgbObj()))\n  }\n\n  getLuminance (): number {\n    return calculateLuminance(this.getRgbObj())\n  }\n\n  isDark (): boolean {\n    return this.getBrightness() < 128\n  }\n\n  isLight (): boolean {\n    return this.getBrightness() >= 128\n  }\n\n  getFormat (): string | undefined {\n    return this.getColorObj().format\n  }\n\n  getAlpha (): number | undefined {\n    let { a } = this.getRgbObj()\n    a = a ?? 1 // 100% alpha if working with rgb values\n    return a\n  }\n\n  setAlpha (newAlpha: number): void {\n    if (newAlpha < 0 || newAlpha > 1) {\n      throw new Error('Alpha value must be between 0 and 1')\n    }\n    const { r, g, b } = this.getRgbObj()\n    const a = newAlpha\n    this.setRbgObj({ r, g, b, a })\n  }\n\n  toName (): string | undefined {\n    const hex = truncateHex(this.toHex())\n    for (const color in namedColors) {\n      if (namedColors[color] === hex) {\n        return color\n      }\n    }\n    return undefined\n  }\n\n  toNearestNamedColor (): string {\n    const rgb = rgbNormalizedToRgb(this.getRgbObj())\n    return findClosestColor(rgb, namedColorsRgb)\n  }\n\n  toPercentageRgb (): RgbObject {\n    const { r, g, b } = this.getRgbObj()\n    return {\n      r: r !== undefined ? r * 100 : undefined,\n      g: g !== undefined ? g * 100 : undefined,\n      b: b !== undefined ? b * 100 : undefined\n    }\n  }\n\n  toPercentageRgbString (): string {\n    const { r, g, b } = this.toPercentageRgb()\n    return `rgb(${r}%, ${g}%, ${b}%)`\n  }\n\n  equals (color2: string): boolean {\n    return this.toRgbString() === new ColorConvertor(color2).toRgbString()\n  }\n\n  /**\n     * Returns a random color in sRGB color space\n     * @returns {void}\n     * @memberof ColorConvertor\n     * @remarks Will overwrite the current color\n     */\n  random (): void {\n    this.setColorObj({\n      format: 'rgb',\n      value: {\n        r: Math.floor(Math.random() * 256),\n        g: Math.floor(Math.random() * 256),\n        b: Math.floor(Math.random() * 256)\n      }\n    })\n    this.setRbgObj(toRgbBase(this.getColorObj()))\n  }\n\n  clone (): ColorConvertor {\n    return new ColorConvertor(this.getInput())\n  }\n\n  /**\n   * Returns the contrast ratio between the current color and the color passed as an argument\n   * @param color2 - The color to compare the current color to\n   * @returns {number} - The contrast ratio between the current color and the color passed as an argument\n   * @memberof ColorConvertor\n   * @link http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n   */\n  readability (color2: string): number {\n    const l1: number = this.getLuminance()\n    const l2: number = new ColorConvertor(color2).getLuminance()\n    return (Math.max(l1, l2) + 0.05) / (Math.min(l1, l2) + 0.05)\n  }\n}\n\nexport default ColorConvertor\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAQA,SAASA,WAAW,QAAQ,qBAAqB;AACjD,SACEC,kBAAkB,EAClBC,kBAAkB,EAClBC,SAAS,EACTC,kBAAkB,EAClBC,SAAS,EACTC,kBAAkB,EAClBC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,UAAU,QACL,qBAAqB;AAC5B,SAASC,mBAAmB,EAAEC,kBAAkB,EAAEC,gBAAgB,EAAEC,WAAW,QAAQ,mBAAmB;AAC1G,OAAOC,WAAW,IAAIC,cAAc,QAAQ,qBAAqB;AAEjE,MAAMC,cAAc,CAAC;EAKnBC,WAAWA,CAAEC,UAAmB,EAAE;IAChC,IAAI,CAACC,WAAW,GAAGD,UAAU,IAAIE,SAAS,EAAC;IAC3C,IAAI,CAACC,SAAS,GAAGvB,WAAW,CAAC,IAAI,CAACqB,WAAW,CAAC,EAAC;IAC/C,IAAI,CAACG,OAAO,GAAGrB,SAAS,CAAC,IAAI,CAACoB,SAAS,CAAC,EAAC;EAC3C;EAEAE,QAAQA,CAAA,EAAY;IAClB,OAAO,IAAI,CAACJ,WAAW,IAAI,EAAE;EAC/B;EAEAK,WAAWA,CAAA,EAAkB;IAC3B,OAAO,IAAI,CAACH,SAAS;EACvB;EAEAI,SAASA,CAAA,EAAe;IACtB,OAAO,IAAI,CAACH,OAAO;EACrB;EAEAI,QAAQA,CAAER,UAAkB,EAAQ;IAClC,IAAI,CAACC,WAAW,GAAGD,UAAU;EAC/B;EAEAS,WAAWA,CAAEC,QAAsB,EAAQ;IACzC,IAAI,CAACP,SAAS,GAAGO,QAAQ;EAC3B;EAEAC,SAASA,CAAEC,MAAiB,EAAQ;IAClC,IAAI,CAACR,OAAO,GAAGQ,MAAM;EACvB;;EAEA;AACF;AACA;AACA;AACA;EACEC,KAAKA,CAAA,EAAe;IAClB,OAAOhC,kBAAkB,CAAC,IAAI,CAAC0B,SAAS,CAAC,CAAC,CAAC;EAC7C;;EAEA;AACF;AACA;AACA;AACA;EACEO,WAAWA,CAAA,EAAY;IACrB,MAAM;MAAEC,CAAC;MAAEC,CAAC;MAAEC,CAAC;MAAEC;IAAE,CAAC,GAAG,IAAI,CAACL,KAAK,CAAC,CAAC;IACnC,OAAQ,GAAEK,CAAC,KAAKhB,SAAS,GAAG,MAAM,GAAG,KAAM,IAAGa,CAAE,KAAIC,CAAE,KAAIC,CAAE,GAAEC,CAAC,KAAKhB,SAAS,GAAI,KAAIgB,CAAE,EAAC,GAAG,EAAG,GAAE;EAClG;;EAEA;AACF;AACA;AACA;AACA;EACEC,OAAOA,CAAA,EAAa;IAClB,OAAO,IAAI,CAACb,WAAW,CAAC,CAAC,CAACc,KAAK,KAAKlB,SAAS;EAC/C;EAEAmB,QAAQA,CAAEC,KAAa,EAAQ;IAC7B,IAAI,CAACd,QAAQ,CAACc,KAAK,CAAC;IACpB,IAAI,CAACb,WAAW,CAAC7B,WAAW,CAAC,IAAI,CAACyB,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC9C,IAAI,CAACM,SAAS,CAAC5B,SAAS,CAAC,IAAI,CAACuB,WAAW,CAAC,CAAC,CAAC,CAAC;EAC/C;;EAEA;EACAiB,SAASA,CAAA,EAAY;IACnB,OAAO,iBAAiB;EAC1B;;EAEA;EACAC,iBAAiBA,CAAA,EAAY;IAC3B,OAAO,iBAAiB;EAC1B;EAEAC,KAAKA,CAAA,EAAe;IAClB,OAAOvC,kBAAkB,CAAC,IAAI,CAACqB,SAAS,CAAC,CAAC,CAAC;EAC7C;EAEAmB,WAAWA,CAAA,EAAY;IACrB,MAAM;MAAEC,CAAC;MAAEC,CAAC;MAAEC;IAAE,CAAC,GAAG,IAAI,CAACJ,KAAK,CAAC,CAAC;IAChC,OAAQ,OAAME,CAAE,KAAIC,CAAE,MAAKC,CAAE,IAAG;EAClC;EAEAC,KAAKA,CAAA,EAAe;IAClB,OAAOhD,kBAAkB,CAAC,IAAI,CAACyB,SAAS,CAAC,CAAC,CAAC;EAC7C;EAEAwB,WAAWA,CAAA,EAAY;IACrB,MAAM;MAAEJ,CAAC;MAAEC,CAAC;MAAEI;IAAE,CAAC,GAAGlD,kBAAkB,CAAC,IAAI,CAACyB,SAAS,CAAC,CAAC,CAAC;IACxD,OAAQ,OAAMoB,CAAE,KAAIC,CAAE,MAAKI,CAAE,IAAG;EAClC;EAEAC,KAAKA,CAAA,EAAY;IACf,OAAO3C,QAAQ,CAACT,kBAAkB,CAAC,IAAI,CAAC0B,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;EAC7D;EAEA2B,WAAWA,CAAA,EAAY;IACrB,OAAQ,IAAG,IAAI,CAACD,KAAK,CAAC,CAAE,EAAC;EAC3B;EAEAE,MAAMA,CAAA,EAAY;IAChB,MAAM;MAAEpB,CAAC;MAAEC,CAAC;MAAEC;IAAE,CAAC,GAAGpC,kBAAkB,CAAC,IAAI,CAAC0B,SAAS,CAAC,CAAC,CAAC;IACxD,MAAMW,CAAC,GAAG,IAAI,CAACkB,QAAQ,CAAC,CAAC;IACzB,OAAO7C,UAAU,CAAC;MAAEwB,CAAC;MAAEC,CAAC;MAAEC,CAAC;MAAEC;IAAE,CAAC,CAAC;EACnC;EAEAmB,YAAYA,CAAA,EAAY;IACtB,OAAQ,IAAG,IAAI,CAACF,MAAM,CAAC,CAAE,EAAC;EAC5B;EAEAG,KAAKA,CAAA,EAAgB;IACnB,OAAOtD,kBAAkB,CAAC,IAAI,CAACuB,SAAS,CAAC,CAAC,CAAC;EAC7C;EAEAgC,MAAMA,CAAA,EAAgB;IACpB,OAAOtD,SAAS,CAAC,IAAI,CAACqD,KAAK,CAAC,CAAC,CAAC;EAChC;;EAEA;AACF;AACA;AACA;AACA;;EAGEE,KAAKA,CAAA,EAAe;IAClB,OAAOrD,QAAQ,CAAC,IAAI,CAACoB,SAAS,CAAC,CAAC,CAAC;EACnC;EAEAkC,WAAWA,CAAA,EAAY;IACrB,MAAM;MAAEC,CAAC;MAAEC,CAAC;MAAEC;IAAE,CAAC,GAAG,IAAI,CAACJ,KAAK,CAAC,CAAC;IAChC,OAAQ,OAAME,CAAE,KAAIC,CAAE,KAAIC,CAAE,GAAE;EAChC;;EAEA;EACAC,KAAKA,CAAA,EAAe;IAClB,OAAOzD,QAAQ,CAAC,IAAI,CAACoD,KAAK,CAAC,CAAC,CAAC;EAC/B;EAEAM,WAAWA,CAAA,EAAY;IACrB,MAAM;MAAEd,CAAC;MAAEd,CAAC;MAAED;IAAE,CAAC,GAAG,IAAI,CAAC4B,KAAK,CAAC,CAAC;IAChC,OAAQ,OAAMb,CAAE,KAAId,CAAE,KAAID,CAAE,GAAE;EAChC;EAEA8B,KAAKA,CAAA,EAAe;IAClB,OAAO1D,QAAQ,CAAC,IAAI,CAACwD,KAAK,CAAC,CAAC,CAAC;EAC/B;EAEAG,WAAWA,CAAA,EAAY;IACrB,MAAM;MAAEhB,CAAC;MAAEiB,CAAC;MAAEtB;IAAE,CAAC,GAAG,IAAI,CAACoB,KAAK,CAAC,CAAC;IAChC,OAAQ,OAAMf,CAAE,KAAIiB,CAAE,KAAItB,CAAE,GAAE;EAChC;EAEAuB,aAAaA,CAAA,EAAY;IACvB,OAAO1D,mBAAmB,CAACX,kBAAkB,CAAC,IAAI,CAAC0B,SAAS,CAAC,CAAC,CAAC,CAAC;EAClE;EAEA4C,YAAYA,CAAA,EAAY;IACtB,OAAO1D,kBAAkB,CAAC,IAAI,CAACc,SAAS,CAAC,CAAC,CAAC;EAC7C;EAEA6C,MAAMA,CAAA,EAAa;IACjB,OAAO,IAAI,CAACF,aAAa,CAAC,CAAC,GAAG,GAAG;EACnC;EAEAG,OAAOA,CAAA,EAAa;IAClB,OAAO,IAAI,CAACH,aAAa,CAAC,CAAC,IAAI,GAAG;EACpC;EAEAI,SAASA,CAAA,EAAwB;IAC/B,OAAO,IAAI,CAAChD,WAAW,CAAC,CAAC,CAACiD,MAAM;EAClC;EAEAnB,QAAQA,CAAA,EAAwB;IAC9B,IAAI;MAAElB;IAAE,CAAC,GAAG,IAAI,CAACX,SAAS,CAAC,CAAC;IAC5BW,CAAC,GAAGA,CAAC,IAAI,CAAC,EAAC;IACX,OAAOA,CAAC;EACV;EAEAsC,QAAQA,CAAEC,QAAgB,EAAQ;IAChC,IAAIA,QAAQ,GAAG,CAAC,IAAIA,QAAQ,GAAG,CAAC,EAAE;MAChC,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;IACxD;IACA,MAAM;MAAE3C,CAAC;MAAEC,CAAC;MAAEC;IAAE,CAAC,GAAG,IAAI,CAACV,SAAS,CAAC,CAAC;IACpC,MAAMW,CAAC,GAAGuC,QAAQ;IAClB,IAAI,CAAC9C,SAAS,CAAC;MAAEI,CAAC;MAAEC,CAAC;MAAEC,CAAC;MAAEC;IAAE,CAAC,CAAC;EAChC;EAEAyC,MAAMA,CAAA,EAAwB;IAC5B,MAAMC,GAAG,GAAGjE,WAAW,CAAC,IAAI,CAACsC,KAAK,CAAC,CAAC,CAAC;IACrC,KAAK,MAAMX,KAAK,IAAI1B,WAAW,EAAE;MAC/B,IAAIA,WAAW,CAAC0B,KAAK,CAAC,KAAKsC,GAAG,EAAE;QAC9B,OAAOtC,KAAK;MACd;IACF;IACA,OAAOpB,SAAS;EAClB;EAEA2D,mBAAmBA,CAAA,EAAY;IAC7B,MAAMC,GAAG,GAAGjF,kBAAkB,CAAC,IAAI,CAAC0B,SAAS,CAAC,CAAC,CAAC;IAChD,OAAOb,gBAAgB,CAACoE,GAAG,EAAEjE,cAAc,CAAC;EAC9C;EAEAkE,eAAeA,CAAA,EAAe;IAC5B,MAAM;MAAEhD,CAAC;MAAEC,CAAC;MAAEC;IAAE,CAAC,GAAG,IAAI,CAACV,SAAS,CAAC,CAAC;IACpC,OAAO;MACLQ,CAAC,EAAEA,CAAC,KAAKb,SAAS,GAAGa,CAAC,GAAG,GAAG,GAAGb,SAAS;MACxCc,CAAC,EAAEA,CAAC,KAAKd,SAAS,GAAGc,CAAC,GAAG,GAAG,GAAGd,SAAS;MACxCe,CAAC,EAAEA,CAAC,KAAKf,SAAS,GAAGe,CAAC,GAAG,GAAG,GAAGf;IACjC,CAAC;EACH;EAEA8D,qBAAqBA,CAAA,EAAY;IAC/B,MAAM;MAAEjD,CAAC;MAAEC,CAAC;MAAEC;IAAE,CAAC,GAAG,IAAI,CAAC8C,eAAe,CAAC,CAAC;IAC1C,OAAQ,OAAMhD,CAAE,MAAKC,CAAE,MAAKC,CAAE,IAAG;EACnC;EAEAgD,MAAMA,CAAEC,MAAc,EAAW;IAC/B,OAAO,IAAI,CAACpD,WAAW,CAAC,CAAC,KAAK,IAAIhB,cAAc,CAACoE,MAAM,CAAC,CAACpD,WAAW,CAAC,CAAC;EACxE;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEqD,MAAMA,CAAA,EAAU;IACd,IAAI,CAAC1D,WAAW,CAAC;MACf8C,MAAM,EAAE,KAAK;MACbnC,KAAK,EAAE;QACLL,CAAC,EAAEqD,IAAI,CAACC,KAAK,CAACD,IAAI,CAACD,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;QAClCnD,CAAC,EAAEoD,IAAI,CAACC,KAAK,CAACD,IAAI,CAACD,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;QAClClD,CAAC,EAAEmD,IAAI,CAACC,KAAK,CAACD,IAAI,CAACD,MAAM,CAAC,CAAC,GAAG,GAAG;MACnC;IACF,CAAC,CAAC;IACF,IAAI,CAACxD,SAAS,CAAC5B,SAAS,CAAC,IAAI,CAACuB,WAAW,CAAC,CAAC,CAAC,CAAC;EAC/C;EAEAgE,KAAKA,CAAA,EAAoB;IACvB,OAAO,IAAIxE,cAAc,CAAC,IAAI,CAACO,QAAQ,CAAC,CAAC,CAAC;EAC5C;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEkE,WAAWA,CAAEL,MAAc,EAAU;IACnC,MAAMM,EAAU,GAAG,IAAI,CAACrB,YAAY,CAAC,CAAC;IACtC,MAAMsB,EAAU,GAAG,IAAI3E,cAAc,CAACoE,MAAM,CAAC,CAACf,YAAY,CAAC,CAAC;IAC5D,OAAO,CAACiB,IAAI,CAACM,GAAG,CAACF,EAAE,EAAEC,EAAE,CAAC,GAAG,IAAI,KAAKL,IAAI,CAACO,GAAG,CAACH,EAAE,EAAEC,EAAE,CAAC,GAAG,IAAI,CAAC;EAC9D;AACF;AAEA,eAAe3E,cAAc"}