{"version":3,"file":"colorconvertor.js","names":["inputParser","labToLch","rgbaToHex8","rgbToHex","rgbToHsl","rgbToHsv","rgbToXyz","toRgbBase","xyzToLab","calculateBrightness","calculateLuminance","truncateHex","namedColors","ColorConvertor","colorInput","_colorInput","_colorObj","_rgbObj","prototype","getInput","getColorObj","getRgbObj","isValid","value","undefined","setColor","color","toRgb","toRgbString","format","r","g","b","a","toHsv","toHsvString","h","s","v","toHsl","toHslString","l","toHex","toHexString","toHex8","getAlpha","toHex8String","toXyz","toNormalizedRgb","toXyzString","x","y","z","toLab","toLabString","toLch","toLchString","c","getBrightness","getLuminance","isDark","isLight","getFormat","setAlpha","newAlpha","Error","toNormalizedRgba","toName","hex","toPercentageRgb","toPercentageRgbString","equals","color2","random","Math","floor","clone","readability","l1","l2","max","min"],"sources":["../../src/colorconvertor.ts"],"sourcesContent":["/*\n    Color Convertor\n    Owen Rees, MIT License, 2024\n\n    based on https://github.com/bgrins/TinyColor\n*/\n\nimport { type ColorConvertorInstance, type RgbObject, type XyzObject } from './types'\nimport { inputParser } from './utils/inputParser'\nimport { labToLch, rgbaToHex8, rgbToHex, rgbToHsl, rgbToHsv, rgbToXyz, toRgbBase, xyzToLab } from './utils/conversions'\nimport { calculateBrightness, calculateLuminance, truncateHex } from './utils/utilities'\nimport namedColors from './utils/namedColors'\n\nfunction ColorConvertor (this: ColorConvertorInstance, colorInput: string): void {\n  this._colorInput = colorInput // string input of any color format\n  this._colorObj = inputParser(this._colorInput) // Color info object. E.g. { format: 'hex', value: '#ffffff' }\n  this._rgbObj = toRgbBase(this._colorObj) // RGB color info object. E.g. { format: 'rgb', value: { r: 255, g: 255, b: 255 }\n}\n\nColorConvertor.prototype = {\n  /*\n    General Methods\n  */\n  getInput () {\n    return this._colorInput\n  },\n  getColorObj () {\n    return this._colorObj\n  },\n  getRgbObj () {\n    return this._rgbObj\n  },\n  isValid () {\n    return this.getColorObj().value !== undefined\n  },\n  setColor (this: ColorConvertorInstance, color: string) {\n    this._colorInput = color\n    this._colorObj = inputParser(this.getInput())\n    this._rgbObj = toRgbBase(this.getColorObj())\n  },\n  // fromRatio () {\n  //   return 'not implemented'\n  // },\n  toRgb (this: ColorConvertorInstance) {\n    return toRgbBase(this.getColorObj())\n  },\n  toRgbString () {\n    const { format, value: { r, g, b, a } } = this.getRgbObj()\n    return `${format}(${r}, ${g}, ${b}${a !== undefined ? `, ${a}` : ''})`\n  },\n  toHsv () {\n    return rgbToHsv(this.getRgbObj().value as RgbObject)\n  },\n  toHsvString () {\n    const { h, s, v } = rgbToHsv(this.getRgbObj().value as RgbObject)\n    return `hsv(${h}, ${s}%, ${v}%)`\n  },\n  toHsl () {\n    return rgbToHsl(this.getRgbObj().value as RgbObject)\n  },\n  toHslString () {\n    const { h, s, l } = rgbToHsl(this.getRgbObj().value as RgbObject)\n    return `hsl(${h}, ${s}%, ${l}%)`\n  },\n  toHex () {\n    return rgbToHex(this.getRgbObj().value as RgbObject)\n  },\n  toHexString () {\n    return `#${this.toHex()}`\n  },\n  toHex8 () {\n    const { r, g, b } = this.getRgbObj().value\n    const a = this.getAlpha()\n    return rgbaToHex8({ r, g, b, a })\n  },\n  toHex8String () {\n    return `#${this.toHex8()}`\n  },\n  // XYZ, CIE-L*ab, CIE-L*Ch(ab) from https://www.easyrgb.com/en/math.php\n  // X, Y and Z output refer to a D65/2Â° standard illuminant.\n  toXyz (this: ColorConvertorInstance) {\n    return rgbToXyz(this.toNormalizedRgb())\n  },\n  toXyzString () {\n    const { x, y, z } = this.toXyz()\n    return `xyz(${x}, ${y}, ${z})`\n  },\n  // CIE-L*ab\n  toLab (this: ColorConvertorInstance) {\n    return xyzToLab(this.toXyz())\n  },\n  toLabString () {\n    const { l, a, b } = this.toLab()\n    return `lab(${l}, ${a}, ${b})`\n  },\n  toLch (this: ColorConvertorInstance) {\n    return labToLch(this.toLab())\n  },\n  toLchString () {\n    const { l, c, h } = this.toLch()\n    return `lch(${l}, ${c}, ${h})`\n  },\n  getBrightness () {\n    return calculateBrightness(this.getRgbObj().value as RgbObject)\n  },\n  getLuminance () {\n    return calculateLuminance(this.getRgbObj().value as RgbObject)\n  },\n  isDark () {\n    return this.getBrightness() < 128\n  },\n  isLight () {\n    return this.getBrightness() >= 128\n  },\n  getFormat () {\n    return this.getColorObj().format\n  },\n  getAlpha () {\n    let { a } = this.getRgbObj().value\n    a = a === undefined ? 1 : a // 100% alpha if working with rgb values\n    return a\n  },\n  setAlpha (newAlpha: number) {\n    if (newAlpha < 0 || newAlpha > 1) {\n      throw new Error('Alpha value must be between 0 and 1')\n    }\n    const { r, g, b } = this.getRgbObj().value\n    const a = newAlpha\n    this.getRgbObj().value = { r, g, b, a }\n    return this.getRgbObj()\n  },\n  toNormalizedRgb () {\n    const { r, g, b } = this.getRgbObj().value\n    return { r: r / 255, g: g / 255, b: b / 255 }\n  },\n  toNormalizedRgba () {\n    const { r, g, b } = this.getRgbObj().value\n    const a = this.getAlpha()\n    return { r: r / 255, g: g / 255, b: b / 255, a }\n  },\n  toName (this: ColorConvertorInstance) {\n    const hex = truncateHex(this.toHex())\n    for (const color in namedColors) {\n      if (namedColors[color] === hex) {\n        return color\n      }\n    }\n    return undefined\n  },\n  // toNearestNamedColor (this: ColorConvertorInstance) { // TODO needs to use LAB\n  //   const rgb1 = this.getRgbObj().value as RgbObject\n  //   console.log(findClosestColor(rgb1, namedColorsRgb))\n  // },\n  // toNearestWebSafeColor () {\n  //   return 'not implemented'\n  // },\n  toPercentageRgb () {\n    const { r, g, b } = this.getRgbObj().value\n    return { r: r / 255 * 100, g: g / 255 * 100, b: b / 255 * 100 }\n  },\n  toPercentageRgbString () {\n    const { r, g, b } = this.toPercentageRgb()\n    return `rgb(${r}%, ${g}%, ${b}%)`\n  },\n  equals (color2: string) {\n    const { r, g, b } = toRgbBase(inputParser(color2)).value as RgbObject\n    return this.getColorObj().value.r === r &&\n       this.getColorObj().value.g === g &&\n       this.getColorObj().value.b === b\n  },\n  random () {\n    this._rgbObj = {\n      format: 'rgb',\n      value: {\n        r: Math.floor(Math.random() * 256),\n        g: Math.floor(Math.random() * 256),\n        b: Math.floor(Math.random() * 256)\n      }\n    }\n    return this._rgbObj\n  },\n  clone (this: ColorConvertorInstance) {\n    // @ts-expect-error\n    return new ColorConvertor(this.getInput())\n  },\n  /*\n    Readability Methods\n    <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n   */\n\n  // Analyze the 2 colors and returns the color contrast defined by WCAG Version 2\n  readability (color2: string) {\n    const l1: number = this.getLuminance()\n    // @ts-expect-error\n    const l2: number = new ColorConvertor(color2).getLuminance()\n    return (Math.max(l1, l2) + 0.05) / (Math.min(l1, l2) + 0.05)\n  }\n  // isReadable (color2: string) {\n  //   const readability = this.readability(color2)\n  //   console.log(readability)\n  // }\n}\n\n// Combination Methods\n\n// Utility Methods\n\nexport default ColorConvertor\n"],"mappings":"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"}