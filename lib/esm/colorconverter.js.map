{"version":3,"file":"colorconverter.js","names":["rgbNormalizedToRgb","rgbNormalizedToHsl","toRgbBase","rgbNormalizedToCmy","cmyToCmyk","rgbNormalizedToHsv","rgbToXyz","xyzToLab","labToLch","rgbToHex","rgbaToHex8","findClosestColor","inputParser","calculateBrightness","calculateLuminance","truncateHex","namedColors","namedColorsRgb","ColorConverter","constructor","colorInput","_colorInput","undefined","_colorObj","_rgbObj","getInput","getColorObj","getRgbObj","setInput","setColorObj","colorObj","setRbgObj","rgbObj","setColor","color","isValid","value","toRgb","toRgbString","r","g","b","a","toNormalizedRgb","toNormalizedRgbString","fromRatio","fromPercentageRgb","toHsv","toHsvString","h","s","v","toHsl","toHslString","l","toHex","toHexString","toHex8","getAlpha","toHex8String","toCmy","toCmyk","toXyz","toXyzString","x","y","z","toLab","toLabString","toLch","toLchString","c","getBrightness","getLuminance","isDark","isLight","getFormat","format","setAlpha","newAlpha","Error","toName","hex","toNearestNamedColor","rgb","toPercentageRgb","toPercentageRgbString","equals","color2","random","Math","floor","clone","readability","l1","l2","max","min","isReadable","AA","large","normal","small","AAA"],"sources":["../../src/colorconverter.ts"],"sourcesContent":["/*\n    Color Converter\n    Owen Rees, MIT License, 2024\n\n    based on https://github.com/bgrins/TinyColor\n*/\n\nimport {\n  type CmykObject,\n  type ColorObjType,\n  type HslObject,\n  type HsvObject,\n  type LabObject,\n  type LchObject,\n  type RgbObject,\n  type XyzObject,\n} from \"./types\";\nimport {\n  rgbNormalizedToRgb,\n  rgbNormalizedToHsl,\n  toRgbBase,\n  rgbNormalizedToCmy,\n  cmyToCmyk,\n  rgbNormalizedToHsv,\n  rgbToXyz,\n  xyzToLab,\n  labToLch,\n  rgbToHex,\n  rgbaToHex8,\n  findClosestColor,\n} from \"./utils/conversions\";\nimport { inputParser } from \"./utils/inputParser\";\nimport {\n  calculateBrightness,\n  calculateLuminance,\n  truncateHex,\n} from \"./utils/utilities\";\nimport namedColors, { namedColorsRgb } from \"./utils/namedColors\";\n\nclass ColorConverter {\n  private _colorInput: string | undefined;\n  private _colorObj: ColorObjType;\n  private _rgbObj: RgbObject;\n\n  constructor(colorInput?: string) {\n    this._colorInput = colorInput ?? undefined; // string input of any color format\n    this._colorObj = inputParser(this._colorInput); // Color info object created from _colorInput. E.g. { format: 'hex', value: '#ffffff' }\n    this._rgbObj = toRgbBase(this._colorObj); // RGB normalised values object - 0-1. E.g. { r: 1, g: 0.5, b: 0.8 }\n  }\n\n  getInput(): string {\n    return this._colorInput ?? \"\";\n  }\n\n  getColorObj(): ColorObjType {\n    return this._colorObj;\n  }\n\n  getRgbObj(): RgbObject {\n    return this._rgbObj;\n  }\n\n  setInput(colorInput: string): void {\n    this._colorInput = colorInput;\n  }\n\n  setColorObj(colorObj: ColorObjType): void {\n    this._colorObj = colorObj;\n  }\n\n  setRbgObj(rgbObj: RgbObject): void {\n    this._rgbObj = rgbObj;\n  }\n\n  setColor(color: string): void {\n    this.setInput(color);\n    this.setColorObj(inputParser(this.getInput()));\n    this.setRbgObj(toRgbBase(this.getColorObj()));\n  }\n\n  /**\n   * Checks if the parsed color is valid\n   * @returns {boolean} - true if the parsed color is valid\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.isValid() // true\n   */\n  isValid(): boolean {\n    return this.getColorObj().value !== undefined;\n  }\n\n  /**\n   * Returns the RGB values in the range 0-255\n   * @returns {RgbObject} - RGB values object\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toRgb() // { r: 255, g: 0, b: 0 }\n   */\n  toRgb(): RgbObject {\n    return rgbNormalizedToRgb(this.getRgbObj());\n  }\n\n  /**\n   * Returns the RGB values in the range 0-255 as a string\n   * @returns {string} - RGB values string\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toRgbString() // \"rgb(255, 0, 0)\"\n   */\n  toRgbString(): string {\n    const { r, g, b, a } = this.toRgb();\n    return `${a !== undefined ? \"rgba\" : \"rgb\"}(${r}, ${g}, ${b}${a !== undefined ? `, ${a}` : \"\"})`;\n  }\n\n  toNormalizedRgb(): RgbObject {\n    return this.getRgbObj();\n  }\n\n  toNormalizedRgbString(): string {\n    const { r, g, b, a } = this.getRgbObj();\n    return `${a !== undefined ? \"rgba\" : \"rgb\"}(${r}, ${g}, ${b}${a !== undefined ? `, ${a}` : \"\"})`;\n  }\n\n  // TODO implement\n  fromRatio(): string {\n    return \"not implemented\";\n  }\n\n  // TODO implement\n  fromPercentageRgb(): string {\n    return \"not implemented\";\n  }\n\n  /**\n   * Converts the current color to  HSV\n   * @returns {HsvObject} - HSV values object\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHsv() // { h: 0, s: 100, v: 100 }\n   */\n  toHsv(): HsvObject {\n    return rgbNormalizedToHsv(this.getRgbObj());\n  }\n\n  /**\n   * Converts the current color to HSV as a string\n   * @returns {string} - HSV values as a string\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHsvString() // \"hsv(0, 100%, 100%)\"\n   */\n  toHsvString(): string {\n    const { h, s, v } = this.toHsv();\n    return `hsv(${h}, ${s}%, ${v}%)`;\n  }\n\n  /**\n   * Converts the current color to HSL\n   * @returns {HslObject} - HSL values object\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHsl() // { h: 0, s: 100, l: 50 }\n   */\n  toHsl(): HslObject {\n    return rgbNormalizedToHsl(this.getRgbObj());\n  }\n\n  /**\n   * Converts the current color to HSL as a string\n   * @returns {string} - HSL values as a string\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHslString() // \"hsl(0, 100%, 50%)\"\n   */\n  toHslString(): string {\n    const { h, s, l } = rgbNormalizedToHsl(this.getRgbObj());\n    return `hsl(${h}, ${s}%, ${l}%)`;\n  }\n\n  /**\n   * Converts the current color to Hex\n   * @returns {string} - Hex value\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHex() // \"ff0000\"\n   */\n  toHex(): string {\n    return rgbToHex(rgbNormalizedToRgb(this.getRgbObj())) ?? \"\";\n  }\n\n  /**\n   * Converts the current color to Hex as a string\n   * @returns {string} - Hex value as a string\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHex() // \"#ff0000\"\n   */\n  toHexString(): string {\n    return `#${this.toHex()}`;\n  }\n\n  /**\n   * Converts the current color to Hex8\n   * @returns {string} - Hex8 value\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHex8() // \"ff0000ff\"\n   */\n  toHex8(): string {\n    const { r, g, b } = rgbNormalizedToRgb(this.getRgbObj());\n    const a = this.getAlpha();\n    return rgbaToHex8({ r, g, b, a });\n  }\n\n  /**\n   * Converts the current color to Hex8 as a string\n   * @returns {string} - Hex8 value as a string\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toHex8String() // \"#ff0000ff\"\n   */\n  toHex8String(): string {\n    return `#${this.toHex8()}`;\n  }\n\n  /**\n   * Converts the current color to CMY\n   * @returns {CmykObject} - CMYK values object\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toCmy() // { c: 0, m: 100, y: 100 }\n   */\n  toCmy(): CmykObject {\n    return rgbNormalizedToCmy(this.getRgbObj());\n  }\n\n  /** Converts the current color to CMYK\n   * @returns {CmykObject} - CMYK values object\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toCmyk() // { c: 0, m: 100, y: 100, k: 0 }\n   */\n  toCmyk(): CmykObject {\n    return cmyToCmyk(this.toCmy());\n  }\n\n  /*\n    XYZ, CIE-L*ab, CIE-L*Ch(ab)\n    formulae from https://www.easyrgb.com/en/math.php\n\n    X, Y and Z output refers to a D65/2Â° standard illuminant.\n    */\n\n  /**\n   * Converts the current color to XYZ\n   * @returns {XyzObject} - XYZ values object\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toXyz() // { x: 41.24, y: 21.26, z: 1.93 }\n   */\n  toXyz(): XyzObject {\n    return rgbToXyz(this.getRgbObj());\n  }\n\n  /**\n   * Converts the current color to XYZ as a string\n   * @returns {string} - XYZ values as a string\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toXyzString() // \"xyz(41.24, 21.26, 1.93)\"\n   */\n  toXyzString(): string {\n    const { x, y, z } = this.toXyz();\n    return `xyz(${x}, ${y}, ${z})`;\n  }\n\n  /**\n   * Converts the current color to LAB\n   * @returns {LabObject} - LAB values object\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toLab() // { l: 53.24, a: 80.09, b: 67.20 }\n   */\n  toLab(): LabObject {\n    return xyzToLab(this.toXyz());\n  }\n\n  /**\n   * Converts the current color to LAB as a string\n   * @returns {string} - LAB values as a string\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toLabString() // \"lab(53.24, 80.09, 67.20)\"\n   */\n  toLabString(): string {\n    const { l, a, b } = this.toLab();\n    return `lab(${l}, ${a}, ${b})`;\n  }\n\n  /**\n   * Converts the current color to LCH\n   * @returns {LchObject} - LCH values object\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toLch() // { l: 53.24, c: 104.55, h: 40.85 }\n   */\n  toLch(): LchObject {\n    return labToLch(this.toLab());\n  }\n\n  /**\n   * Converts the current color to LCH as a string\n   * @returns {string} - LCH values as a string\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toLchString() // \"lch(53.24, 104.55, 40.85)\"\n   */\n  toLchString(): string {\n    const { l, c, h } = this.toLch();\n    return `lch(${l}, ${c}, ${h})`;\n  }\n\n  /**\n   * Returns the brightness of the current color\n   * @returns {number} - Brightness value\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.getBrightness() // 76.245\n   */\n  getBrightness(): number {\n    return calculateBrightness(rgbNormalizedToRgb(this.getRgbObj()));\n  }\n\n  /**\n   * Returns the luminance of the current color\n   * @returns {number} - Luminance value\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.getLuminance() // 0.2126\n   */\n  getLuminance(): number {\n    return calculateLuminance(this.getRgbObj());\n  }\n\n  /**\n   * Returns true if the current color is dark\n   * @returns {boolean} - true if the current color is dark\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.isDark() // true\n   */\n  isDark(): boolean {\n    return this.getBrightness() < 128;\n  }\n\n  /**\n   * Returns true if the current color is light\n   * @returns {boolean} - true if the current color is light\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.isLight() // false\n   */\n  isLight(): boolean {\n    return this.getBrightness() >= 128;\n  }\n\n  /**\n   * Returns the format of the current color\n   * @returns {string} - Color format\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('#ff0000')\n   * color.getFormat() // \"hex\"\n   */\n  getFormat(): string | undefined {\n    return this.getColorObj().format;\n  }\n\n  /**\n   * Returns the alpha value of the current color\n   * @returns {number} - Alpha value\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.getAlpha() // 1\n   */\n  getAlpha(): number | undefined {\n    let { a } = this.getRgbObj();\n    a = a ?? 1; // 100% alpha if working with rgb values\n    return a;\n  }\n\n  /**\n   * Sets the alpha value of the current color\n   * @param {number} newAlpha - Alpha value\n   * @returns {void}\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.setAlpha(0.5)\n   * color.getAlpha() // 0.5\n   */\n  setAlpha(newAlpha: number): void {\n    if (newAlpha < 0 || newAlpha > 1) {\n      throw new Error(\"Alpha value must be between 0 and 1\");\n    }\n    const { r, g, b } = this.getRgbObj();\n    const a = newAlpha;\n    this.setRbgObj({ r, g, b, a });\n  }\n\n  /**\n   * Returns a matching named CSS color if one exists\n   * @returns {string} - color name\n   * @memberof ColorConverter\n   * @link https://www.w3.org/TR/css-color-4/#named-colors\n   * @example\n   * const color = new ColorConvertor(\"hsl(0, 100%, 50%)\")\n   * color.toName() // \"red\"\n   */\n  toName(): string | undefined {\n    const hex = truncateHex(this.toHex());\n    for (const color in namedColors) {\n      if (namedColors[color] === hex) {\n        return color;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the closest named CSS color\n   * @returns {string} - color name\n   * @memberof ColorConverter\n   * @link https://www.w3.org/TR/css-color-4/#named-colors\n   * @example\n   * const color = new ColorConvertor(\"hsl(0, 92%, 48%)\")\n   * color.toNearestNamedColor() // \"red\"\n   */\n  toNearestNamedColor(): string {\n    const rgb = rgbNormalizedToRgb(this.getRgbObj());\n    return findClosestColor(rgb, namedColorsRgb);\n  }\n\n  /**\n   * Returns the RGB values in the range 0-100\n   * @returns {RgbObject} - RGB values object\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toPercentageRgb() // { r: 100, g: 0, b: 0 }\n   */\n  toPercentageRgb(): RgbObject {\n    const { r, g, b, a } = this.getRgbObj();\n    return {\n      r: r !== undefined ? r * 100 : undefined,\n      g: g !== undefined ? g * 100 : undefined,\n      b: b !== undefined ? b * 100 : undefined,\n      a: a !== undefined ? this.getAlpha() : undefined,\n    };\n  }\n\n  /**\n   * Returns the RGB values in the range 0-100% as a string\n   * @returns {string} - RGB values string\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor('red')\n   * color.toPercentageRgbString() // \"rgb(100%, 0%, 0%)\"\n   */\n  toPercentageRgbString(): string {\n    const { r, g, b, a } = this.toPercentageRgb();\n    return `${a !== undefined ? \"rgba\" : \"rgb\"}(${r}%, ${g}%, ${b}%${a !== undefined ? `, ${a}` : \"\"})`;\n  }\n\n  /**\n   * Checks if the current color is equal to the color passed as an argument\n   * @param color2\n   * @returns {boolean} - true if the current color is equal to the color passed as an argument\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor(\"red\")\n   * color.equals(\"#ff0000\") // true\n   * color.equals(\"hsl(0, 100%, 50%)\") // true\n   */\n  equals(color2: string): boolean {\n    return this.toRgbString() === new ColorConverter(color2).toRgbString();\n  }\n\n  /**\n   * Returns a random color in sRGB color space\n   * @returns {void}\n   * @memberof ColorConverter\n   * @remarks Will overwrite the current color\n   */\n  random(): void {\n    this.setColorObj({\n      format: \"rgb\",\n      value: {\n        r: Math.floor(Math.random() * 256),\n        g: Math.floor(Math.random() * 256),\n        b: Math.floor(Math.random() * 256),\n      },\n    });\n    this.setRbgObj(toRgbBase(this.getColorObj()));\n  }\n\n  /**\n   * Returns a clone of the current color instance\n   * @returns {ColorConverter} - ColorConvertor instance\n   * @memberof ColorConverter\n   * @example\n   * const color = new ColorConvertor(\"red\")\n   * const color2 = color.clone()\n   * color2.toRgbString() // \"rgb(255, 0, 0)\"\n   */\n  clone(): ColorConverter {\n    return new ColorConverter(this.getInput());\n  }\n\n  /**\n   * Returns the contrast ratio between the current color and the color passed as an argument\n   * @param color2 - The color to compare the current color to\n   * @returns {number} - The contrast ratio between the current color and the color passed as an argument\n   * @memberof ColorConverter\n   * @link http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n   */\n  readability(color2: string): number {\n    const l1: number = this.getLuminance();\n    const l2: number = new ColorConverter(color2).getLuminance();\n    return (Math.max(l1, l2) + 0.05) / (Math.min(l1, l2) + 0.05);\n  }\n\n  /**\n   * Returns whether WCAG2 guidelines say that the current color is readable on the color passed as an argument\n   * @param color2 - The color to compare the current color to\n   * @returns {Record<string, Record<string, boolean>>} - Object containing the results of the readability tests\n   * @memberof ColorConverter\n   * @link http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n   * @example\n   * const color = new ColorConvertor(\"red\")\n   * color.isReadable(\"#ffffff\")\n   * // { AA: { large: true, normal: true, small: true }, AAA: { large: true, normal: true, small: true } }\n   */\n  isReadable(color2: string): Record<string, Record<string, boolean>> {\n    const readability = this.readability(color2);\n    return {\n      AA: {\n        large: readability >= 3,\n        normal: readability >= 4.5,\n        small: readability >= 7,\n      },\n      AAA: {\n        large: readability >= 4.5,\n        normal: readability >= 7,\n        small: readability >= 7,\n      },\n    };\n  }\n}\n\nexport default ColorConverter;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAYA,SACEA,kBAAkB,EAClBC,kBAAkB,EAClBC,SAAS,EACTC,kBAAkB,EAClBC,SAAS,EACTC,kBAAkB,EAClBC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,UAAU,EACVC,gBAAgB,QACX,qBAAqB;AAC5B,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SACEC,mBAAmB,EACnBC,kBAAkB,EAClBC,WAAW,QACN,mBAAmB;AAC1B,OAAOC,WAAW,IAAIC,cAAc,QAAQ,qBAAqB;AAEjE,MAAMC,cAAc,CAAC;EAKnBC,WAAWA,CAACC,UAAmB,EAAE;IAC/B,IAAI,CAACC,WAAW,GAAGD,UAAU,IAAIE,SAAS,CAAC,CAAC;IAC5C,IAAI,CAACC,SAAS,GAAGX,WAAW,CAAC,IAAI,CAACS,WAAW,CAAC,CAAC,CAAC;IAChD,IAAI,CAACG,OAAO,GAAGtB,SAAS,CAAC,IAAI,CAACqB,SAAS,CAAC,CAAC,CAAC;EAC5C;EAEAE,QAAQA,CAAA,EAAW;IACjB,OAAO,IAAI,CAACJ,WAAW,IAAI,EAAE;EAC/B;EAEAK,WAAWA,CAAA,EAAiB;IAC1B,OAAO,IAAI,CAACH,SAAS;EACvB;EAEAI,SAASA,CAAA,EAAc;IACrB,OAAO,IAAI,CAACH,OAAO;EACrB;EAEAI,QAAQA,CAACR,UAAkB,EAAQ;IACjC,IAAI,CAACC,WAAW,GAAGD,UAAU;EAC/B;EAEAS,WAAWA,CAACC,QAAsB,EAAQ;IACxC,IAAI,CAACP,SAAS,GAAGO,QAAQ;EAC3B;EAEAC,SAASA,CAACC,MAAiB,EAAQ;IACjC,IAAI,CAACR,OAAO,GAAGQ,MAAM;EACvB;EAEAC,QAAQA,CAACC,KAAa,EAAQ;IAC5B,IAAI,CAACN,QAAQ,CAACM,KAAK,CAAC;IACpB,IAAI,CAACL,WAAW,CAACjB,WAAW,CAAC,IAAI,CAACa,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC9C,IAAI,CAACM,SAAS,CAAC7B,SAAS,CAAC,IAAI,CAACwB,WAAW,CAAC,CAAC,CAAC,CAAC;EAC/C;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACES,OAAOA,CAAA,EAAY;IACjB,OAAO,IAAI,CAACT,WAAW,CAAC,CAAC,CAACU,KAAK,KAAKd,SAAS;EAC/C;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEe,KAAKA,CAAA,EAAc;IACjB,OAAOrC,kBAAkB,CAAC,IAAI,CAAC2B,SAAS,CAAC,CAAC,CAAC;EAC7C;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEW,WAAWA,CAAA,EAAW;IACpB,MAAM;MAAEC,CAAC;MAAEC,CAAC;MAAEC,CAAC;MAAEC;IAAE,CAAC,GAAG,IAAI,CAACL,KAAK,CAAC,CAAC;IACnC,OAAQ,GAAEK,CAAC,KAAKpB,SAAS,GAAG,MAAM,GAAG,KAAM,IAAGiB,CAAE,KAAIC,CAAE,KAAIC,CAAE,GAAEC,CAAC,KAAKpB,SAAS,GAAI,KAAIoB,CAAE,EAAC,GAAG,EAAG,GAAE;EAClG;EAEAC,eAAeA,CAAA,EAAc;IAC3B,OAAO,IAAI,CAAChB,SAAS,CAAC,CAAC;EACzB;EAEAiB,qBAAqBA,CAAA,EAAW;IAC9B,MAAM;MAAEL,CAAC;MAAEC,CAAC;MAAEC,CAAC;MAAEC;IAAE,CAAC,GAAG,IAAI,CAACf,SAAS,CAAC,CAAC;IACvC,OAAQ,GAAEe,CAAC,KAAKpB,SAAS,GAAG,MAAM,GAAG,KAAM,IAAGiB,CAAE,KAAIC,CAAE,KAAIC,CAAE,GAAEC,CAAC,KAAKpB,SAAS,GAAI,KAAIoB,CAAE,EAAC,GAAG,EAAG,GAAE;EAClG;;EAEA;EACAG,SAASA,CAAA,EAAW;IAClB,OAAO,iBAAiB;EAC1B;;EAEA;EACAC,iBAAiBA,CAAA,EAAW;IAC1B,OAAO,iBAAiB;EAC1B;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,KAAKA,CAAA,EAAc;IACjB,OAAO1C,kBAAkB,CAAC,IAAI,CAACsB,SAAS,CAAC,CAAC,CAAC;EAC7C;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEqB,WAAWA,CAAA,EAAW;IACpB,MAAM;MAAEC,CAAC;MAAEC,CAAC;MAAEC;IAAE,CAAC,GAAG,IAAI,CAACJ,KAAK,CAAC,CAAC;IAChC,OAAQ,OAAME,CAAE,KAAIC,CAAE,MAAKC,CAAE,IAAG;EAClC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,KAAKA,CAAA,EAAc;IACjB,OAAOnD,kBAAkB,CAAC,IAAI,CAAC0B,SAAS,CAAC,CAAC,CAAC;EAC7C;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE0B,WAAWA,CAAA,EAAW;IACpB,MAAM;MAAEJ,CAAC;MAAEC,CAAC;MAAEI;IAAE,CAAC,GAAGrD,kBAAkB,CAAC,IAAI,CAAC0B,SAAS,CAAC,CAAC,CAAC;IACxD,OAAQ,OAAMsB,CAAE,KAAIC,CAAE,MAAKI,CAAE,IAAG;EAClC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,KAAKA,CAAA,EAAW;IACd,OAAO9C,QAAQ,CAACT,kBAAkB,CAAC,IAAI,CAAC2B,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;EAC7D;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE6B,WAAWA,CAAA,EAAW;IACpB,OAAQ,IAAG,IAAI,CAACD,KAAK,CAAC,CAAE,EAAC;EAC3B;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEE,MAAMA,CAAA,EAAW;IACf,MAAM;MAAElB,CAAC;MAAEC,CAAC;MAAEC;IAAE,CAAC,GAAGzC,kBAAkB,CAAC,IAAI,CAAC2B,SAAS,CAAC,CAAC,CAAC;IACxD,MAAMe,CAAC,GAAG,IAAI,CAACgB,QAAQ,CAAC,CAAC;IACzB,OAAOhD,UAAU,CAAC;MAAE6B,CAAC;MAAEC,CAAC;MAAEC,CAAC;MAAEC;IAAE,CAAC,CAAC;EACnC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEiB,YAAYA,CAAA,EAAW;IACrB,OAAQ,IAAG,IAAI,CAACF,MAAM,CAAC,CAAE,EAAC;EAC5B;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEG,KAAKA,CAAA,EAAe;IAClB,OAAOzD,kBAAkB,CAAC,IAAI,CAACwB,SAAS,CAAC,CAAC,CAAC;EAC7C;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEkC,MAAMA,CAAA,EAAe;IACnB,OAAOzD,SAAS,CAAC,IAAI,CAACwD,KAAK,CAAC,CAAC,CAAC;EAChC;;EAEA;AACF;AACA;AACA;AACA;;EAGE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEE,KAAKA,CAAA,EAAc;IACjB,OAAOxD,QAAQ,CAAC,IAAI,CAACqB,SAAS,CAAC,CAAC,CAAC;EACnC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEoC,WAAWA,CAAA,EAAW;IACpB,MAAM;MAAEC,CAAC;MAAEC,CAAC;MAAEC;IAAE,CAAC,GAAG,IAAI,CAACJ,KAAK,CAAC,CAAC;IAChC,OAAQ,OAAME,CAAE,KAAIC,CAAE,KAAIC,CAAE,GAAE;EAChC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,KAAKA,CAAA,EAAc;IACjB,OAAO5D,QAAQ,CAAC,IAAI,CAACuD,KAAK,CAAC,CAAC,CAAC;EAC/B;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEM,WAAWA,CAAA,EAAW;IACpB,MAAM;MAAEd,CAAC;MAAEZ,CAAC;MAAED;IAAE,CAAC,GAAG,IAAI,CAAC0B,KAAK,CAAC,CAAC;IAChC,OAAQ,OAAMb,CAAE,KAAIZ,CAAE,KAAID,CAAE,GAAE;EAChC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE4B,KAAKA,CAAA,EAAc;IACjB,OAAO7D,QAAQ,CAAC,IAAI,CAAC2D,KAAK,CAAC,CAAC,CAAC;EAC/B;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEG,WAAWA,CAAA,EAAW;IACpB,MAAM;MAAEhB,CAAC;MAAEiB,CAAC;MAAEtB;IAAE,CAAC,GAAG,IAAI,CAACoB,KAAK,CAAC,CAAC;IAChC,OAAQ,OAAMf,CAAE,KAAIiB,CAAE,KAAItB,CAAE,GAAE;EAChC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEuB,aAAaA,CAAA,EAAW;IACtB,OAAO3D,mBAAmB,CAACb,kBAAkB,CAAC,IAAI,CAAC2B,SAAS,CAAC,CAAC,CAAC,CAAC;EAClE;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE8C,YAAYA,CAAA,EAAW;IACrB,OAAO3D,kBAAkB,CAAC,IAAI,CAACa,SAAS,CAAC,CAAC,CAAC;EAC7C;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE+C,MAAMA,CAAA,EAAY;IAChB,OAAO,IAAI,CAACF,aAAa,CAAC,CAAC,GAAG,GAAG;EACnC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEG,OAAOA,CAAA,EAAY;IACjB,OAAO,IAAI,CAACH,aAAa,CAAC,CAAC,IAAI,GAAG;EACpC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEI,SAASA,CAAA,EAAuB;IAC9B,OAAO,IAAI,CAAClD,WAAW,CAAC,CAAC,CAACmD,MAAM;EAClC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEnB,QAAQA,CAAA,EAAuB;IAC7B,IAAI;MAAEhB;IAAE,CAAC,GAAG,IAAI,CAACf,SAAS,CAAC,CAAC;IAC5Be,CAAC,GAAGA,CAAC,IAAI,CAAC,CAAC,CAAC;IACZ,OAAOA,CAAC;EACV;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEoC,QAAQA,CAACC,QAAgB,EAAQ;IAC/B,IAAIA,QAAQ,GAAG,CAAC,IAAIA,QAAQ,GAAG,CAAC,EAAE;MAChC,MAAM,IAAIC,KAAK,CAAC,qCAAqC,CAAC;IACxD;IACA,MAAM;MAAEzC,CAAC;MAAEC,CAAC;MAAEC;IAAE,CAAC,GAAG,IAAI,CAACd,SAAS,CAAC,CAAC;IACpC,MAAMe,CAAC,GAAGqC,QAAQ;IAClB,IAAI,CAAChD,SAAS,CAAC;MAAEQ,CAAC;MAAEC,CAAC;MAAEC,CAAC;MAAEC;IAAE,CAAC,CAAC;EAChC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEuC,MAAMA,CAAA,EAAuB;IAC3B,MAAMC,GAAG,GAAGnE,WAAW,CAAC,IAAI,CAACwC,KAAK,CAAC,CAAC,CAAC;IACrC,KAAK,MAAMrB,KAAK,IAAIlB,WAAW,EAAE;MAC/B,IAAIA,WAAW,CAACkB,KAAK,CAAC,KAAKgD,GAAG,EAAE;QAC9B,OAAOhD,KAAK;MACd;IACF;IACA,OAAOZ,SAAS;EAClB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE6D,mBAAmBA,CAAA,EAAW;IAC5B,MAAMC,GAAG,GAAGpF,kBAAkB,CAAC,IAAI,CAAC2B,SAAS,CAAC,CAAC,CAAC;IAChD,OAAOhB,gBAAgB,CAACyE,GAAG,EAAEnE,cAAc,CAAC;EAC9C;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEoE,eAAeA,CAAA,EAAc;IAC3B,MAAM;MAAE9C,CAAC;MAAEC,CAAC;MAAEC,CAAC;MAAEC;IAAE,CAAC,GAAG,IAAI,CAACf,SAAS,CAAC,CAAC;IACvC,OAAO;MACLY,CAAC,EAAEA,CAAC,KAAKjB,SAAS,GAAGiB,CAAC,GAAG,GAAG,GAAGjB,SAAS;MACxCkB,CAAC,EAAEA,CAAC,KAAKlB,SAAS,GAAGkB,CAAC,GAAG,GAAG,GAAGlB,SAAS;MACxCmB,CAAC,EAAEA,CAAC,KAAKnB,SAAS,GAAGmB,CAAC,GAAG,GAAG,GAAGnB,SAAS;MACxCoB,CAAC,EAAEA,CAAC,KAAKpB,SAAS,GAAG,IAAI,CAACoC,QAAQ,CAAC,CAAC,GAAGpC;IACzC,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEgE,qBAAqBA,CAAA,EAAW;IAC9B,MAAM;MAAE/C,CAAC;MAAEC,CAAC;MAAEC,CAAC;MAAEC;IAAE,CAAC,GAAG,IAAI,CAAC2C,eAAe,CAAC,CAAC;IAC7C,OAAQ,GAAE3C,CAAC,KAAKpB,SAAS,GAAG,MAAM,GAAG,KAAM,IAAGiB,CAAE,MAAKC,CAAE,MAAKC,CAAE,IAAGC,CAAC,KAAKpB,SAAS,GAAI,KAAIoB,CAAE,EAAC,GAAG,EAAG,GAAE;EACrG;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE6C,MAAMA,CAACC,MAAc,EAAW;IAC9B,OAAO,IAAI,CAAClD,WAAW,CAAC,CAAC,KAAK,IAAIpB,cAAc,CAACsE,MAAM,CAAC,CAAClD,WAAW,CAAC,CAAC;EACxE;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEmD,MAAMA,CAAA,EAAS;IACb,IAAI,CAAC5D,WAAW,CAAC;MACfgD,MAAM,EAAE,KAAK;MACbzC,KAAK,EAAE;QACLG,CAAC,EAAEmD,IAAI,CAACC,KAAK,CAACD,IAAI,CAACD,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;QAClCjD,CAAC,EAAEkD,IAAI,CAACC,KAAK,CAACD,IAAI,CAACD,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;QAClChD,CAAC,EAAEiD,IAAI,CAACC,KAAK,CAACD,IAAI,CAACD,MAAM,CAAC,CAAC,GAAG,GAAG;MACnC;IACF,CAAC,CAAC;IACF,IAAI,CAAC1D,SAAS,CAAC7B,SAAS,CAAC,IAAI,CAACwB,WAAW,CAAC,CAAC,CAAC,CAAC;EAC/C;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEkE,KAAKA,CAAA,EAAmB;IACtB,OAAO,IAAI1E,cAAc,CAAC,IAAI,CAACO,QAAQ,CAAC,CAAC,CAAC;EAC5C;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEoE,WAAWA,CAACL,MAAc,EAAU;IAClC,MAAMM,EAAU,GAAG,IAAI,CAACrB,YAAY,CAAC,CAAC;IACtC,MAAMsB,EAAU,GAAG,IAAI7E,cAAc,CAACsE,MAAM,CAAC,CAACf,YAAY,CAAC,CAAC;IAC5D,OAAO,CAACiB,IAAI,CAACM,GAAG,CAACF,EAAE,EAAEC,EAAE,CAAC,GAAG,IAAI,KAAKL,IAAI,CAACO,GAAG,CAACH,EAAE,EAAEC,EAAE,CAAC,GAAG,IAAI,CAAC;EAC9D;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEG,UAAUA,CAACV,MAAc,EAA2C;IAClE,MAAMK,WAAW,GAAG,IAAI,CAACA,WAAW,CAACL,MAAM,CAAC;IAC5C,OAAO;MACLW,EAAE,EAAE;QACFC,KAAK,EAAEP,WAAW,IAAI,CAAC;QACvBQ,MAAM,EAAER,WAAW,IAAI,GAAG;QAC1BS,KAAK,EAAET,WAAW,IAAI;MACxB,CAAC;MACDU,GAAG,EAAE;QACHH,KAAK,EAAEP,WAAW,IAAI,GAAG;QACzBQ,MAAM,EAAER,WAAW,IAAI,CAAC;QACxBS,KAAK,EAAET,WAAW,IAAI;MACxB;IACF,CAAC;EACH;AACF;AAEA,eAAe3E,cAAc"}